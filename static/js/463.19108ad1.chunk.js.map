{"version":3,"file":"static/js/463.19108ad1.chunk.js","mappings":";+FAEA,IAAIA,EAASC,OAAOC,UAAUC,eAC1BC,EAAQH,OAAOC,UAAUG,SACzBC,EAAiBL,OAAOK,eACxBC,EAAON,OAAOO,yBAEdC,EAAU,SAAiBC,GAC9B,MAA6B,oBAAlBC,MAAMF,QACTE,MAAMF,QAAQC,GAGK,mBAApBN,EAAMQ,KAAKF,IAGfG,EAAgB,SAAuBC,GAC1C,IAAKA,GAA2B,oBAApBV,EAAMQ,KAAKE,GACtB,OAAO,EAGR,IASIC,EATAC,EAAoBhB,EAAOY,KAAKE,EAAK,eACrCG,EAAmBH,EAAII,aAAeJ,EAAII,YAAYhB,WAAaF,EAAOY,KAAKE,EAAII,YAAYhB,UAAW,iBAE9G,GAAIY,EAAII,cAAgBF,IAAsBC,EAC7C,OAAO,EAMR,IAAKF,KAAOD,GAEZ,MAAsB,qBAARC,GAAuBf,EAAOY,KAAKE,EAAKC,IAInDI,EAAc,SAAqBC,EAAQC,GAC1Cf,GAAmC,cAAjBe,EAAQC,KAC7BhB,EAAec,EAAQC,EAAQC,KAAM,CACpCC,YAAY,EACZC,cAAc,EACdC,MAAOJ,EAAQK,SACfC,UAAU,IAGXP,EAAOC,EAAQC,MAAQD,EAAQK,UAK7BE,EAAc,SAAqBd,EAAKQ,GAC3C,GAAa,cAATA,EAAsB,CACzB,IAAKtB,EAAOY,KAAKE,EAAKQ,GACrB,OACM,GAAIf,EAGV,OAAOA,EAAKO,EAAKQ,GAAMG,MAIzB,OAAOX,EAAIQ,IAGZO,EAAOC,QAAU,SAASC,IACzB,IAAIV,EAASC,EAAMU,EAAKC,EAAMC,EAAaC,EACvCf,EAASgB,UAAU,GACnBC,EAAI,EACJC,EAASF,UAAUE,OACnBC,GAAO,EAaX,IAVsB,mBAAXnB,IACVmB,EAAOnB,EACPA,EAASgB,UAAU,IAAM,GAEzBC,EAAI,IAES,MAAVjB,GAAqC,kBAAXA,GAAyC,oBAAXA,KAC3DA,EAAS,IAGHiB,EAAIC,IAAUD,EAGpB,GAAe,OAFfhB,EAAUe,UAAUC,IAInB,IAAKf,KAAQD,EACZW,EAAMJ,EAAYR,EAAQE,GAItBF,KAHJa,EAAOL,EAAYP,EAASC,MAKvBiB,GAAQN,IAASpB,EAAcoB,KAAUC,EAAczB,EAAQwB,MAC9DC,GACHA,GAAc,EACdC,EAAQH,GAAOvB,EAAQuB,GAAOA,EAAM,IAEpCG,EAAQH,GAAOnB,EAAcmB,GAAOA,EAAM,GAI3Cb,EAAYC,EAAQ,CAAEE,KAAMA,EAAMI,SAAUK,EAAOQ,EAAMJ,EAAOF,MAGtC,qBAATA,GACjBd,EAAYC,EAAQ,CAAEE,KAAMA,EAAMI,SAAUO,KAQjD,OAAOb,aCjHR,IAAIoB,EAAgB,kCAEhBC,EAAgB,MAChBC,EAAmB,OAGnBC,EAAiB,yCACjBC,EAAc,QACdC,EAAc,uDACdC,EAAkB,UAGlBC,EAAa,aAMbC,EAAe,GA8OnB,SAASC,EAAKC,GACZ,OAAOA,EAAMA,EAAIC,QAAQJ,EAAYC,GAAgBA,EAlOvDnB,EAAOC,QAAU,SAASsB,EAAO/B,GAC/B,GAAqB,kBAAV+B,EACT,MAAM,IAAIC,UAAU,mCAGtB,IAAKD,EAAO,MAAO,GAEnB/B,EAAUA,GAAW,GAKrB,IAAIiC,EAAS,EACTC,EAAS,EAOb,SAASC,EAAeN,GACtB,IAAIO,EAAQP,EAAIQ,MAAMjB,GAClBgB,IAAOH,GAAUG,EAAMnB,QAC3B,IAAID,EAAIa,EAAIS,YAvCF,MAwCVJ,GAAUlB,EAAIa,EAAIZ,OAASD,EAAIkB,EAASL,EAAIZ,OAQ9C,SAASsB,IACP,IAAIC,EAAQ,CAAEC,KAAMR,EAAQC,OAAQA,GACpC,OAAO,SAASQ,GAGd,OAFAA,EAAKH,SAAW,IAAII,EAASH,GAC7BI,IACOF,GAYX,SAASC,EAASH,GAChBK,KAAKL,MAAQA,EACbK,KAAKC,IAAM,CAAEL,KAAMR,EAAQC,OAAQA,GACnCW,KAAKE,OAAS/C,EAAQ+C,OAMxBJ,EAAS9D,UAAUmE,QAAUjB,EAE7B,IAAIkB,EAAa,GAQjB,SAASC,EAAMC,GACb,IAAIC,EAAM,IAAIC,MACZrD,EAAQ+C,OAAS,IAAMd,EAAS,IAAMC,EAAS,KAAOiB,GAQxD,GANAC,EAAIE,OAASH,EACbC,EAAIG,SAAWvD,EAAQ+C,OACvBK,EAAIX,KAAOR,EACXmB,EAAIlB,OAASA,EACbkB,EAAIL,OAAShB,GAET/B,EAAQwD,OAGV,MAAMJ,EAFNH,EAAWQ,KAAKL,GAYpB,SAASf,EAAMqB,GACb,IAAIC,EAAID,EAAGE,KAAK7B,GAChB,GAAK4B,EAAL,CACA,IAAI9B,EAAM8B,EAAE,GAGZ,OAFAxB,EAAeN,GACfE,EAAQA,EAAM8B,MAAMhC,EAAIZ,QACjB0C,GAMT,SAASf,IACPP,EAAMhB,GASR,SAASyC,EAASC,GAChB,IAAIC,EAEJ,IADAD,EAAQA,GAAS,GACTC,EAAIC,MACA,IAAND,GACFD,EAAMN,KAAKO,GAGf,OAAOD,EAST,SAASE,IACP,IAAIC,EAAM3B,IACV,GAnJgB,KAmJKR,EAAMoC,OAAO,IAlJvB,KAkJyCpC,EAAMoC,OAAO,GAAjE,CAGA,IADA,IAAInD,EAAI,EAENW,GAAgBI,EAAMoC,OAAOnD,KAtJpB,KAuJIe,EAAMoC,OAAOnD,IAxJZ,KAwJmCe,EAAMoC,OAAOnD,EAAI,OAEhEA,EAIJ,GAFAA,GAAK,EAEDW,IAAiBI,EAAMoC,OAAOnD,EAAI,GACpC,OAAOkC,EAAM,0BAGf,IAAIrB,EAAME,EAAM8B,MAAM,EAAG7C,EAAI,GAM7B,OALAkB,GAAU,EACVC,EAAeN,GACfE,EAAQA,EAAM8B,MAAM7C,GACpBkB,GAAU,EAEHgC,EAAI,CACTE,KApKa,UAqKbH,QAASpC,KAUb,SAASwC,IACP,IAAIH,EAAM3B,IAGN+B,EAAOjC,EAAMf,GACjB,GAAKgD,EAAL,CAIA,GAHAL,KAGK5B,EAAMd,GAAc,OAAO2B,EAAM,wBAGtC,IAAIqB,EAAMlC,EAAMb,GAEZgD,EAAMN,EAAI,CACZE,KA7LiB,cA8LjBK,SAAU7C,EAAK0C,EAAK,GAAGxC,QAAQX,EAAeQ,IAC9CvB,MAAOmE,EACH3C,EAAK2C,EAAI,GAAGzC,QAAQX,EAAeQ,IACnCA,IAMN,OAFAU,EAAMZ,GAEC+C,GA0BT,OADA5B,IAjBA,WACE,IAKI8B,EALAC,EAAQ,GAMZ,IAJAb,EAASa,GAIDD,EAAOL,MACA,IAATK,IACFC,EAAMlB,KAAKiB,GACXZ,EAASa,IAIb,OAAOA,EAIFC,gCChPT,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3CvE,EAAOC,QAAU,WACf,SAASyE,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWX,EAAf,CAIA,IAAIzB,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAInD,KAAO,sBACLmD,GAGR,SAASqC,IACP,OAAOP,EAFTA,EAAKQ,WAAaR,EAMlB,IAAIS,EAAiB,CACnBC,MAAOV,EACPW,OAAQX,EACRY,KAAMZ,EACNa,KAAMb,EACNc,OAAQd,EACRe,OAAQf,EACRgB,OAAQhB,EACRiB,OAAQjB,EAERkB,IAAKlB,EACLmB,QAASZ,EACTa,QAASpB,EACTqB,YAAarB,EACbsB,WAAYf,EACZ/C,KAAMwC,EACNuB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgB9B,EAChBC,kBAAmBF,GAKrB,OAFAY,EAAeoB,UAAYpB,EAEpBA,mBC9CPnF,EAAOC,QAAUqE,EAAQ,IAARA,0BCNnBtE,EAAOC,QAFoB,0ECAd,IAA4buG,EAAxbC,EAAEC,OAAOC,IAAI,iBAAiBnD,EAAEkD,OAAOC,IAAI,gBAAgBC,EAAEF,OAAOC,IAAI,kBAAkBE,EAAEH,OAAOC,IAAI,qBAAqBG,EAAEJ,OAAOC,IAAI,kBAAkBI,EAAEL,OAAOC,IAAI,kBAAkBK,EAAEN,OAAOC,IAAI,iBAAiBM,EAAEP,OAAOC,IAAI,wBAAwBO,EAAER,OAAOC,IAAI,qBAAqBxD,EAAEuD,OAAOC,IAAI,kBAAkBQ,EAAET,OAAOC,IAAI,uBAAuBS,EAAEV,OAAOC,IAAI,cAAcU,EAAEX,OAAOC,IAAI,cAAcW,EAAEZ,OAAOC,IAAI,mBACtb,SAASY,EAAEC,GAAG,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,IAAIC,EAAED,EAAEE,SAAS,OAAOD,GAAG,KAAKhB,EAAE,OAAOe,EAAEA,EAAE5D,MAAQ,KAAKgD,EAAE,KAAKE,EAAE,KAAKD,EAAE,KAAK1D,EAAE,KAAKgE,EAAE,OAAOK,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAEE,UAAY,KAAKT,EAAE,KAAKD,EAAE,KAAKE,EAAE,KAAKG,EAAE,KAAKD,EAAE,KAAKL,EAAE,OAAOS,EAAE,QAAQ,OAAOC,GAAG,KAAKjE,EAAE,OAAOiE,IADqMjB,EAAEE,OAAOC,IAAI,0BAC9M1G,EAAQ0H,gBAAgBX,EAAE/G,EAAQ2H,gBAAgBb,EAAE9G,EAAQ4H,QAAQpB,EAAExG,EAAQ6H,WAAWZ,EAAEjH,EAAQ8H,SAASnB,EAAE3G,EAAQ+H,KAAKX,EAAEpH,EAAQgI,KAAKb,EAAEnH,EAAQiI,OAAO1E,EAAEvD,EAAQkI,SAASrB,EAAE7G,EAAQmI,WAAWvB,EAAE5G,EAAQoI,SAASlF,EAChelD,EAAQqI,aAAanB,EAAElH,EAAQsI,YAAY,WAAW,OAAM,GAAItI,EAAQuI,iBAAiB,WAAW,OAAM,GAAIvI,EAAQwI,kBAAkB,SAASjB,GAAG,OAAOD,EAAEC,KAAKR,GAAG/G,EAAQyI,kBAAkB,SAASlB,GAAG,OAAOD,EAAEC,KAAKT,GAAG9G,EAAQ0I,UAAU,SAASnB,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEE,WAAWjB,GAAGxG,EAAQ2I,aAAa,SAASpB,GAAG,OAAOD,EAAEC,KAAKN,GAAGjH,EAAQ4I,WAAW,SAASrB,GAAG,OAAOD,EAAEC,KAAKZ,GAAG3G,EAAQ6I,OAAO,SAAStB,GAAG,OAAOD,EAAEC,KAAKH,GAAGpH,EAAQ8I,OAAO,SAASvB,GAAG,OAAOD,EAAEC,KAAKJ,GACtenH,EAAQ+I,SAAS,SAASxB,GAAG,OAAOD,EAAEC,KAAKhE,GAAGvD,EAAQgJ,WAAW,SAASzB,GAAG,OAAOD,EAAEC,KAAKV,GAAG7G,EAAQiJ,aAAa,SAAS1B,GAAG,OAAOD,EAAEC,KAAKX,GAAG5G,EAAQkJ,WAAW,SAAS3B,GAAG,OAAOD,EAAEC,KAAKrE,GAAGlD,EAAQmJ,eAAe,SAAS5B,GAAG,OAAOD,EAAEC,KAAKL,GACjPlH,EAAQoJ,mBAAmB,SAAS7B,GAAG,MAAM,kBAAkBA,GAAG,oBAAoBA,GAAGA,IAAIZ,GAAGY,IAAIV,GAAGU,IAAIX,GAAGW,IAAIrE,GAAGqE,IAAIL,GAAGK,IAAIF,GAAG,kBAAkBE,GAAG,OAAOA,IAAIA,EAAEE,WAAWL,GAAGG,EAAEE,WAAWN,GAAGI,EAAEE,WAAWX,GAAGS,EAAEE,WAAWV,GAAGQ,EAAEE,WAAWR,GAAGM,EAAEE,WAAWlB,QAAG,IAASgB,EAAE8B,cAAoBrJ,EAAQsJ,OAAOhC,+BCV/SvH,EAAOC,QAAU,EAAjBD,sBCHF,IAAIwJ,EAAQlF,EAAQ,MAapB,SAASmF,EAAclI,EAAOmI,GAC5B,IAKI7F,EALA8F,EAAS,KACb,IAAKpI,GAA0B,kBAAVA,EACnB,OAAOoI,EAST,IALA,IAEI1F,EACArE,EAHAwE,EAAeoF,EAAMjI,GACrBqI,EAAkC,oBAAbF,EAIhBlJ,EAAI,EAAGqJ,EAAMzF,EAAa3D,OAAQD,EAAIqJ,EAAKrJ,IAElDyD,GADAJ,EAAcO,EAAa5D,IACJyD,SACvBrE,EAAQiE,EAAYjE,MAEhBgK,EACFF,EAASzF,EAAUrE,EAAOiE,GACjBjE,IACT+J,IAAWA,EAAS,IACpBA,EAAO1F,GAAYrE,GAIvB,OAAO+J,EAGT3J,EAAOC,QAAUwJ,EACjBzJ,EAAOC,QAAPD,QAAyByJ,YCnCzBzJ,EAAOC,QAAU,SAAmBhB,GAClC,OAAc,MAAPA,GAAkC,MAAnBA,EAAII,aACY,oBAA7BJ,EAAII,YAAYyK,UAA2B7K,EAAII,YAAYyK,SAAS7K,cCF/Ee,EAAOC,QAAU,SAAmBhB,GAClC,OAAc,MAAPA,GAAkC,MAAnBA,EAAII,aACY,oBAA7BJ,EAAII,YAAYyK,UAA2B7K,EAAII,YAAYyK,SAAS7K,4DCPhE,SAAS8K,EAAKC,EAAIC,GAC/B,OAAO,WACL,OAAOD,EAAGE,MAAMD,EAAS1J,oHCE7B,MAAO/B,SAAQA,GAAIJ,OAAOC,WACpB,eAAC8L,GAAkB/L,OAEnBgM,GAAUC,EAGbjM,OAAOkM,OAAO,MAHQC,IACrB,MAAMlJ,EAAM7C,EAASO,KAAKwL,GAC1B,OAAOF,EAAMhJ,KAASgJ,EAAMhJ,GAAOA,EAAIgC,MAAM,GAAI,GAAGmH,iBAFzC,IAACH,EAKhB,MAAMI,EAAc7G,IAClBA,EAAOA,EAAK4G,cACJD,GAAUH,EAAOG,KAAW3G,GAGhC8G,EAAa9G,GAAQ2G,UAAgBA,IAAU3G,GAS/C,QAAChF,GAAWE,MASZ6L,EAAcD,EAAW,aAqB/B,MAAME,EAAgBH,EAAW,eA2BjC,MAAMI,EAAWH,EAAW,UAQtBI,EAAaJ,EAAW,YASxBK,EAAWL,EAAW,UAStBM,EAAYT,GAAoB,OAAVA,GAAmC,kBAAVA,EAiB/CvL,EAAiB+E,IACrB,GAAoB,WAAhBqG,EAAOrG,GACT,OAAO,EAGT,MAAM1F,EAAY8L,EAAepG,GACjC,OAAsB,OAAd1F,GAAsBA,IAAcD,OAAOC,WAAkD,OAArCD,OAAO+L,eAAe9L,OAA0BqI,OAAOuE,eAAelH,MAAU2C,OAAOgD,YAAY3F,IAU/JmH,EAAST,EAAW,QASpBU,EAASV,EAAW,QASpBW,EAASX,EAAW,QASpBY,EAAaZ,EAAW,YAsCxBa,EAAoBb,EAAW,mBA2BrC,SAASc,EAAQtM,EAAK+K,GAA+B,IAM/CxJ,EACA0G,GAPoB,WAACsE,GAAa,GAAa,uDAAJ,GAE/C,GAAY,OAARvM,GAA+B,qBAARA,EAa3B,GALmB,kBAARA,IAETA,EAAM,CAACA,IAGLL,EAAQK,GAEV,IAAKuB,EAAI,EAAG0G,EAAIjI,EAAIwB,OAAQD,EAAI0G,EAAG1G,IACjCwJ,EAAGjL,KAAK,KAAME,EAAIuB,GAAIA,EAAGvB,OAEtB,CAEL,MAAMwM,EAAOD,EAAapN,OAAOsN,oBAAoBzM,GAAOb,OAAOqN,KAAKxM,GAClE4K,EAAM4B,EAAKhL,OACjB,IAAIvB,EAEJ,IAAKsB,EAAI,EAAGA,EAAIqJ,EAAKrJ,IACnBtB,EAAMuM,EAAKjL,GACXwJ,EAAGjL,KAAK,KAAME,EAAIC,GAAMA,EAAKD,IAKnC,SAAS0M,EAAQ1M,EAAKC,GACpBA,EAAMA,EAAIsL,cACV,MAAMiB,EAAOrN,OAAOqN,KAAKxM,GACzB,IACI2M,EADApL,EAAIiL,EAAKhL,OAEb,KAAOD,KAAM,GAEX,GADAoL,EAAOH,EAAKjL,GACRtB,IAAQ0M,EAAKpB,cACf,OAAOoB,EAGX,OAAO,KAGT,MAAMC,EAEsB,qBAAfC,WAAmCA,WACvB,qBAATC,KAAuBA,KAA0B,qBAAXC,OAAyBA,OAASC,OAGlFC,EAAoBC,IAAaxB,EAAYwB,IAAYA,IAAYN,EAoD3E,MA8HMO,GAAgBC,EAKG,qBAAfC,YAA8BnC,EAAemC,YAH9C/B,GACE8B,GAAc9B,aAAiB8B,GAHrB,IAACA,EAetB,MAiCME,EAAa9B,EAAW,mBAWxBnM,EAAiB,CAAC,QAAC,eAACA,GAAF,QAAsB,CAACW,EAAK6E,IAASxF,EAAeS,KAAKE,EAAK6E,IAA/D,CAAsE1F,OAAOC,WAS9FmO,EAAW/B,EAAW,UAEtBgC,EAAoB,CAACxN,EAAKyN,KAC9B,MAAMC,EAAcvO,OAAOwO,0BAA0B3N,GAC/C4N,EAAqB,GAE3BtB,EAAQoB,GAAa,CAACG,EAAYrN,KAChC,IAAIuE,GAC2C,KAA1CA,EAAM0I,EAAQI,EAAYrN,EAAMR,MACnC4N,EAAmBpN,GAAQuE,GAAO8I,MAItC1O,OAAO2O,iBAAiB9N,EAAK4N,IAuDzBG,EAAQ,6BAERC,EAAQ,aAERC,EAAW,CACfD,MAAAA,EACAD,MAAAA,EACAG,YAAaH,EAAQA,EAAMI,cAAgBH,GAwB7C,MA+BMI,EAAY5C,EAAW,iBAK7B,GACE7L,QAAAA,EACAgM,cAAAA,EACAd,SAnnBF,SAAkB/F,GAChB,OAAe,OAARA,IAAiB4G,EAAY5G,IAA4B,OAApBA,EAAI1E,cAAyBsL,EAAY5G,EAAI1E,cACpFyL,EAAW/G,EAAI1E,YAAYyK,WAAa/F,EAAI1E,YAAYyK,SAAS/F,IAknBtEuJ,WArekB/C,IAClB,IAAIgD,EACJ,OAAOhD,IACgB,oBAAbiD,UAA2BjD,aAAiBiD,UAClD1C,EAAWP,EAAMkD,UACY,cAA1BF,EAAOnD,EAAOG,KAEL,WAATgD,GAAqBzC,EAAWP,EAAM/L,WAAkC,sBAArB+L,EAAM/L,cA+dhEkP,kBA/lBF,SAA2B3J,GACzB,IAAI4J,EAMJ,OAJEA,EAD0B,qBAAhBC,aAAiCA,YAAYC,OAC9CD,YAAYC,OAAO9J,GAElBA,GAASA,EAAI+J,QAAYlD,EAAc7G,EAAI+J,QAEhDH,GAylBP9C,SAAAA,EACAE,SAAAA,EACAgD,UA/iBgBxD,IAAmB,IAAVA,IAA4B,IAAVA,EAgjB3CS,SAAAA,EACAhM,cAAAA,EACA2L,YAAAA,EACAO,OAAAA,EACAC,OAAAA,EACAC,OAAAA,EACAoB,SAAAA,EACA1B,WAAAA,EACAkD,SA3fgBjK,GAAQiH,EAASjH,IAAQ+G,EAAW/G,EAAIkK,MA4fxD3C,kBAAAA,EACAc,aAAAA,EACAf,WAAAA,EACAE,QAAAA,EACA2C,MA/XF,SAASA,IACP,MAAM,SAACC,GAAYjC,EAAiB7J,OAASA,MAAQ,GAC/CsL,EAAS,GACTS,EAAc,CAACrK,EAAK7E,KACxB,MAAMmP,EAAYF,GAAYxC,EAAQgC,EAAQzO,IAAQA,EAClDF,EAAc2O,EAAOU,KAAerP,EAAc+E,GACpD4J,EAAOU,GAAaH,EAAMP,EAAOU,GAAYtK,GACpC/E,EAAc+E,GACvB4J,EAAOU,GAAaH,EAAM,GAAInK,GACrBnF,EAAQmF,GACjB4J,EAAOU,GAAatK,EAAIV,QAExBsK,EAAOU,GAAatK,GAIxB,IAAK,IAAIvD,EAAI,EAAG0G,EAAI3G,UAAUE,OAAQD,EAAI0G,EAAG1G,IAC3CD,UAAUC,IAAM+K,EAAQhL,UAAUC,GAAI4N,GAExC,OAAOT,GA6WPzN,OAhWa,SAACsH,EAAGf,EAAGwD,GAA8B,IAArB,WAACuB,GAAoB,uDAAP,GAQ3C,OAPAD,EAAQ9E,GAAG,CAAC1C,EAAK7E,KACX+K,GAAWa,EAAW/G,GACxByD,EAAEtI,GAAO6K,EAAKhG,EAAKkG,GAEnBzC,EAAEtI,GAAO6E,IAEV,CAACyH,WAAAA,IACGhE,GAyVPpG,KA5dYC,GAAQA,EAAID,KACxBC,EAAID,OAASC,EAAIC,QAAQ,qCAAsC,IA4d/DgN,SAhVgB9L,IACc,QAA1BA,EAAQ+L,WAAW,KACrB/L,EAAUA,EAAQa,MAAM,IAEnBb,GA6UPgM,SAjUe,CAACnP,EAAaoP,EAAkB9J,EAAOgI,KACtDtN,EAAYhB,UAAYD,OAAOkM,OAAOmE,EAAiBpQ,UAAWsO,GAClEtN,EAAYhB,UAAUgB,YAAcA,EACpCjB,OAAOK,eAAeY,EAAa,QAAS,CAC1CO,MAAO6O,EAAiBpQ,YAE1BsG,GAASvG,OAAOsQ,OAAOrP,EAAYhB,UAAWsG,IA4T9CgK,aAhTmB,CAACC,EAAWC,EAASC,EAAQC,KAChD,IAAIpK,EACAnE,EACAsD,EACJ,MAAMkL,EAAS,GAIf,GAFAH,EAAUA,GAAW,GAEJ,MAAbD,EAAmB,OAAOC,EAE9B,EAAG,CAGD,IAFAlK,EAAQvG,OAAOsN,oBAAoBkD,GACnCpO,EAAImE,EAAMlE,OACHD,KAAM,GACXsD,EAAOa,EAAMnE,GACPuO,IAAcA,EAAWjL,EAAM8K,EAAWC,IAAcG,EAAOlL,KACnE+K,EAAQ/K,GAAQ8K,EAAU9K,GAC1BkL,EAAOlL,IAAQ,GAGnB8K,GAAuB,IAAXE,GAAoB3E,EAAeyE,SACxCA,KAAeE,GAAUA,EAAOF,EAAWC,KAAaD,IAAcxQ,OAAOC,WAEtF,OAAOwQ,GA0RPzE,OAAAA,EACAK,WAAAA,EACAwE,SAhRe,CAAC5N,EAAK6N,EAAcnN,KACnCV,EAAM8N,OAAO9N,SACI+N,IAAbrN,GAA0BA,EAAWV,EAAIZ,UAC3CsB,EAAWV,EAAIZ,QAEjBsB,GAAYmN,EAAazO,OACzB,MAAM4O,EAAYhO,EAAIiO,QAAQJ,EAAcnN,GAC5C,OAAsB,IAAfsN,GAAoBA,IAActN,GA0QzCwN,QA/PehF,IACf,IAAKA,EAAO,OAAO,KACnB,GAAI3L,EAAQ2L,GAAQ,OAAOA,EAC3B,IAAI/J,EAAI+J,EAAM9J,OACd,IAAKsK,EAASvK,GAAI,OAAO,KACzB,MAAM3B,EAAM,IAAIC,MAAM0B,GACtB,KAAOA,KAAM,GACX3B,EAAI2B,GAAK+J,EAAM/J,GAEjB,OAAO3B,GAuPP2Q,aA5NmB,CAACvQ,EAAK+K,KACzB,MAEMN,GAFYzK,GAAOA,EAAIyH,OAAOgD,WAET3K,KAAKE,GAEhC,IAAI0O,EAEJ,MAAQA,EAASjE,EAAS+F,UAAY9B,EAAO+B,MAAM,CACjD,MAAMC,EAAOhC,EAAO/N,MACpBoK,EAAGjL,KAAKE,EAAK0Q,EAAK,GAAIA,EAAK,MAoN7BC,SAxMe,CAACC,EAAQxO,KACxB,IAAIyO,EACJ,MAAMjR,EAAM,GAEZ,KAAwC,QAAhCiR,EAAUD,EAAOzM,KAAK/B,KAC5BxC,EAAIoE,KAAK6M,GAGX,OAAOjR,GAiMP0N,WAAAA,EACAjO,eAnCa,EAoCbyR,WAAYzR,EACZmO,kBAAAA,EACAuD,cAxJqB/Q,IACrBwN,EAAkBxN,GAAK,CAAC6N,EAAYrN,KAElC,GAAIqL,EAAW7L,KAA6D,IAArD,CAAC,YAAa,SAAU,UAAUqQ,QAAQ7P,GAC/D,OAAO,EAGT,MAAMG,EAAQX,EAAIQ,GAEbqL,EAAWlL,KAEhBkN,EAAWpN,YAAa,EAEpB,aAAcoN,EAChBA,EAAWhN,UAAW,EAInBgN,EAAWmD,MACdnD,EAAWmD,IAAM,KACf,MAAMpN,MAAM,qCAAwCpD,EAAO,YAqIjEyQ,YA/HkB,CAACC,EAAeC,KAClC,MAAMnR,EAAM,GAENoR,EAAUxR,IACdA,EAAI0M,SAAQ3L,IACVX,EAAIW,IAAS,MAMjB,OAFAhB,EAAQuR,GAAiBE,EAAOF,GAAiBE,EAAOlB,OAAOgB,GAAeG,MAAMF,IAE7EnR,GAqHPsR,YAjMkBlP,GACXA,EAAImJ,cAAclJ,QAAQ,yBAC/B,SAAkB6B,EAAGqN,EAAIC,GACvB,OAAOD,EAAGpD,cAAgBqD,KA+L9BC,KAnHW,OAoHXC,eAlHqB,CAAC/Q,EAAOgR,KAC7BhR,GAASA,EACFiR,OAAOC,SAASlR,GAASA,EAAQgR,GAiHxCjF,QAAAA,EACAM,OAAQJ,EACRK,iBAAAA,EACAgB,SAAAA,EACA6D,eAxGqB,WAAgD,IAA/CC,EAA+C,uDAAxC,GAAIC,EAAoC,uDAAzB/D,EAASC,YACjD9L,EAAM,GACV,MAAM,OAACZ,GAAUwQ,EACjB,KAAOD,KACL3P,GAAO4P,EAASC,KAAKC,SAAW1Q,EAAO,GAGzC,OAAOY,GAkGP+P,oBAxFF,SAA6B7G,GAC3B,SAAUA,GAASO,EAAWP,EAAMkD,SAAyC,aAA9BlD,EAAM7D,OAAOuE,cAA+BV,EAAM7D,OAAOgD,YAwFxG2H,aArFoBpS,IACpB,MAAMqS,EAAQ,IAAIxS,MAAM,IAElByS,EAAQ,CAAChP,EAAQ/B,KAErB,GAAIwK,EAASzI,GAAS,CACpB,GAAI+O,EAAMhC,QAAQ/M,IAAW,EAC3B,OAGF,KAAK,WAAYA,GAAS,CACxB+O,EAAM9Q,GAAK+B,EACX,MAAMhD,EAASX,EAAQ2D,GAAU,GAAK,GAStC,OAPAgJ,EAAQhJ,GAAQ,CAAC3C,EAAOV,KACtB,MAAMsS,EAAeD,EAAM3R,EAAOY,EAAI,IACrCmK,EAAY6G,KAAkBjS,EAAOL,GAAOsS,MAG/CF,EAAM9Q,QAAK4O,EAEJ7P,GAIX,OAAOgD,GAGT,OAAOgP,EAAMtS,EAAK,IA0DlBoO,UAAAA,EACAoE,WAtDkBlH,GAClBA,IAAUS,EAAST,IAAUO,EAAWP,KAAWO,EAAWP,EAAMmH,OAAS5G,EAAWP,EAAMoH,QC7oBhG,SAASC,EAAWC,EAASC,EAAMC,EAAQC,EAASC,GAClDpP,MAAM9D,KAAKsD,MAEPQ,MAAMqP,kBACRrP,MAAMqP,kBAAkB7P,KAAMA,KAAKhD,aAEnCgD,KAAKiP,OAAS,IAAIzO,OAASyO,MAG7BjP,KAAKwP,QAAUA,EACfxP,KAAK5C,KAAO,aACZqS,IAASzP,KAAKyP,KAAOA,GACrBC,IAAW1P,KAAK0P,OAASA,GACzBC,IAAY3P,KAAK2P,QAAUA,GAC3BC,IAAa5P,KAAK4P,SAAWA,GAG/BE,EAAM3D,SAASoD,EAAY/O,MAAO,CAChCuP,OAAQ,WACN,MAAO,CAELP,QAASxP,KAAKwP,QACdpS,KAAM4C,KAAK5C,KAEX4S,YAAahQ,KAAKgQ,YAClB7M,OAAQnD,KAAKmD,OAEb8M,SAAUjQ,KAAKiQ,SACfC,WAAYlQ,KAAKkQ,WACjBC,aAAcnQ,KAAKmQ,aACnBlB,MAAOjP,KAAKiP,MAEZS,OAAQI,EAAMd,aAAahP,KAAK0P,QAChCD,KAAMzP,KAAKyP,KACXW,OAAQpQ,KAAK4P,UAAY5P,KAAK4P,SAASQ,OAASpQ,KAAK4P,SAASQ,OAAS,SAK7E,MAAMpU,EAAYuT,EAAWvT,UACvBsO,EAAc,GAEpB,CACE,uBACA,iBACA,eACA,YACA,cACA,4BACA,iBACA,mBACA,kBACA,eACA,kBACA,mBAEApB,SAAQuG,IACRnF,EAAYmF,GAAQ,CAAClS,MAAOkS,MAG9B1T,OAAO2O,iBAAiB6E,EAAYjF,GACpCvO,OAAOK,eAAeJ,EAAW,eAAgB,CAACuB,OAAO,IAGzDgS,EAAWc,KAAO,CAAChQ,EAAOoP,EAAMC,EAAQC,EAASC,EAAUU,KACzD,MAAMC,EAAaxU,OAAOkM,OAAOjM,GAgBjC,OAdA8T,EAAMxD,aAAajM,EAAOkQ,GAAY,SAAgB3T,GACpD,OAAOA,IAAQ4D,MAAMxE,aACpByF,GACe,iBAATA,IAGT8N,EAAW7S,KAAK6T,EAAYlQ,EAAMmP,QAASC,EAAMC,EAAQC,EAASC,GAElEW,EAAWC,MAAQnQ,EAEnBkQ,EAAWnT,KAAOiD,EAAMjD,KAExBkT,GAAevU,OAAOsQ,OAAOkE,EAAYD,GAElCC,GAGT,UCrFA,SAASE,EAAYvI,GACnB,OAAO4H,EAAMnT,cAAcuL,IAAU4H,EAAMvT,QAAQ2L,GAUrD,SAASwI,EAAe7T,GACtB,OAAOiT,EAAMlD,SAAS/P,EAAK,MAAQA,EAAImE,MAAM,GAAI,GAAKnE,EAYxD,SAAS8T,EAAUC,EAAM/T,EAAKgU,GAC5B,OAAKD,EACEA,EAAKE,OAAOjU,GAAKkU,KAAI,SAAcC,EAAO7S,GAG/C,OADA6S,EAAQN,EAAeM,IACfH,GAAQ1S,EAAI,IAAM6S,EAAQ,IAAMA,KACvCC,KAAKJ,EAAO,IAAM,IALHhU,EAmBpB,MAAMqU,EAAapB,EAAMxD,aAAawD,EAAO,GAAI,MAAM,SAAgBrO,GACrE,MAAO,WAAW0P,KAAK1P,MA+JzB,QArIA,SAAoB7E,EAAKwU,EAAUjU,GACjC,IAAK2S,EAAMnH,SAAS/L,GAClB,MAAM,IAAIuC,UAAU,4BAItBiS,EAAWA,GAAY,IAAyBjG,SAYhD,MAAMkG,GATNlU,EAAU2S,EAAMxD,aAAanP,EAAS,CACpCkU,YAAY,EACZR,MAAM,EACNS,SAAS,IACR,GAAO,SAAiBC,EAAQrR,GAEjC,OAAQ4P,EAAMxH,YAAYpI,EAAOqR,QAGRF,WAErBG,EAAUrU,EAAQqU,SAAWC,EAC7BZ,EAAO1T,EAAQ0T,KACfS,EAAUnU,EAAQmU,QAElBI,GADQvU,EAAQwU,MAAwB,qBAATA,MAAwBA,OACpC7B,EAAMf,oBAAoBqC,GAEnD,IAAKtB,EAAMrH,WAAW+I,GACpB,MAAM,IAAIrS,UAAU,8BAGtB,SAASyS,EAAarU,GACpB,GAAc,OAAVA,EAAgB,MAAO,GAE3B,GAAIuS,EAAMjH,OAAOtL,GACf,OAAOA,EAAMsU,cAGf,IAAKH,GAAW5B,EAAM/G,OAAOxL,GAC3B,MAAM,IAAIgS,EAAW,gDAGvB,OAAIO,EAAMvH,cAAchL,IAAUuS,EAAM/F,aAAaxM,GAC5CmU,GAA2B,oBAATC,KAAsB,IAAIA,KAAK,CAACpU,IAAUuU,OAAOzB,KAAK9S,GAG1EA,EAaT,SAASkU,EAAelU,EAAOV,EAAK+T,GAClC,IAAIpU,EAAMe,EAEV,GAAIA,IAAUqT,GAAyB,kBAAVrT,EAC3B,GAAIuS,EAAMlD,SAAS/P,EAAK,MAEtBA,EAAMwU,EAAaxU,EAAMA,EAAImE,MAAM,GAAI,GAEvCzD,EAAQwU,KAAKC,UAAUzU,QAClB,GACJuS,EAAMvT,QAAQgB,IAnGvB,SAAqBf,GACnB,OAAOsT,EAAMvT,QAAQC,KAASA,EAAIyV,KAAKxB,GAkGRyB,CAAY3U,KACnCuS,EAAM9G,WAAWzL,IAAUuS,EAAMlD,SAAS/P,EAAK,SAAWL,EAAMsT,EAAM5C,QAAQ3P,IAYhF,OATAV,EAAM6T,EAAe7T,GAErBL,EAAI0M,SAAQ,SAAciJ,EAAIC,IAC1BtC,EAAMxH,YAAY6J,IAAc,OAAPA,GAAgBf,EAAShG,QAEtC,IAAZkG,EAAmBX,EAAU,CAAC9T,GAAMuV,EAAOvB,GAAqB,OAAZS,EAAmBzU,EAAMA,EAAM,KACnF+U,EAAaO,QAGV,EAIX,QAAI1B,EAAYlT,KAIhB6T,EAAShG,OAAOuF,EAAUC,EAAM/T,EAAKgU,GAAOe,EAAarU,KAElD,GAGT,MAAM0R,EAAQ,GAERoD,EAAiBtW,OAAOsQ,OAAO6E,EAAY,CAC/CO,eAAAA,EACAG,aAAAA,EACAnB,YAAAA,IAyBF,IAAKX,EAAMnH,SAAS/L,GAClB,MAAM,IAAIuC,UAAU,0BAKtB,OA5BA,SAASmT,EAAM/U,EAAOqT,GACpB,IAAId,EAAMxH,YAAY/K,GAAtB,CAEA,IAA8B,IAA1B0R,EAAMhC,QAAQ1P,GAChB,MAAMiD,MAAM,kCAAoCoQ,EAAKK,KAAK,MAG5DhC,EAAMrO,KAAKrD,GAEXuS,EAAM5G,QAAQ3L,GAAO,SAAc4U,EAAItV,IAKtB,OAJEiT,EAAMxH,YAAY6J,IAAc,OAAPA,IAAgBX,EAAQ9U,KAChE0U,EAAUe,EAAIrC,EAAMtH,SAAS3L,GAAOA,EAAIkC,OAASlC,EAAK+T,EAAMyB,KAI5DC,EAAMH,EAAIvB,EAAOA,EAAKE,OAAOjU,GAAO,CAACA,OAIzCoS,EAAMsD,OAORD,CAAM1V,GAECwU,GC3MT,SAASoB,EAAOxT,GACd,MAAMyT,EAAU,CACd,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,MAAO,IACP,MAAO,MAET,OAAOC,mBAAmB1T,GAAKC,QAAQ,oBAAoB,SAAkBO,GAC3E,OAAOiT,EAAQjT,MAYnB,SAASmT,EAAqBC,EAAQzV,GACpC6C,KAAK6S,OAAS,GAEdD,GAAUE,EAAWF,EAAQ5S,KAAM7C,GAGrC,MAAMnB,EAAY2W,EAAqB3W,UAEvCA,EAAUoP,OAAS,SAAgBhO,EAAMG,GACvCyC,KAAK6S,OAAOjS,KAAK,CAACxD,EAAMG,KAG1BvB,EAAUG,SAAW,SAAkB4W,GACrC,MAAMC,EAAUD,EAAU,SAASxV,GACjC,OAAOwV,EAAQrW,KAAKsD,KAAMzC,EAAOiV,IAC/BA,EAEJ,OAAOxS,KAAK6S,OAAO9B,KAAI,SAAczD,GACnC,OAAO0F,EAAQ1F,EAAK,IAAM,IAAM0F,EAAQ1F,EAAK,MAC5C,IAAI2D,KAAK,MAGd,UC5CA,SAASuB,EAAO9Q,GACd,OAAOgR,mBAAmBhR,GACxBzC,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,OAAQ,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KAYN,SAASgU,EAASC,EAAKN,EAAQzV,GAE5C,IAAKyV,EACH,OAAOM,EAGT,MAAMF,EAAU7V,GAAWA,EAAQqV,QAAUA,EAEvCW,EAAchW,GAAWA,EAAQiW,UAEvC,IAAIC,EAUJ,GAPEA,EADEF,EACiBA,EAAYP,EAAQzV,GAEpB2S,EAAM7G,kBAAkB2J,GACzCA,EAAOzW,WACP,IAAIwW,EAAqBC,EAAQzV,GAAShB,SAAS6W,GAGnDK,EAAkB,CACpB,MAAMC,EAAgBJ,EAAIjG,QAAQ,MAEX,IAAnBqG,IACFJ,EAAMA,EAAIlS,MAAM,EAAGsS,IAErBJ,KAA8B,IAAtBA,EAAIjG,QAAQ,KAAc,IAAM,KAAOoG,EAGjD,OAAOH,ECST,SAlEA,MACElW,cACEgD,KAAKuT,SAAW,GAWlBC,IAAIC,EAAWC,EAAUvW,GAOvB,OANA6C,KAAKuT,SAAS3S,KAAK,CACjB6S,UAAAA,EACAC,SAAAA,EACAC,cAAaxW,GAAUA,EAAQwW,YAC/BC,QAASzW,EAAUA,EAAQyW,QAAU,OAEhC5T,KAAKuT,SAASnV,OAAS,EAUhCyV,MAAMC,GACA9T,KAAKuT,SAASO,KAChB9T,KAAKuT,SAASO,GAAM,MASxBC,QACM/T,KAAKuT,WACPvT,KAAKuT,SAAW,IAcpBrK,QAAQvB,GACNmI,EAAM5G,QAAQlJ,KAAKuT,UAAU,SAAwB5O,GACzC,OAANA,GACFgD,EAAGhD,QC9DX,IACEqP,mBAAmB,EACnBC,mBAAmB,EACnBC,qBAAqB,GCDvB,IACEC,WAAW,EACXC,QAAS,CACPC,gBCJsC,qBAApBA,gBAAkCA,gBAAkB1B,EDKtExH,SEN+B,qBAAbA,SAA2BA,SAAW,KFOxDwG,KGP2B,qBAATA,KAAuBA,KAAO,MHSlD2C,UAAW,CAAC,OAAQ,QAAS,OAAQ,OAAQ,MAAO,SIXhDC,GAAkC,qBAAX5K,QAA8C,qBAAb6K,SAmBxDC,IACHC,GAEuB,qBAAdC,WAA6BA,UAAUD,QADxCH,IAAiB,CAAC,cAAe,eAAgB,MAAMtH,QAAQyH,IAAW,GAFvD,IAC3BA,GAaH,MAAME,GAE2B,qBAAtBC,mBAEPnL,gBAAgBmL,mBACc,oBAAvBnL,KAAKoL,cCnChB,OACKhF,KACAiF,ICyFL,SA9CA,SAAwB3D,GACtB,SAAS4D,EAAUpE,EAAMrT,EAAOL,EAAQkV,GACtC,IAAIhV,EAAOwT,EAAKwB,KAEhB,GAAa,cAAThV,EAAsB,OAAO,EAEjC,MAAM6X,EAAezG,OAAOC,UAAUrR,GAChC8X,EAAS9C,GAASxB,EAAKxS,OAG7B,GAFAhB,GAAQA,GAAQ0S,EAAMvT,QAAQW,GAAUA,EAAOkB,OAAShB,EAEpD8X,EAOF,OANIpF,EAAMpC,WAAWxQ,EAAQE,GAC3BF,EAAOE,GAAQ,CAACF,EAAOE,GAAOG,GAE9BL,EAAOE,GAAQG,GAGT0X,EAGL/X,EAAOE,IAAU0S,EAAMnH,SAASzL,EAAOE,MAC1CF,EAAOE,GAAQ,IASjB,OANe4X,EAAUpE,EAAMrT,EAAOL,EAAOE,GAAOgV,IAEtCtC,EAAMvT,QAAQW,EAAOE,MACjCF,EAAOE,GA/Cb,SAAuBZ,GACrB,MAAMI,EAAM,GACNwM,EAAOrN,OAAOqN,KAAK5M,GACzB,IAAI2B,EACJ,MAAMqJ,EAAM4B,EAAKhL,OACjB,IAAIvB,EACJ,IAAKsB,EAAI,EAAGA,EAAIqJ,EAAKrJ,IACnBtB,EAAMuM,EAAKjL,GACXvB,EAAIC,GAAOL,EAAIK,GAEjB,OAAOD,EAqCYuY,CAAcjY,EAAOE,MAG9B6X,EAGV,GAAInF,EAAM7E,WAAWmG,IAAatB,EAAMrH,WAAW2I,EAASgE,SAAU,CACpE,MAAMxY,EAAM,GAMZ,OAJAkT,EAAM3C,aAAaiE,GAAU,CAAChU,EAAMG,KAClCyX,EA1EN,SAAuB5X,GAKrB,OAAO0S,EAAMvC,SAAS,gBAAiBnQ,GAAM2T,KAAIvR,GAC3B,OAAbA,EAAM,GAAc,GAAKA,EAAM,IAAMA,EAAM,KAoEtC6V,CAAcjY,GAAOG,EAAOX,EAAK,MAGtCA,EAGT,OAAO,MCxDT,MAAM0Y,GAAW,CAEfC,aAAcC,GAEdC,QAAS,CAAC,MAAO,QAEjBC,iBAAkB,CAAC,SAA0BC,EAAMC,GACjD,MAAMC,EAAcD,EAAQE,kBAAoB,GAC1CC,EAAqBF,EAAY5I,QAAQ,qBAAuB,EAChE+I,EAAkBlG,EAAMnH,SAASgN,GAEnCK,GAAmBlG,EAAM5F,WAAWyL,KACtCA,EAAO,IAAIxK,SAASwK,IAKtB,GAFmB7F,EAAM7E,WAAW0K,GAGlC,OAAOI,EAAqBhE,KAAKC,UAAUiE,GAAeN,IAASA,EAGrE,GAAI7F,EAAMvH,cAAcoN,IACtB7F,EAAMrI,SAASkO,IACf7F,EAAMnE,SAASgK,IACf7F,EAAMhH,OAAO6M,IACb7F,EAAM/G,OAAO4M,GAEb,OAAOA,EAET,GAAI7F,EAAMzE,kBAAkBsK,GAC1B,OAAOA,EAAKlK,OAEd,GAAIqE,EAAM7G,kBAAkB0M,GAE1B,OADAC,EAAQM,eAAe,mDAAmD,GACnEP,EAAKxZ,WAGd,IAAI6M,EAEJ,GAAIgN,EAAiB,CACnB,GAAIH,EAAY5I,QAAQ,sCAAwC,EAC9D,OCtEO,SAA0B0I,EAAMxY,GAC7C,OAAO2V,EAAW6C,EAAM,IAAIZ,GAASX,QAAQC,gBAAmBtY,OAAOsQ,OAAO,CAC5EmF,QAAS,SAASjU,EAAOV,EAAK+T,EAAMuF,GAClC,OAAIpB,GAASqB,QAAUtG,EAAMrI,SAASlK,IACpCyC,KAAKoL,OAAOvO,EAAKU,EAAMpB,SAAS,YACzB,GAGFga,EAAQ1E,eAAe5J,MAAM7H,KAAM9B,aAE3Cf,ID4DUkZ,CAAiBV,EAAM3V,KAAKsW,gBAAgBna,WAGrD,IAAK6M,EAAa8G,EAAM9G,WAAW2M,KAAUE,EAAY5I,QAAQ,wBAA0B,EAAG,CAC5F,MAAMsJ,EAAYvW,KAAKwW,KAAOxW,KAAKwW,IAAIrL,SAEvC,OAAO2H,EACL9J,EAAa,CAAC,UAAW2M,GAAQA,EACjCY,GAAa,IAAIA,EACjBvW,KAAKsW,iBAKX,OAAIN,GAAmBD,GACrBH,EAAQM,eAAe,oBAAoB,GAvEjD,SAAyBO,EAAUC,EAAQ3D,GACzC,GAAIjD,EAAMtH,SAASiO,GACjB,IAEE,OADCC,GAAU3E,KAAK5K,OAAOsP,GAChB3G,EAAM/Q,KAAK0X,GAClB,MAAOjS,GACP,GAAe,gBAAXA,EAAEpH,KACJ,MAAMoH,EAKZ,OAAQuO,GAAWhB,KAAKC,WAAWyE,GA4DxBE,CAAgBhB,IAGlBA,IAGTiB,kBAAmB,CAAC,SAA2BjB,GAC7C,MAAMJ,EAAevV,KAAKuV,cAAgBD,GAASC,aAC7CtB,EAAoBsB,GAAgBA,EAAatB,kBACjD4C,EAAsC,SAAtB7W,KAAK8W,aAE3B,GAAInB,GAAQ7F,EAAMtH,SAASmN,KAAW1B,IAAsBjU,KAAK8W,cAAiBD,GAAgB,CAChG,MACME,IADoBxB,GAAgBA,EAAavB,oBACP6C,EAEhD,IACE,OAAO9E,KAAK5K,MAAMwO,GAClB,MAAOnR,GACP,GAAIuS,EAAmB,CACrB,GAAe,gBAAXvS,EAAEpH,KACJ,MAAMmS,EAAAA,KAAgB/K,EAAG+K,EAAAA,iBAA6BvP,KAAM,KAAMA,KAAK4P,UAEzE,MAAMpL,IAKZ,OAAOmR,IAOTqB,QAAS,EAETC,eAAgB,aAChBC,eAAgB,eAEhBC,kBAAmB,EACnBC,eAAgB,EAEhBZ,IAAK,CACHrL,SAAU4J,GAASX,QAAQjJ,SAC3BwG,KAAMoD,GAASX,QAAQzC,MAGzB0F,eAAgB,SAAwBjH,GACtC,OAAOA,GAAU,KAAOA,EAAS,KAGnCwF,QAAS,CACP0B,OAAQ,CACN,OAAU,oCACV,oBAAgBvK,KAKtB+C,EAAM5G,QAAQ,CAAC,SAAU,MAAO,OAAQ,OAAQ,MAAO,UAAWqO,IAChEjC,GAASM,QAAQ2B,GAAU,MAG7B,YErJMC,GAAoB1H,EAAMjC,YAAY,CAC1C,MAAO,gBAAiB,iBAAkB,eAAgB,OAC1D,UAAW,OAAQ,OAAQ,oBAAqB,sBAChD,gBAAiB,WAAY,eAAgB,sBAC7C,UAAW,cAAe,eCLtB4J,GAAapT,OAAO,aAE1B,SAASqT,GAAgBC,GACvB,OAAOA,GAAU7K,OAAO6K,GAAQ5Y,OAAOoJ,cAGzC,SAASyP,GAAera,GACtB,OAAc,IAAVA,GAA4B,MAATA,EACdA,EAGFuS,EAAMvT,QAAQgB,GAASA,EAAMwT,IAAI6G,IAAkB9K,OAAOvP,GAiBnE,SAASsa,GAAiB/N,EAASvM,EAAOoa,EAAQlL,EAAQqL,GACxD,OAAIhI,EAAMrH,WAAWgE,GACZA,EAAO/P,KAAKsD,KAAMzC,EAAOoa,IAG9BG,IACFva,EAAQoa,GAGL7H,EAAMtH,SAASjL,GAEhBuS,EAAMtH,SAASiE,IACiB,IAA3BlP,EAAM0P,QAAQR,GAGnBqD,EAAM3F,SAASsC,GACVA,EAAO0E,KAAK5T,QADrB,OANA,GA+BF,MAAMwa,GACJ/a,YAAY4Y,GACVA,GAAW5V,KAAK4N,IAAIgI,GAGtBhI,IAAI+J,EAAQK,EAAgBC,GAC1B,MAAMvO,EAAO1J,KAEb,SAASkY,EAAUC,EAAQC,EAASC,GAClC,MAAMC,EAAUZ,GAAgBU,GAEhC,IAAKE,EACH,MAAM,IAAI9X,MAAM,0CAGlB,MAAM3D,EAAMiT,EAAMxG,QAAQI,EAAM4O,KAE5Bzb,QAAqBkQ,IAAdrD,EAAK7M,KAAmC,IAAbwb,QAAmCtL,IAAbsL,IAAwC,IAAd3O,EAAK7M,MACzF6M,EAAK7M,GAAOub,GAAWR,GAAeO,IAI1C,MAAMI,EAAa,CAAC3C,EAASyC,IAC3BvI,EAAM5G,QAAQ0M,GAAS,CAACuC,EAAQC,IAAYF,EAAUC,EAAQC,EAASC,KAUzE,OARIvI,EAAMnT,cAAcgb,IAAWA,aAAkB3X,KAAKhD,YACxDub,EAAWZ,EAAQK,GACXlI,EAAMtH,SAASmP,KAAYA,EAASA,EAAO5Y,UArEtB,iCAAiCoS,KAqEmBwG,EArEV5Y,QAsEvEwZ,ED1EN,CAAeC,IACb,MAAMC,EAAS,GACf,IAAI5b,EACA6E,EACAvD,EAsBJ,OApBAqa,GAAcA,EAAWvK,MAAM,MAAM/E,SAAQ,SAAgBtJ,GAC3DzB,EAAIyB,EAAKqN,QAAQ,KACjBpQ,EAAM+C,EAAK8Y,UAAU,EAAGva,GAAGY,OAAOoJ,cAClCzG,EAAM9B,EAAK8Y,UAAUva,EAAI,GAAGY,QAEvBlC,GAAQ4b,EAAO5b,IAAQ2a,GAAkB3a,KAIlC,eAARA,EACE4b,EAAO5b,GACT4b,EAAO5b,GAAK+D,KAAKc,GAEjB+W,EAAO5b,GAAO,CAAC6E,GAGjB+W,EAAO5b,GAAO4b,EAAO5b,GAAO4b,EAAO5b,GAAO,KAAO6E,EAAMA,MAIpD+W,GCgDQE,CAAahB,GAASK,GAEvB,MAAVL,GAAkBO,EAAUF,EAAgBL,EAAQM,GAG/CjY,KAGT4Y,IAAIjB,EAAQjB,GAGV,GAFAiB,EAASD,GAAgBC,GAEb,CACV,MAAM9a,EAAMiT,EAAMxG,QAAQtJ,KAAM2X,GAEhC,GAAI9a,EAAK,CACP,MAAMU,EAAQyC,KAAKnD,GAEnB,IAAK6Z,EACH,OAAOnZ,EAGT,IAAe,IAAXmZ,EACF,OAxGV,SAAqB1X,GACnB,MAAM6Z,EAAS9c,OAAOkM,OAAO,MACvB6Q,EAAW,mCACjB,IAAItZ,EAEJ,KAAQA,EAAQsZ,EAAS/X,KAAK/B,IAC5B6Z,EAAOrZ,EAAM,IAAMA,EAAM,GAG3B,OAAOqZ,EA+FQE,CAAYxb,GAGrB,GAAIuS,EAAMrH,WAAWiO,GACnB,OAAOA,EAAOha,KAAKsD,KAAMzC,EAAOV,GAGlC,GAAIiT,EAAM3F,SAASuM,GACjB,OAAOA,EAAO3V,KAAKxD,GAGrB,MAAM,IAAI4B,UAAU,4CAK1B6Z,IAAIrB,EAAQsB,GAGV,GAFAtB,EAASD,GAAgBC,GAEb,CACV,MAAM9a,EAAMiT,EAAMxG,QAAQtJ,KAAM2X,GAEhC,SAAU9a,QAAqBkQ,IAAd/M,KAAKnD,IAAwBoc,IAAWpB,GAAiB7X,EAAMA,KAAKnD,GAAMA,EAAKoc,IAGlG,OAAO,EAGTC,OAAOvB,EAAQsB,GACb,MAAMvP,EAAO1J,KACb,IAAImZ,GAAU,EAEd,SAASC,EAAahB,GAGpB,GAFAA,EAAUV,GAAgBU,GAEb,CACX,MAAMvb,EAAMiT,EAAMxG,QAAQI,EAAM0O,IAE5Bvb,GAASoc,IAAWpB,GAAiBnO,EAAMA,EAAK7M,GAAMA,EAAKoc,YACtDvP,EAAK7M,GAEZsc,GAAU,IAWhB,OANIrJ,EAAMvT,QAAQob,GAChBA,EAAOzO,QAAQkQ,GAEfA,EAAazB,GAGRwB,EAGTpF,MAAMkF,GACJ,MAAM7P,EAAOrN,OAAOqN,KAAKpJ,MACzB,IAAI7B,EAAIiL,EAAKhL,OACT+a,GAAU,EAEd,KAAOhb,KAAK,CACV,MAAMtB,EAAMuM,EAAKjL,GACb8a,IAAWpB,GAAiB7X,EAAMA,KAAKnD,GAAMA,EAAKoc,GAAS,YACtDjZ,KAAKnD,GACZsc,GAAU,GAId,OAAOA,EAGTE,UAAUC,GACR,MAAM5P,EAAO1J,KACP4V,EAAU,GAsBhB,OApBA9F,EAAM5G,QAAQlJ,MAAM,CAACzC,EAAOoa,KAC1B,MAAM9a,EAAMiT,EAAMxG,QAAQsM,EAAS+B,GAEnC,GAAI9a,EAGF,OAFA6M,EAAK7M,GAAO+a,GAAera,eACpBmM,EAAKiO,GAId,MAAM4B,EAAaD,EA1JzB,SAAsB3B,GACpB,OAAOA,EAAO5Y,OACXoJ,cAAclJ,QAAQ,mBAAmB,CAACua,EAAGC,EAAMza,IAC3Cya,EAAK1O,cAAgB/L,IAuJA0a,CAAa/B,GAAU7K,OAAO6K,GAAQ5Y,OAE9Dwa,IAAe5B,UACVjO,EAAKiO,GAGdjO,EAAK6P,GAAc3B,GAAera,GAElCqY,EAAQ2D,IAAc,KAGjBvZ,KAGT8Q,SAAmB,2BAAT6I,EAAS,yBAATA,EAAS,gBACjB,OAAO3Z,KAAKhD,YAAY8T,OAAO9Q,QAAS2Z,GAG1C5J,OAAO6J,GACL,MAAMhd,EAAMb,OAAOkM,OAAO,MAM1B,OAJA6H,EAAM5G,QAAQlJ,MAAM,CAACzC,EAAOoa,KACjB,MAATpa,IAA2B,IAAVA,IAAoBX,EAAI+a,GAAUiC,GAAa9J,EAAMvT,QAAQgB,GAASA,EAAM0T,KAAK,MAAQ1T,MAGrGX,EAGO,CAAfyH,OAAOgD,YACN,OAAOtL,OAAOqZ,QAAQpV,KAAK+P,UAAU1L,OAAOgD,YAG9ClL,WACE,OAAOJ,OAAOqZ,QAAQpV,KAAK+P,UAAUgB,KAAI,QAAE4G,EAAQpa,GAAV,SAAqBoa,EAAS,KAAOpa,KAAO0T,KAAK,MAGhFrI,IAAPvE,OAAOuE,eACV,MAAO,eAGE,YAACV,GACV,OAAOA,aAAiBlI,KAAOkI,EAAQ,IAAIlI,KAAKkI,GAGrC,cAAC2R,GACZ,MAAMC,EAAW,IAAI9Z,KAAK6Z,GADK,2BAATF,EAAS,iCAATA,EAAS,kBAK/B,OAFAA,EAAQzQ,SAAShM,GAAW4c,EAASlM,IAAI1Q,KAElC4c,EAGM,gBAACnC,GACd,MAIMoC,GAJY/Z,KAAKyX,IAAezX,KAAKyX,IAAc,CACvDsC,UAAW,KAGeA,UACtB/d,EAAYgE,KAAKhE,UAEvB,SAASge,EAAe5B,GACtB,MAAME,EAAUZ,GAAgBU,GAE3B2B,EAAUzB,MAlNrB,SAAwB1b,EAAK+a,GAC3B,MAAMsC,EAAenK,EAAM5B,YAAY,IAAMyJ,GAE7C,CAAC,MAAO,MAAO,OAAOzO,SAAQgR,IAC5Bne,OAAOK,eAAeQ,EAAKsd,EAAaD,EAAc,CACpD1c,MAAO,SAAS4c,EAAMC,EAAMC,GAC1B,OAAOra,KAAKka,GAAYxd,KAAKsD,KAAM2X,EAAQwC,EAAMC,EAAMC,IAEzD/c,cAAc,OA2MZgd,CAAete,EAAWoc,GAC1B2B,EAAUzB,IAAW,GAMzB,OAFAxI,EAAMvT,QAAQob,GAAUA,EAAOzO,QAAQ8Q,GAAkBA,EAAerC,GAEjE3X,MAIX+X,GAAawC,SAAS,CAAC,eAAgB,iBAAkB,SAAU,kBAAmB,aAAc,kBAGpGzK,EAAM1F,kBAAkB2N,GAAa/b,WAAW,CAAC,EAASa,KAAQ,IAAjB,MAACU,GAAgB,EAC5Did,EAAS3d,EAAI,GAAGkO,cAAgBlO,EAAImE,MAAM,GAC9C,MAAO,CACL4X,IAAK,IAAMrb,EACXqQ,IAAI6M,GACFza,KAAKwa,GAAUC,OAKrB3K,EAAMnC,cAAcoK,IAEpB,YC3Re,SAAS2C,GAAcC,EAAK/K,GACzC,MAAMF,EAAS1P,MAAQsV,GACjBxL,EAAU8F,GAAYF,EACtBkG,EAAUmC,GAAAA,KAAkBjO,EAAQ8L,SAC1C,IAAID,EAAO7L,EAAQ6L,KAQnB,OANA7F,EAAM5G,QAAQyR,GAAK,SAAmBhT,GACpCgO,EAAOhO,EAAGjL,KAAKgT,EAAQiG,EAAMC,EAAQyD,YAAazJ,EAAWA,EAASQ,YAASrD,MAGjF6I,EAAQyD,YAED1D,ECxBM,SAASiF,GAASrd,GAC/B,SAAUA,IAASA,EAAMsd,YCW3B,SAASC,GAActL,EAASE,EAAQC,GAEtCJ,EAAAA,KAAgBvP,KAAiB,MAAXwP,EAAkB,WAAaA,EAASD,EAAAA,aAAyBG,EAAQC,GAC/F3P,KAAK5C,KAAO,gBAGd0S,EAAM3D,SAAS2O,GAAevL,EAAY,CACxCsL,YAAY,IAGd,YCrBA,SAAe9F,GAASN,sBAGtB,CACEsG,MAAM3d,EAAMG,EAAOyd,EAASpK,EAAMqK,EAAQC,GACxC,MAAMC,EAAS,CAAC/d,EAAO,IAAMsV,mBAAmBnV,IAEhDuS,EAAMpH,SAASsS,IAAYG,EAAOva,KAAK,WAAa,IAAIwa,KAAKJ,GAASK,eAEtEvL,EAAMtH,SAASoI,IAASuK,EAAOva,KAAK,QAAUgQ,GAE9Cd,EAAMtH,SAASyS,IAAWE,EAAOva,KAAK,UAAYqa,IAEvC,IAAXC,GAAmBC,EAAOva,KAAK,UAE/B4T,SAAS2G,OAASA,EAAOlK,KAAK,OAGhCqK,KAAKle,GACH,MAAMoC,EAAQgV,SAAS2G,OAAO3b,MAAM,IAAI+b,OAAO,aAAene,EAAO,cACrE,OAAQoC,EAAQgc,mBAAmBhc,EAAM,IAAM,MAGjDic,OAAOre,GACL4C,KAAK+a,MAAM3d,EAAM,GAAIge,KAAKM,MAAQ,SAOtC,CACEX,UACAO,KAAI,IACK,KAETG,YCxBW,SAASE,GAAcC,EAASC,GAC7C,OAAID,ICHG,8BAA8BzK,KDGP0K,GENjB,SAAqBD,EAASE,GAC3C,OAAOA,EACHF,EAAQ3c,QAAQ,SAAU,IAAM,IAAM6c,EAAY7c,QAAQ,OAAQ,IAClE2c,EFIKG,CAAYH,EAASC,GAEvBA,EGdT,SAAe9G,GAASN,sBAIrB,WACC,MAAMuH,EAAO,kBAAkB7K,KAAKwD,UAAUsH,WACxCC,EAAiB1H,SAAS2H,cAAc,KAC9C,IAAIC,EAQJ,SAASC,EAAWnJ,GAClB,IAAIoJ,EAAOpJ,EAWX,OATI8I,IAEFE,EAAeK,aAAa,OAAQD,GACpCA,EAAOJ,EAAeI,MAGxBJ,EAAeK,aAAa,OAAQD,GAG7B,CACLA,KAAMJ,EAAeI,KACrBE,SAAUN,EAAeM,SAAWN,EAAeM,SAASvd,QAAQ,KAAM,IAAM,GAChFwd,KAAMP,EAAeO,KACrBC,OAAQR,EAAeQ,OAASR,EAAeQ,OAAOzd,QAAQ,MAAO,IAAM,GAC3E0d,KAAMT,EAAeS,KAAOT,EAAeS,KAAK1d,QAAQ,KAAM,IAAM,GACpE2d,SAAUV,EAAeU,SACzBC,KAAMX,EAAeW,KACrBC,SAAiD,MAAtCZ,EAAeY,SAASxb,OAAO,GACxC4a,EAAeY,SACf,IAAMZ,EAAeY,UAY3B,OARAV,EAAYC,EAAW1S,OAAOlH,SAAS6Z,MAQhC,SAAyBS,GAC9B,MAAMtE,EAAU3I,EAAMtH,SAASuU,GAAeV,EAAWU,GAAcA,EACvE,OAAQtE,EAAO+D,WAAaJ,EAAUI,UAClC/D,EAAOgE,OAASL,EAAUK,MAhDjC,GAsDQ,WACL,OAAO,GCVb,SA9CA,SAAqBO,EAAcC,GACjCD,EAAeA,GAAgB,GAC/B,MAAME,EAAQ,IAAIzgB,MAAMugB,GAClBG,EAAa,IAAI1gB,MAAMugB,GAC7B,IAEII,EAFAC,EAAO,EACPC,EAAO,EAKX,OAFAL,OAAclQ,IAARkQ,EAAoBA,EAAM,IAEzB,SAAcM,GACnB,MAAM7B,EAAMN,KAAKM,MAEX8B,EAAYL,EAAWG,GAExBF,IACHA,EAAgB1B,GAGlBwB,EAAMG,GAAQE,EACdJ,EAAWE,GAAQ3B,EAEnB,IAAIvd,EAAImf,EACJG,EAAa,EAEjB,KAAOtf,IAAMkf,GACXI,GAAcP,EAAM/e,KACpBA,GAAQ6e,EASV,GANAK,GAAQA,EAAO,GAAKL,EAEhBK,IAASC,IACXA,GAAQA,EAAO,GAAKN,GAGlBtB,EAAM0B,EAAgBH,EACxB,OAGF,MAAMS,EAASF,GAAa9B,EAAM8B,EAElC,OAAOE,EAAS7O,KAAK8O,MAAmB,IAAbF,EAAoBC,QAAU3Q,IClC7D,SAAS6Q,GAAqBC,EAAUC,GACtC,IAAIC,EAAgB,EACpB,MAAMC,EAAeC,GAAY,GAAI,KAErC,OAAOzZ,IACL,MAAM0Z,EAAS1Z,EAAE0Z,OACXC,EAAQ3Z,EAAE4Z,iBAAmB5Z,EAAE2Z,WAAQpR,EACvCsR,EAAgBH,EAASH,EACzBO,EAAON,EAAaK,GAG1BN,EAAgBG,EAEhB,MAAMvI,EAAO,CACXuI,OAAAA,EACAC,MAAAA,EACAI,SAAUJ,EAASD,EAASC,OAASpR,EACrCmQ,MAAOmB,EACPC,KAAMA,QAAcvR,EACpByR,UAAWF,GAAQH,GAVLD,GAAUC,GAUeA,EAAQD,GAAUI,OAAOvR,EAChE0R,MAAOja,GAGTmR,EAAKmI,EAAmB,WAAa,WAAY,EAEjDD,EAASlI,IAIb,MCxCM+I,GAAgB,CACpBC,KCLF,KDMEC,IDsCsD,qBAAnBC,gBAEG,SAAUnP,GAChD,OAAO,IAAIoP,SAAQ,SAA4BC,EAASC,GACtD,IAAIC,EAAcvP,EAAOiG,KACzB,MAAMuJ,EAAiBnH,GAAAA,KAAkBrI,EAAOkG,SAASyD,YACzD,IACI8F,EAWAtJ,GAZA,aAACiB,EAAD,cAAesI,GAAiB1P,EAEpC,SAASrC,IACHqC,EAAO2P,aACT3P,EAAO2P,YAAYC,YAAYH,GAG7BzP,EAAO6P,QACT7P,EAAO6P,OAAOC,oBAAoB,QAASL,GAM/C,GAAIrP,EAAM7E,WAAWgU,GACnB,GAAIlK,GAASN,uBAAyBM,GAASH,+BAC7CsK,EAAehJ,gBAAe,QACzB,IAAwD,KAAnDL,EAAcqJ,EAAepJ,kBAA6B,CAEpE,MAAOvU,KAASsX,GAAUhD,EAAcA,EAAY5H,MAAM,KAAK8C,KAAIC,GAASA,EAAMjS,SAAQ0N,OAAOgT,SAAW,GAC5GP,EAAehJ,eAAe,CAAC3U,GAAQ,yBAA0BsX,GAAQ5H,KAAK,OAIlF,IAAItB,EAAU,IAAIkP,eAGlB,GAAInP,EAAOgQ,KAAM,CACf,MAAMC,EAAWjQ,EAAOgQ,KAAKC,UAAY,GACnCC,EAAWlQ,EAAOgQ,KAAKE,SAAWC,SAASnN,mBAAmBhD,EAAOgQ,KAAKE,WAAa,GAC7FV,EAAetR,IAAI,gBAAiB,SAAWkS,KAAKH,EAAW,IAAMC,IAGvE,MAAMG,EAAWpE,GAAcjM,EAAOkM,QAASlM,EAAOwD,KAOtD,SAAS8M,IACP,IAAKrQ,EACH,OAGF,MAAMsQ,EAAkBlI,GAAAA,KACtB,0BAA2BpI,GAAWA,EAAQuQ,0BGpFvC,SAAgBnB,EAASC,EAAQpP,GAC9C,MAAMyH,EAAiBzH,EAASF,OAAO2H,eAClCzH,EAASQ,QAAWiH,IAAkBA,EAAezH,EAASQ,QAGjE4O,EAAO,IAAIzP,EACT,mCAAqCK,EAASQ,OAC9C,CAACb,EAAAA,gBAA4BA,EAAAA,kBAA6BV,KAAKsR,MAAMvQ,EAASQ,OAAS,KAAO,GAC9FR,EAASF,OACTE,EAASD,QACTC,IAPFmP,EAAQnP,GH8FNwQ,EAAO,SAAkB7iB,GACvBwhB,EAAQxhB,GACR8P,OACC,SAAiB9M,GAClBye,EAAOze,GACP8M,MAde,CACfsI,KAHoBmB,GAAiC,SAAjBA,GAA4C,SAAjBA,EACxCnH,EAAQC,SAA/BD,EAAQ0Q,aAGRjQ,OAAQT,EAAQS,OAChBkQ,WAAY3Q,EAAQ2Q,WACpB1K,QAASqK,EACTvQ,OAAAA,EACAC,QAAAA,IAYFA,EAAU,KAoEZ,GArGAA,EAAQ4Q,KAAK7Q,EAAO6H,OAAOxM,cAAekI,EAAS8M,EAAUrQ,EAAOkD,OAAQlD,EAAO8Q,mBAAmB,GAGtG7Q,EAAQqH,QAAUtH,EAAOsH,QAiCrB,cAAerH,EAEjBA,EAAQqQ,UAAYA,EAGpBrQ,EAAQ8Q,mBAAqB,WACtB9Q,GAAkC,IAAvBA,EAAQ+Q,aAQD,IAAnB/Q,EAAQS,QAAkBT,EAAQgR,aAAwD,IAAzChR,EAAQgR,YAAY1T,QAAQ,WAKjF2T,WAAWZ,IAKfrQ,EAAQkR,QAAU,WACXlR,IAILqP,EAAO,IAAIzP,EAAW,kBAAmBA,EAAAA,aAAyBG,EAAQC,IAG1EA,EAAU,OAIZA,EAAQmR,QAAU,WAGhB9B,EAAO,IAAIzP,EAAW,gBAAiBA,EAAAA,YAAwBG,EAAQC,IAGvEA,EAAU,MAIZA,EAAQoR,UAAY,WAClB,IAAIC,EAAsBtR,EAAOsH,QAAU,cAAgBtH,EAAOsH,QAAU,cAAgB,mBAC5F,MAAMzB,EAAe7F,EAAO6F,cAAgBC,GACxC9F,EAAOsR,sBACTA,EAAsBtR,EAAOsR,qBAE/BhC,EAAO,IAAIzP,EACTyR,EACAzL,EAAarB,oBAAsB3E,EAAAA,UAAuBA,EAAAA,aAC1DG,EACAC,IAGFA,EAAU,MAMToF,GAASN,wBACV2K,GAAiBtP,EAAMrH,WAAW2W,KAAmBA,EAAgBA,EAAc1P,IAE/E0P,IAAoC,IAAlBA,GAA2B6B,GAAgBlB,IAAY,CAE3E,MAAMmB,EAAYxR,EAAOwH,gBAAkBxH,EAAOuH,gBAAkBkK,GAAQ7F,KAAK5L,EAAOuH,gBAEpFiK,GACFhC,EAAetR,IAAI8B,EAAOwH,eAAgBgK,QAMhCnU,IAAhBkS,GAA6BC,EAAehJ,eAAe,MAGvD,qBAAsBvG,GACxBG,EAAM5G,QAAQgW,EAAenP,UAAU,SAA0BrO,EAAK7E,GACpE8S,EAAQyR,iBAAiBvkB,EAAK6E,MAK7BoO,EAAMxH,YAAYoH,EAAO2R,mBAC5B1R,EAAQ0R,kBAAoB3R,EAAO2R,iBAIjCvK,GAAiC,SAAjBA,IAClBnH,EAAQmH,aAAepH,EAAOoH,cAIS,oBAA9BpH,EAAO4R,oBAChB3R,EAAQ4R,iBAAiB,WAAY3D,GAAqBlO,EAAO4R,oBAAoB,IAIhD,oBAA5B5R,EAAO8R,kBAAmC7R,EAAQ8R,QAC3D9R,EAAQ8R,OAAOF,iBAAiB,WAAY3D,GAAqBlO,EAAO8R,oBAGtE9R,EAAO2P,aAAe3P,EAAO6P,UAG/BJ,EAAauC,IACN/R,IAGLqP,GAAQ0C,GAAUA,EAAOngB,KAAO,IAAIuZ,GAAc,KAAMpL,EAAQC,GAAW+R,GAC3E/R,EAAQgS,QACRhS,EAAU,OAGZD,EAAO2P,aAAe3P,EAAO2P,YAAYuC,UAAUzC,GAC/CzP,EAAO6P,SACT7P,EAAO6P,OAAOsC,QAAU1C,IAAezP,EAAO6P,OAAOgC,iBAAiB,QAASpC,KAInF,MAAM3C,EItPK,SAAuBtJ,GACpC,MAAM1T,EAAQ,4BAA4BuB,KAAKmS,GAC/C,OAAO1T,GAASA,EAAM,IAAM,GJoPTsiB,CAAc/B,GAE3BvD,IAAsD,IAA1CzH,GAAST,UAAUrH,QAAQuP,GACzCwC,EAAO,IAAIzP,EAAW,wBAA0BiN,EAAW,IAAKjN,EAAAA,gBAA4BG,IAM9FC,EAAQoS,KAAK9C,GAAe,WCvPhCnP,EAAM5G,QAAQwV,IAAe,CAAC/W,EAAIpK,KAChC,GAAIoK,EAAI,CACN,IACE5L,OAAOK,eAAeuL,EAAI,OAAQ,CAACpK,MAAAA,IACnC,MAAOiH,IAGTzI,OAAOK,eAAeuL,EAAI,cAAe,CAACpK,MAAAA,QAI9C,MAAMykB,GAAgBvhB,GAAD,YAAiBA,GAEhCwhB,GAAoBxM,GAAY3F,EAAMrH,WAAWgN,IAAwB,OAAZA,IAAgC,IAAZA,EAEvF,GACeyM,IACXA,EAAWpS,EAAMvT,QAAQ2lB,GAAYA,EAAW,CAACA,GAEjD,MAAM,OAAC9jB,GAAU8jB,EACjB,IAAIC,EACA1M,EAEJ,MAAM2M,EAAkB,GAExB,IAAK,IAAIjkB,EAAI,EAAGA,EAAIC,EAAQD,IAAK,CAE/B,IAAI2V,EAIJ,GALAqO,EAAgBD,EAAS/jB,GAGzBsX,EAAU0M,GAELF,GAAiBE,KACpB1M,EAAUiJ,IAAe5K,EAAKhH,OAAOqV,IAAgBha,oBAErC4E,IAAZ0I,GACF,MAAM,IAAIlG,EAAJ,2BAAmCuE,EAAnC,MAIV,GAAI2B,EACF,MAGF2M,EAAgBtO,GAAM,IAAM3V,GAAKsX,EAGnC,IAAKA,EAAS,CAEZ,MAAM4M,EAAUtmB,OAAOqZ,QAAQgN,GAC5BrR,KAAI,QAAE+C,EAAIwO,GAAN,QAAiB,kBAAWxO,EAAX,OACT,IAAVwO,EAAkB,sCAAwC,oCAG/D,IAAIC,EAAInkB,EACLikB,EAAQjkB,OAAS,EAAI,YAAcikB,EAAQtR,IAAIiR,IAAc/Q,KAAK,MAAQ,IAAM+Q,GAAaK,EAAQ,IACtG,0BAEF,MAAM,IAAI9S,EACR,wDAA0DgT,EAC1D,mBAIJ,OAAO9M,GIzDX,SAAS+M,GAA6B9S,GAKpC,GAJIA,EAAO2P,aACT3P,EAAO2P,YAAYoD,mBAGjB/S,EAAO6P,QAAU7P,EAAO6P,OAAOsC,QACjC,MAAM,IAAI/G,GAAc,KAAMpL,GAWnB,SAASgT,GAAgBhT,GACtC8S,GAA6B9S,GAE7BA,EAAOkG,QAAUmC,GAAAA,KAAkBrI,EAAOkG,SAG1ClG,EAAOiG,KAAO+E,GAAche,KAC1BgT,EACAA,EAAOgG,mBAGgD,IAArD,CAAC,OAAQ,MAAO,SAASzI,QAAQyC,EAAO6H,SAC1C7H,EAAOkG,QAAQM,eAAe,qCAAqC,GAKrE,OAFgBgM,GAAoBxS,EAAO+F,SAAWH,GAAAA,QAE/CG,CAAQ/F,GAAQL,MAAK,SAA6BO,GAYvD,OAXA4S,GAA6B9S,GAG7BE,EAAS+F,KAAO+E,GAAche,KAC5BgT,EACAA,EAAOkH,kBACPhH,GAGFA,EAASgG,QAAUmC,GAAAA,KAAkBnI,EAASgG,SAEvChG,KACN,SAA4BnP,GAe7B,OAdKma,GAASna,KACZ+hB,GAA6B9S,GAGzBjP,GAAUA,EAAOmP,WACnBnP,EAAOmP,SAAS+F,KAAO+E,GAAche,KACnCgT,EACAA,EAAOkH,kBACPnW,EAAOmP,UAETnP,EAAOmP,SAASgG,QAAUmC,GAAAA,KAAkBtX,EAAOmP,SAASgG,WAIzDkJ,QAAQE,OAAOve,MCzE1B,MAAMkiB,GAAmBza,GAAUA,aAAiB6P,GAAe,IAAK7P,GAAUA,EAWnE,SAAS0a,GAAYC,EAASC,GAE3CA,EAAUA,GAAW,GACrB,MAAMpT,EAAS,GAEf,SAASqT,EAAe7lB,EAAQgD,EAAQ4L,GACtC,OAAIgE,EAAMnT,cAAcO,IAAW4S,EAAMnT,cAAcuD,GAC9C4P,EAAMjE,MAAMnP,KAAK,CAACoP,SAAAA,GAAW5O,EAAQgD,GACnC4P,EAAMnT,cAAcuD,GACtB4P,EAAMjE,MAAM,GAAI3L,GACd4P,EAAMvT,QAAQ2D,GAChBA,EAAOc,QAETd,EAIT,SAAS8iB,EAAoB7d,EAAGf,EAAG0H,GACjC,OAAKgE,EAAMxH,YAAYlE,GAEX0L,EAAMxH,YAAYnD,QAAvB,EACE4d,OAAehW,EAAW5H,EAAG2G,GAF7BiX,EAAe5d,EAAGf,EAAG0H,GAOhC,SAASmX,EAAiB9d,EAAGf,GAC3B,IAAK0L,EAAMxH,YAAYlE,GACrB,OAAO2e,OAAehW,EAAW3I,GAKrC,SAAS8e,EAAiB/d,EAAGf,GAC3B,OAAK0L,EAAMxH,YAAYlE,GAEX0L,EAAMxH,YAAYnD,QAAvB,EACE4d,OAAehW,EAAW5H,GAF1B4d,OAAehW,EAAW3I,GAOrC,SAAS+e,EAAgBhe,EAAGf,EAAG3C,GAC7B,OAAIA,KAAQqhB,EACHC,EAAe5d,EAAGf,GAChB3C,KAAQohB,EACVE,OAAehW,EAAW5H,QAD5B,EAKT,MAAMie,EAAW,CACflQ,IAAK+P,EACL1L,OAAQ0L,EACRtN,KAAMsN,EACNrH,QAASsH,EACTxN,iBAAkBwN,EAClBtM,kBAAmBsM,EACnB1C,iBAAkB0C,EAClBlM,QAASkM,EACTG,eAAgBH,EAChB7B,gBAAiB6B,EACjB9D,cAAe8D,EACfzN,QAASyN,EACTpM,aAAcoM,EACdjM,eAAgBiM,EAChBhM,eAAgBgM,EAChB1B,iBAAkB0B,EAClB5B,mBAAoB4B,EACpBI,WAAYJ,EACZ/L,iBAAkB+L,EAClB9L,cAAe8L,EACfK,eAAgBL,EAChBM,UAAWN,EACXO,UAAWP,EACXQ,WAAYR,EACZ7D,YAAa6D,EACbS,WAAYT,EACZU,iBAAkBV,EAClB7L,eAAgB8L,EAChBvN,QAAS,CAACzQ,EAAGf,IAAM4e,EAAoBL,GAAgBxd,GAAIwd,GAAgBve,IAAI,IASjF,OANA0L,EAAM5G,QAAQnN,OAAOqN,KAAKrN,OAAOsQ,OAAO,GAAIwW,EAASC,KAAW,SAA4BrhB,GAC1F,MAAMoK,EAAQuX,EAAS3hB,IAASuhB,EAC1Ba,EAAchY,EAAMgX,EAAQphB,GAAOqhB,EAAQrhB,GAAOA,GACvDqO,EAAMxH,YAAYub,IAAgBhY,IAAUsX,IAAqBzT,EAAOjO,GAAQoiB,MAG5EnU,ECxGF,MAAMoU,GAAU,QCKjBC,GAAa,GAGnB,CAAC,SAAU,UAAW,SAAU,WAAY,SAAU,UAAU7a,SAAQ,CAAC3H,EAAMpD,KAC7E4lB,GAAWxiB,GAAQ,SAAmB2G,GACpC,cAAcA,IAAU3G,GAAQ,KAAOpD,EAAI,EAAI,KAAO,KAAOoD,MAIjE,MAAMyiB,GAAqB,GAW3BD,GAAWxO,aAAe,SAAsB0O,EAAWC,EAAS1U,GAClE,SAAS2U,EAAcC,EAAKC,GAC1B,MAAO,uCAAoDD,EAAM,IAAOC,GAAQ7U,EAAU,KAAOA,EAAU,IAI7G,MAAO,CAACjS,EAAO6mB,EAAKE,KAClB,IAAkB,IAAdL,EACF,MAAM,IAAI1U,EACR4U,EAAcC,EAAK,qBAAuBF,EAAU,OAASA,EAAU,KACvE3U,EAAAA,gBAeJ,OAXI2U,IAAYF,GAAmBI,KACjCJ,GAAmBI,IAAO,EAE1BG,QAAQC,KACNL,EACEC,EACA,+BAAiCF,EAAU,8CAK1CD,GAAYA,EAAU1mB,EAAO6mB,EAAKE,KAqC7C,UACEG,cAxBF,SAAuBtnB,EAASunB,EAAQC,GACtC,GAAuB,kBAAZxnB,EACT,MAAM,IAAIoS,EAAW,4BAA6BA,EAAAA,sBAEpD,MAAMnG,EAAOrN,OAAOqN,KAAKjM,GACzB,IAAIgB,EAAIiL,EAAKhL,OACb,KAAOD,KAAM,GAAG,CACd,MAAMimB,EAAMhb,EAAKjL,GACX8lB,EAAYS,EAAON,GACzB,GAAIH,EAAJ,CACE,MAAM1mB,EAAQJ,EAAQinB,GAChB9Y,OAAmByB,IAAVxP,GAAuB0mB,EAAU1mB,EAAO6mB,EAAKjnB,GAC5D,IAAe,IAAXmO,EACF,MAAM,IAAIiE,EAAW,UAAY6U,EAAM,YAAc9Y,EAAQiE,EAAAA,2BAIjE,IAAqB,IAAjBoV,EACF,MAAM,IAAIpV,EAAW,kBAAoB6U,EAAK7U,EAAAA,kBAOlDwU,WAAAA,IC9EIA,GAAaE,GAAUF,WAS7B,MAAMa,GACJ5nB,YAAY6nB,GACV7kB,KAAKsV,SAAWuP,EAChB7kB,KAAK8kB,aAAe,CAClBnV,QAAS,IAAIoV,GACbnV,SAAU,IAAImV,IAYL,cAACC,EAAatV,GACzB,IACE,aAAa1P,KAAKilB,SAASD,EAAatV,GACxC,MAAOnP,GACP,GAAIA,aAAeC,MAAO,CACxB,IAAI0kB,EAEJ1kB,MAAMqP,kBAAoBrP,MAAMqP,kBAAkBqV,EAAQ,IAAOA,EAAQ,IAAI1kB,MAG7E,MAAMyO,EAAQiW,EAAMjW,MAAQiW,EAAMjW,MAAMhQ,QAAQ,QAAS,IAAM,GAE1DsB,EAAI0O,MAGEA,IAAUnC,OAAOvM,EAAI0O,OAAOrC,SAASqC,EAAMhQ,QAAQ,YAAa,OACzEsB,EAAI0O,OAAS,KAAOA,GAHpB1O,EAAI0O,MAAQA,EAOhB,MAAM1O,GAIV0kB,SAASD,EAAatV,GAGO,kBAAhBsV,GACTtV,EAASA,GAAU,IACZwD,IAAM8R,EAEbtV,EAASsV,GAAe,GAG1BtV,EAASkT,GAAY5iB,KAAKsV,SAAU5F,GAEpC,MAAM,aAAC6F,EAAD,iBAAeiL,EAAf,QAAiC5K,GAAWlG,OAE7B3C,IAAjBwI,GACF0O,GAAUQ,cAAclP,EAAc,CACpCvB,kBAAmB+P,GAAWxO,aAAawO,GAAWoB,SACtDlR,kBAAmB8P,GAAWxO,aAAawO,GAAWoB,SACtDjR,oBAAqB6P,GAAWxO,aAAawO,GAAWoB,WACvD,GAGmB,MAApB3E,IACE1Q,EAAMrH,WAAW+X,GACnB9Q,EAAO8Q,iBAAmB,CACxBpN,UAAWoN,GAGbyD,GAAUQ,cAAcjE,EAAkB,CACxChO,OAAQuR,GAAWqB,SACnBhS,UAAW2Q,GAAWqB,WACrB,IAKP1V,EAAO6H,QAAU7H,EAAO6H,QAAUvX,KAAKsV,SAASiC,QAAU,OAAOpP,cAGjE,IAAIkd,EAAiBzP,GAAW9F,EAAMjE,MACpC+J,EAAQ0B,OACR1B,EAAQlG,EAAO6H,SAGjB3B,GAAW9F,EAAM5G,QACf,CAAC,SAAU,MAAO,OAAQ,OAAQ,MAAO,QAAS,WACjDqO,WACQ3B,EAAQ2B,MAInB7H,EAAOkG,QAAUmC,GAAAA,OAAoBsN,EAAgBzP,GAGrD,MAAM0P,EAA0B,GAChC,IAAIC,GAAiC,EACrCvlB,KAAK8kB,aAAanV,QAAQzG,SAAQ,SAAoCsc,GACjC,oBAAxBA,EAAY5R,UAA0D,IAAhC4R,EAAY5R,QAAQlE,KAIrE6V,EAAiCA,GAAkCC,EAAY7R,YAE/E2R,EAAwBG,QAAQD,EAAY/R,UAAW+R,EAAY9R,cAGrE,MAAMgS,EAA2B,GAKjC,IAAIC,EAJJ3lB,KAAK8kB,aAAalV,SAAS1G,SAAQ,SAAkCsc,GACnEE,EAAyB9kB,KAAK4kB,EAAY/R,UAAW+R,EAAY9R,aAInE,IACIlM,EADArJ,EAAI,EAGR,IAAKonB,EAAgC,CACnC,MAAMK,EAAQ,CAAClD,GAAgBhb,KAAK1H,WAAO+M,GAO3C,IANA6Y,EAAMH,QAAQ5d,MAAM+d,EAAON,GAC3BM,EAAMhlB,KAAKiH,MAAM+d,EAAOF,GACxBle,EAAMoe,EAAMxnB,OAEZunB,EAAU7G,QAAQC,QAAQrP,GAEnBvR,EAAIqJ,GACTme,EAAUA,EAAQtW,KAAKuW,EAAMznB,KAAMynB,EAAMznB,MAG3C,OAAOwnB,EAGTne,EAAM8d,EAAwBlnB,OAE9B,IAAIynB,EAAYnW,EAIhB,IAFAvR,EAAI,EAEGA,EAAIqJ,GAAK,CACd,MAAMse,EAAcR,EAAwBnnB,KACtC4nB,EAAaT,EAAwBnnB,KAC3C,IACE0nB,EAAYC,EAAYD,GACxB,MAAOxlB,GACP0lB,EAAWrpB,KAAKsD,KAAMK,GACtB,OAIJ,IACEslB,EAAUjD,GAAgBhmB,KAAKsD,KAAM6lB,GACrC,MAAOxlB,GACP,OAAOye,QAAQE,OAAO3e,GAMxB,IAHAlC,EAAI,EACJqJ,EAAMke,EAAyBtnB,OAExBD,EAAIqJ,GACTme,EAAUA,EAAQtW,KAAKqW,EAAyBvnB,KAAMunB,EAAyBvnB,MAGjF,OAAOwnB,EAGTK,OAAOtW,GAGL,OAAOuD,EADU0I,IADjBjM,EAASkT,GAAY5iB,KAAKsV,SAAU5F,IACEkM,QAASlM,EAAOwD,KAC5BxD,EAAOkD,OAAQlD,EAAO8Q,mBAKpD1Q,EAAM5G,QAAQ,CAAC,SAAU,MAAO,OAAQ,YAAY,SAA6BqO,GAE/EqN,GAAM5oB,UAAUub,GAAU,SAASrE,EAAKxD,GACtC,OAAO1P,KAAK2P,QAAQiT,GAAYlT,GAAU,GAAI,CAC5C6H,OAAAA,EACArE,IAAAA,EACAyC,MAAOjG,GAAU,IAAIiG,YAK3B7F,EAAM5G,QAAQ,CAAC,OAAQ,MAAO,UAAU,SAA+BqO,GAGrE,SAAS0O,EAAmBC,GAC1B,OAAO,SAAoBhT,EAAKyC,EAAMjG,GACpC,OAAO1P,KAAK2P,QAAQiT,GAAYlT,GAAU,GAAI,CAC5C6H,OAAAA,EACA3B,QAASsQ,EAAS,CAChB,eAAgB,uBACd,GACJhT,IAAAA,EACAyC,KAAAA,MAKNiP,GAAM5oB,UAAUub,GAAU0O,IAE1BrB,GAAM5oB,UAAUub,EAAS,QAAU0O,GAAmB,MAGxD,YCrNA,MAAME,GACJnpB,YAAYopB,GACV,GAAwB,oBAAbA,EACT,MAAM,IAAIjnB,UAAU,gCAGtB,IAAIknB,EAEJrmB,KAAK2lB,QAAU,IAAI7G,SAAQ,SAAyBC,GAClDsH,EAAiBtH,KAGnB,MAAM/N,EAAQhR,KAGdA,KAAK2lB,QAAQtW,MAAKqS,IAChB,IAAK1Q,EAAMsV,WAAY,OAEvB,IAAInoB,EAAI6S,EAAMsV,WAAWloB,OAEzB,KAAOD,KAAM,GACX6S,EAAMsV,WAAWnoB,GAAGujB,GAEtB1Q,EAAMsV,WAAa,QAIrBtmB,KAAK2lB,QAAQtW,KAAOkX,IAClB,IAAIC,EAEJ,MAAMb,EAAU,IAAI7G,SAAQC,IAC1B/N,EAAM4Q,UAAU7C,GAChByH,EAAWzH,KACV1P,KAAKkX,GAMR,OAJAZ,EAAQjE,OAAS,WACf1Q,EAAMsO,YAAYkH,IAGbb,GAGTS,GAAS,SAAgB5W,EAASE,EAAQC,GACpCqB,EAAMvQ,SAKVuQ,EAAMvQ,OAAS,IAAIqa,GAActL,EAASE,EAAQC,GAClD0W,EAAerV,EAAMvQ,YAOzBgiB,mBACE,GAAIziB,KAAKS,OACP,MAAMT,KAAKS,OAQfmhB,UAAU/D,GACJ7d,KAAKS,OACPod,EAAS7d,KAAKS,QAIZT,KAAKsmB,WACPtmB,KAAKsmB,WAAW1lB,KAAKid,GAErB7d,KAAKsmB,WAAa,CAACzI,GAQvByB,YAAYzB,GACV,IAAK7d,KAAKsmB,WACR,OAEF,MAAMlU,EAAQpS,KAAKsmB,WAAWrZ,QAAQ4Q,IACvB,IAAXzL,GACFpS,KAAKsmB,WAAWG,OAAOrU,EAAO,GAQrB,gBACX,IAAIsP,EAIJ,MAAO,CACL1Q,MAJY,IAAImV,IAAY,SAAkBhlB,GAC9CugB,EAASvgB,KAITugB,OAAAA,IAKN,YCxHA,MAAMgF,GAAiB,CACrBC,SAAU,IACVC,mBAAoB,IACpBC,WAAY,IACZC,WAAY,IACZC,GAAI,IACJC,QAAS,IACTC,SAAU,IACVC,4BAA6B,IAC7BC,UAAW,IACXC,aAAc,IACdC,eAAgB,IAChBC,YAAa,IACbC,gBAAiB,IACjBC,OAAQ,IACRC,gBAAiB,IACjBC,iBAAkB,IAClBC,MAAO,IACPC,SAAU,IACVC,YAAa,IACbC,SAAU,IACVC,OAAQ,IACRC,kBAAmB,IACnBC,kBAAmB,IACnBC,WAAY,IACZC,aAAc,IACdC,gBAAiB,IACjBC,UAAW,IACXC,SAAU,IACVC,iBAAkB,IAClBC,cAAe,IACfC,4BAA6B,IAC7BC,eAAgB,IAChBC,SAAU,IACVC,KAAM,IACNC,eAAgB,IAChBC,mBAAoB,IACpBC,gBAAiB,IACjBC,WAAY,IACZC,qBAAsB,IACtBC,oBAAqB,IACrBC,kBAAmB,IACnBC,UAAW,IACXC,mBAAoB,IACpBC,oBAAqB,IACrBC,OAAQ,IACRC,iBAAkB,IAClBC,SAAU,IACVC,gBAAiB,IACjBC,qBAAsB,IACtBC,gBAAiB,IACjBC,4BAA6B,IAC7BC,2BAA4B,IAC5BC,oBAAqB,IACrBC,eAAgB,IAChBC,WAAY,IACZC,mBAAoB,IACpBC,eAAgB,IAChBC,wBAAyB,IACzBC,sBAAuB,IACvBC,oBAAqB,IACrBC,aAAc,IACdC,YAAa,IACbC,8BAA+B,KAGjC1uB,OAAOqZ,QAAQsR,IAAgBxd,SAAQ,IAAkB,IAAhBrM,EAAKU,GAAW,EACvDmpB,GAAenpB,GAASV,KAG1B,YCxBA,MAAM6tB,GAnBN,SAASC,EAAeC,GACtB,MAAM9gB,EAAU,IAAI8a,GAAMgG,GACpBC,EAAWnjB,EAAKkd,GAAAA,UAAAA,QAAyB9a,GAa/C,OAVAgG,EAAMjS,OAAOgtB,EAAUjG,GAAAA,UAAiB9a,EAAS,CAACX,YAAY,IAG9D2G,EAAMjS,OAAOgtB,EAAU/gB,EAAS,KAAM,CAACX,YAAY,IAGnD0hB,EAAS5iB,OAAS,SAAgB4c,GAChC,OAAO8F,EAAe/H,GAAYgI,EAAe/F,KAG5CgG,EAIKF,CAAerV,IAG7BoV,GAAM9F,MAAQA,GAGd8F,GAAM5P,cAAgBA,GACtB4P,GAAMvE,YAAcA,GACpBuE,GAAM9P,SAAWA,GACjB8P,GAAM5G,QAAUA,GAChB4G,GAAM5X,WAAaA,EAGnB4X,GAAMnb,WAAaA,EAGnBmb,GAAMI,OAASJ,GAAM5P,cAGrB4P,GAAMK,IAAM,SAAaC,GACvB,OAAOlM,QAAQiM,IAAIC,IAGrBN,GAAMO,OC9CS,SAAgBC,GAC7B,OAAO,SAAc1uB,GACnB,OAAO0uB,EAASrjB,MAAM,KAAMrL,KD+ChCkuB,GAAMS,aE7DS,SAAsBC,GACnC,OAAOtb,EAAMnH,SAASyiB,KAAsC,IAAzBA,EAAQD,cF+D7CT,GAAM9H,YAAcA,GAEpB8H,GAAM3S,aAAeA,GAErB2S,GAAMW,WAAanjB,GAAS+N,GAAenG,EAAM5F,WAAWhC,GAAS,IAAIiD,SAASjD,GAASA,GAE3FwiB,GAAMY,WAAapJ,GAEnBwI,GAAMhE,eAAiBA,GAEvBgE,GAAMa,QAAUb,GAGhB,8aGpDO,SAASc,EAAkBjuB,GAEhC,OAAKA,GAA0B,kBAAVA,EAKjB,aAAcA,GAAS,SAAUA,EAC5BmC,EAASnC,EAAMmC,UAIpB,UAAWnC,GAAS,QAASA,EACxBmC,EAASnC,GAId,SAAUA,GAAS,WAAYA,EAC1BkuB,EAAMluB,GAIR,GAnBE,GA0BX,SAASkuB,EAAMA,GACb,OAAOrZ,EAAMqZ,GAASA,EAAM7rB,MAAQ,IAAMwS,EAAMqZ,GAASA,EAAMpsB,QAOjE,SAASK,EAAS2B,GAChB,OAAOoqB,EAAMpqB,GAAOA,EAAI1B,OAAS,IAAM8rB,EAAMpqB,GAAOA,EAAIpB,KAO1D,SAASmS,EAAM7U,GACb,OAAOA,GAA0B,kBAAVA,EAAqBA,EAAQ,ECtE/C,MAAMmuB,UAAqBlrB,MAmBhCxD,YAAYyD,EAAQkrB,EAAOC,GAEzB,MAAMC,EAAQ,CAAC,KAAM,MAErB,IAAInsB,EAAW,CAEbC,MAAO,CAACC,KAAM,KAAMP,OAAQ,MAE5BY,IAAK,CAACL,KAAM,KAAMP,OAAQ,OAU5B,GAPAysB,QAEqB,kBAAVH,IACTC,EAASD,EACTA,OAAQ5e,GAGY,kBAAX6e,EAAqB,CAC9B,MAAMxZ,EAAQwZ,EAAO3e,QAAQ,MAEd,IAAXmF,EACFyZ,EAAM,GAAKD,GAEXC,EAAM,GAAKD,EAAO5qB,MAAM,EAAGoR,GAC3ByZ,EAAM,GAAKD,EAAO5qB,MAAMoR,EAAQ,IAIhCuZ,IAEE,SAAUA,GAAS,aAAcA,EAC/BA,EAAMjsB,WAGRA,EAAWisB,EAAMjsB,UAIZ,UAAWisB,GAAS,QAASA,EAGpCjsB,EAAWisB,GAGJ,SAAUA,GAAS,WAAYA,KAEtCjsB,EAASC,MAAQgsB,IAWrB3rB,KAAK5C,KAAOouB,EAAkBG,IAAU,MAOxC3rB,KAAKwP,QAA4B,kBAAX/O,EAAsBA,EAAO+O,QAAU/O,EAU7DT,KAAKiP,MAAQ,GAES,kBAAXxO,GAAuBA,EAAOwO,QACvCjP,KAAKiP,MAAQxO,EAAOwO,OAUtBjP,KAAKS,OAAST,KAAKwP,QAYnBxP,KAAK+rB,MAOL/rB,KAAKJ,KAAOF,EAASC,MAAMC,KAO3BI,KAAKX,OAASK,EAASC,MAAMN,OAO7BW,KAAKN,SAAWA,EAOhBM,KAAKE,OAAS2rB,EAAM,GAOpB7rB,KAAKgsB,OAASH,EAAM,GAOpB7rB,KAAKisB,KAYLjsB,KAAKksB,OAOLlsB,KAAKmsB,SAULnsB,KAAKkT,IAOLlT,KAAKosB,MAKTV,EAAa1vB,UAAUiwB,KAAO,GAC9BP,EAAa1vB,UAAUoB,KAAO,GAC9BsuB,EAAa1vB,UAAUyE,OAAS,GAChCirB,EAAa1vB,UAAUwT,QAAU,GACjCkc,EAAa1vB,UAAUiT,MAAQ,GAC/Byc,EAAa1vB,UAAU+vB,MAAQ,KAC/BL,EAAa1vB,UAAUqD,OAAS,KAChCqsB,EAAa1vB,UAAU4D,KAAO,KAC9B8rB,EAAa1vB,UAAUkE,OAAS,KAChCwrB,EAAa1vB,UAAUgwB,OAAS,KAChCN,EAAa1vB,UAAU0D,SAAW,KC7K3B,MAAMkR,EAAO,CAACyb,SAcrB,SAAkBzb,EAAM0b,GACtB,QAAYvf,IAARuf,GAAoC,kBAARA,EAC9B,MAAM,IAAIntB,UAAU,mCAGtBotB,EAAW3b,GACX,IAII4b,EAJA7sB,EAAQ,EACRM,GAAO,EACPmS,EAAQxB,EAAKxS,OAIjB,QAAY2O,IAARuf,GAAoC,IAAfA,EAAIluB,QAAgBkuB,EAAIluB,OAASwS,EAAKxS,OAAQ,CACrE,KAAOgU,KACL,GAA+B,KAA3BxB,EAAK1E,WAAWkG,IAGlB,GAAIoa,EAAc,CAChB7sB,EAAQyS,EAAQ,EAChB,YAEOnS,EAAM,IAGfusB,GAAe,EACfvsB,EAAMmS,EAAQ,GAIlB,OAAOnS,EAAM,EAAI,GAAK2Q,EAAK5P,MAAMrB,EAAOM,GAG1C,GAAIqsB,IAAQ1b,EACV,MAAO,GAGT,IAAI6b,GAAoB,EACpBC,EAAWJ,EAAIluB,OAAS,EAE5B,KAAOgU,KACL,GAA+B,KAA3BxB,EAAK1E,WAAWkG,IAGlB,GAAIoa,EAAc,CAChB7sB,EAAQyS,EAAQ,EAChB,YAGEqa,EAAmB,IAGrBD,GAAe,EACfC,EAAmBra,EAAQ,GAGzBsa,GAAY,IAEV9b,EAAK1E,WAAWkG,KAAWka,EAAIpgB,WAAWwgB,KACxCA,EAAW,IAGbzsB,EAAMmS,IAKRsa,GAAY,EACZzsB,EAAMwsB,IAMV9sB,IAAUM,EACZA,EAAMwsB,EACGxsB,EAAM,IACfA,EAAM2Q,EAAKxS,QAGb,OAAOwS,EAAK5P,MAAMrB,EAAOM,IA7FI0sB,QAwG/B,SAAiB/b,GAGf,GAFA2b,EAAW3b,GAES,IAAhBA,EAAKxS,OACP,MAAO,IAGT,IAGIwuB,EAHA3sB,GAAO,EACPmS,EAAQxB,EAAKxS,OAKjB,OAASgU,GACP,GAA+B,KAA3BxB,EAAK1E,WAAWkG,IAClB,GAAIwa,EAAgB,CAClB3sB,EAAMmS,EACN,YAEQwa,IAEVA,GAAiB,GAIrB,OAAO3sB,EAAM,EACc,KAAvB2Q,EAAK1E,WAAW,GACd,IACA,IACM,IAARjM,GAAoC,KAAvB2Q,EAAK1E,WAAW,GAC7B,KACA0E,EAAK5P,MAAM,EAAGf,IAvIoB4sB,QAkJxC,SAAiBjc,GACf2b,EAAW3b,GAEX,IASIgc,EATAxa,EAAQxB,EAAKxS,OAEb6B,GAAO,EACP6sB,EAAY,EACZC,GAAY,EAGZC,EAAc,EAIlB,KAAO5a,KAAS,CACd,MAAM3C,EAAOmB,EAAK1E,WAAWkG,GAE7B,GAAa,KAAT3C,EAWAxP,EAAM,IAGR2sB,GAAiB,EACjB3sB,EAAMmS,EAAQ,GAGH,KAAT3C,EAEEsd,EAAW,EACbA,EAAW3a,EACc,IAAhB4a,IACTA,EAAc,GAEPD,GAAY,IAGrBC,GAAe,QAzBf,GAAIJ,EAAgB,CAClBE,EAAY1a,EAAQ,EACpB,OA2BN,GACE2a,EAAW,GACX9sB,EAAM,GAEU,IAAhB+sB,GAEiB,IAAhBA,GAAqBD,IAAa9sB,EAAM,GAAK8sB,IAAaD,EAAY,EAEvE,MAAO,GAGT,OAAOlc,EAAK5P,MAAM+rB,EAAU9sB,IA9MmBgR,KAyNjD,WACE,IAEIgc,EAFA7a,GAAS,EADY,2BAAV8a,EAAU,yBAAVA,EAAU,gBAKzB,OAAS9a,EAAQ8a,EAAS9uB,QACxBmuB,EAAWW,EAAS9a,IAEhB8a,EAAS9a,KACX6a,OACalgB,IAAXkgB,EAAuBC,EAAS9a,GAAS6a,EAAS,IAAMC,EAAS9a,IAIvE,YAAkBrF,IAAXkgB,EAAuB,IAAM5T,EAAU4T,IAvOOE,IAAK,KAoP5D,SAAS9T,EAAUzI,GACjB2b,EAAW3b,GAEX,MAAMwc,EAAkC,KAAvBxc,EAAK1E,WAAW,GAGjC,IAAI3O,EAuBN,SAAyBqT,EAAMyc,GAC7B,IAMI5d,EAEA6d,EARAhiB,EAAS,GACTiiB,EAAoB,EACpBC,GAAa,EACb3c,EAAO,EACPuB,GAAS,EAMb,OAASA,GAASxB,EAAKxS,QAAQ,CAC7B,GAAIgU,EAAQxB,EAAKxS,OACfqR,EAAOmB,EAAK1E,WAAWkG,OAClB,IAAa,KAAT3C,EACT,MAEAA,EAAO,GAGT,GAAa,KAATA,EAAuB,CACzB,GAAI+d,IAAcpb,EAAQ,GAAc,IAATvB,QAExB,GAAI2c,IAAcpb,EAAQ,GAAc,IAATvB,EAAY,CAChD,GACEvF,EAAOlN,OAAS,GACM,IAAtBmvB,GACyC,KAAzCjiB,EAAOY,WAAWZ,EAAOlN,OAAS,IACO,KAAzCkN,EAAOY,WAAWZ,EAAOlN,OAAS,GAElC,GAAIkN,EAAOlN,OAAS,GAGlB,GAFAkvB,EAAiBhiB,EAAO7L,YAAY,KAEhC6tB,IAAmBhiB,EAAOlN,OAAS,EAAG,CACpCkvB,EAAiB,GACnBhiB,EAAS,GACTiiB,EAAoB,IAEpBjiB,EAASA,EAAOtK,MAAM,EAAGssB,GACzBC,EAAoBjiB,EAAOlN,OAAS,EAAIkN,EAAO7L,YAAY,MAG7D+tB,EAAYpb,EACZvB,EAAO,EACP,eAEG,GAAIvF,EAAOlN,OAAS,EAAG,CAC5BkN,EAAS,GACTiiB,EAAoB,EACpBC,EAAYpb,EACZvB,EAAO,EACP,SAIAwc,IACF/hB,EAASA,EAAOlN,OAAS,EAAIkN,EAAS,MAAQ,KAC9CiiB,EAAoB,QAGlBjiB,EAAOlN,OAAS,EAClBkN,GAAU,IAAMsF,EAAK5P,MAAMwsB,EAAY,EAAGpb,GAE1C9G,EAASsF,EAAK5P,MAAMwsB,EAAY,EAAGpb,GAGrCmb,EAAoBnb,EAAQob,EAAY,EAG1CA,EAAYpb,EACZvB,EAAO,OACW,KAATpB,GAAyBoB,GAAQ,EAC1CA,IAEAA,GAAQ,EAIZ,OAAOvF,EArGKmiB,CAAgB7c,GAAOwc,GAUnC,OARqB,IAAjB7vB,EAAMa,QAAiBgvB,IACzB7vB,EAAQ,KAGNA,EAAMa,OAAS,GAA0C,KAArCwS,EAAK1E,WAAW0E,EAAKxS,OAAS,KACpDb,GAAS,KAGJ6vB,EAAW,IAAM7vB,EAAQA,EAsGlC,SAASgvB,EAAW3b,GAClB,GAAoB,kBAATA,EACT,MAAM,IAAIzR,UACR,mCAAqC4S,KAAKC,UAAUpB,IC7ZnD,MAAM8c,EAAO,CAACC,IAErB,WACE,MAAO,MCqBF,SAASC,EAAMC,GACpB,OACoB,OAAlBA,GACyB,kBAAlBA,GAEPA,EAAcvR,MAEduR,EAAcjC,OCtBX,SAASkC,EAAUld,GACxB,GAAoB,kBAATA,EACTA,EAAO,IAAImd,IAAInd,QACV,IAAKgd,EAAMhd,GAAO,CAEvB,MAAMvQ,EAAQ,IAAIlB,UAChB,+EACEyR,EACA,KAGJ,MADAvQ,EAAMoP,KAAO,uBACPpP,EAGR,GAAsB,UAAlBuQ,EAAK4L,SAAsB,CAE7B,MAAMnc,EAAQ,IAAIlB,UAAU,kCAE5B,MADAkB,EAAMoP,KAAO,yBACPpP,EAGR,OAWF,SAA6B6S,GAC3B,GAAqB,KAAjBA,EAAI0J,SAAiB,CAEvB,MAAMvc,EAAQ,IAAIlB,UAChB,wDAGF,MADAkB,EAAMoP,KAAO,4BACPpP,EAGR,MAAMyc,EAAW5J,EAAI4J,SACrB,IAAI1K,GAAS,EAEb,OAASA,EAAQ0K,EAAS1e,QACxB,GACiC,KAA/B0e,EAAS5Q,WAAWkG,IACe,KAAnC0K,EAAS5Q,WAAWkG,EAAQ,GAC5B,CACA,MAAM4b,EAAQlR,EAAS5Q,WAAWkG,EAAQ,GAC1C,GAAc,KAAV4b,GAAoC,MAAVA,EAAyB,CAErD,MAAM3tB,EAAQ,IAAIlB,UAChB,uDAGF,MADAkB,EAAMoP,KAAO,4BACPpP,GAKZ,OAAOmb,mBAAmBsB,GAzCnBmR,CAAoBrd,GCiE7B,MAAMsd,EAAQ,CAAC,UAAW,OAAQ,WAAY,OAAQ,UAAW,WAE1D,MAAMC,EAuBXnxB,YAAYO,GAEV,IAAIJ,EAKFA,EAHGI,EAEuB,kBAAVA,GAoYtB,SAAgBA,GACd,OAAO6wB,EAAW7wB,GArYwBkO,CAAOlO,GACnC,CAACA,MAAAA,GACFqwB,EAAMrwB,GACL,CAACqT,KAAMrT,GAEPA,EANA,GAiBZyC,KAAK2V,KAAO,GAOZ3V,KAAKquB,SAAW,GAShBruB,KAAKsuB,QAAU,GAOftuB,KAAK2tB,IAAMD,EAAKC,MAQhB3tB,KAAKzC,MAYLyC,KAAKuuB,OAULvuB,KAAKsL,OAULtL,KAAK+Q,IAIL,IAkBItP,EAlBA2Q,GAAS,EAEb,OAASA,EAAQ8b,EAAM9vB,QAAQ,CAC7B,MAAMqD,EAAOysB,EAAM9b,GAKjB3Q,KAAQtE,QACU4P,IAAlB5P,EAAQsE,IACU,OAAlBtE,EAAQsE,KAGRzB,KAAKyB,GAAiB,YAATA,EAAqB,IAAItE,EAAQsE,IAAStE,EAAQsE,IAQnE,IAAKA,KAAQtE,EAEN+wB,EAAMM,SAAS/sB,KAElBzB,KAAKyB,GAAQtE,EAAQsE,IAUvBmP,WACF,OAAO5Q,KAAKsuB,QAAQtuB,KAAKsuB,QAAQlwB,OAAS,GAYxCwS,SAAKA,GACHgd,EAAMhd,KACRA,EAAOkd,EAAUld,IAGnB6d,EAAe7d,EAAM,QAEjB5Q,KAAK4Q,OAASA,GAChB5Q,KAAKsuB,QAAQ1tB,KAAKgQ,GAOlB+b,cACF,MAA4B,kBAAd3sB,KAAK4Q,KAAoBA,EAAK+b,QAAQ3sB,KAAK4Q,WAAQ7D,EAQ/D4f,YAAQA,GACVJ,EAAWvsB,KAAKqsB,SAAU,WAC1BrsB,KAAK4Q,KAAOA,EAAKK,KAAK0b,GAAW,GAAI3sB,KAAKqsB,UAMxCA,eACF,MAA4B,kBAAdrsB,KAAK4Q,KAAoBA,EAAKyb,SAASrsB,KAAK4Q,WAAQ7D,EAUhEsf,aAASA,GACXoC,EAAepC,EAAU,YACzBqC,EAAWrC,EAAU,YACrBrsB,KAAK4Q,KAAOA,EAAKK,KAAKjR,KAAK2sB,SAAW,GAAIN,GAMxCQ,cACF,MAA4B,kBAAd7sB,KAAK4Q,KAAoBA,EAAKic,QAAQ7sB,KAAK4Q,WAAQ7D,EAU/D8f,YAAQA,GAIV,GAHA6B,EAAW7B,EAAS,WACpBN,EAAWvsB,KAAK2sB,QAAS,WAErBE,EAAS,CACX,GAA8B,KAA1BA,EAAQ3gB,WAAW,GACrB,MAAM,IAAI1L,MAAM,iCAGlB,GAAIqsB,EAAQ2B,SAAS,IAAK,GACxB,MAAM,IAAIhuB,MAAM,0CAIpBR,KAAK4Q,KAAOA,EAAKK,KAAKjR,KAAK2sB,QAAS3sB,KAAK2uB,MAAQ9B,GAAW,KAM1D8B,WACF,MAA4B,kBAAd3uB,KAAK4Q,KACfA,EAAKyb,SAASrsB,KAAK4Q,KAAM5Q,KAAK6sB,cAC9B9f,EAUF4hB,SAAKA,GACPF,EAAeE,EAAM,QACrBD,EAAWC,EAAM,QACjB3uB,KAAK4Q,KAAOA,EAAKK,KAAKjR,KAAK2sB,SAAW,GAAIgC,GAAQ3uB,KAAK6sB,SAAW,KAYpE1wB,SAASyyB,GACP,OAAQ5uB,KAAKzC,OAAS,IAAIpB,SAASyyB,QAAY7hB,GAmBjDyC,QAAQ/O,EAAQkrB,EAAOC,GACrB,MAAMpc,EAAU,IAAIkc,EAAajrB,EAAQkrB,EAAOC,GAWhD,OATI5rB,KAAK4Q,OACPpB,EAAQpS,KAAO4C,KAAK4Q,KAAO,IAAMpB,EAAQpS,KACzCoS,EAAQyc,KAAOjsB,KAAK4Q,MAGtBpB,EAAQuc,OAAQ,EAEhB/rB,KAAKquB,SAASztB,KAAK4O,GAEZA,EAmBTqf,KAAKpuB,EAAQkrB,EAAOC,GAClB,MAAMpc,EAAUxP,KAAKwP,QAAQ/O,EAAQkrB,EAAOC,GAI5C,OAFApc,EAAQuc,MAAQ,KAETvc,EAuBTsf,KAAKruB,EAAQkrB,EAAOC,GAClB,MAAMpc,EAAUxP,KAAKwP,QAAQ/O,EAAQkrB,EAAOC,GAI5C,MAFApc,EAAQuc,OAAQ,EAEVvc,GAcV,SAASkf,EAAWK,EAAM3xB,GACxB,GAAI2xB,GAAQA,EAAKP,SAAS5d,EAAKuc,KAC7B,MAAM,IAAI3sB,MACR,IAAMpD,EAAO,uCAAyCwT,EAAKuc,IAAM,KAevE,SAASsB,EAAeM,EAAM3xB,GAC5B,IAAK2xB,EACH,MAAM,IAAIvuB,MAAM,IAAMpD,EAAO,qBAcjC,SAASmvB,EAAW3b,EAAMxT,GACxB,IAAKwT,EACH,MAAM,IAAIpQ,MAAM,YAAcpD,EAAO,mCClflC,SAAS4xB,EAAK3uB,GACnB,GAAIA,EACF,MAAMA,0BCTK,SAAS1D,EAAcY,GACrC,GAAqB,kBAAVA,GAAgC,OAAVA,EAChC,OAAO,EAGR,MAAMvB,EAAYD,OAAO+L,eAAevK,GACxC,OAAsB,OAAdvB,GAAsBA,IAAcD,OAAOC,WAAkD,OAArCD,OAAO+L,eAAe9L,OAA0BqI,OAAOuE,eAAerL,MAAY8G,OAAOgD,YAAY9J,GCmI/J,SAAS0xB,EAAKC,EAAYhE,GAE/B,IAAIiE,EAEJ,OAQA,WAAgC,2BAAZC,EAAY,yBAAZA,EAAY,gBAC9B,MAAMC,EAAoBH,EAAW9wB,OAASgxB,EAAWhxB,OAEzD,IAAIkN,EAEA+jB,GACFD,EAAWxuB,KAAKyM,GAGlB,IACE/B,EAAS4jB,EAAWrnB,MAAM7H,KAAMovB,GAChC,MAAO/uB,GACP,MAAMivB,EAAkCjvB,EAMxC,GAAIgvB,GAAqBF,EACvB,MAAMG,EAGR,OAAOjiB,EAAKiiB,GAGTD,IACC/jB,GAAUA,EAAO+D,MAA+B,oBAAhB/D,EAAO+D,KACzC/D,EAAO+D,KAAKA,EAAMhC,GACT/B,aAAkB9K,MAC3B6M,EAAK/B,GAEL+D,EAAK/D,KAUX,SAAS+B,EAAKhN,GACZ,IAAK8uB,EAAQ,CACXA,GAAS,EADE,2BADS7nB,EACT,iCADSA,EACT,kBAEX4jB,EAAS7qB,KAAUiH,IASvB,SAAS+H,EAAK9R,GACZ8P,EAAK,KAAM9P,IC/KR,MAAMgyB,EAQb,SAASC,IACP,MAAMC,EDCD,WAEL,MAAM9U,EAAM,GAEN+U,EAAW,CAACC,IAKlB,WAAwB,2BAARC,EAAQ,yBAARA,EAAQ,gBACtB,IAAIC,GAAmB,EAEvB,MAAM3E,EAAW0E,EAAOrd,MAExB,GAAwB,oBAAb2Y,EACT,MAAM,IAAI/rB,UAAU,2CAA6C+rB,GAWnE,SAAS9d,EAAK/M,GACZ,MAAMsH,EAAKgT,IAAMkV,GACjB,IAAIzd,GAAS,EAEb,GAAI/R,EACF6qB,EAAS7qB,OADX,CAJ8B,2BAARiH,EAAQ,iCAARA,EAAQ,kBAU9B,OAAS8K,EAAQwd,EAAOxxB,QACA,OAAlBkJ,EAAO8K,SAAqCrF,IAAlBzF,EAAO8K,KACnC9K,EAAO8K,GAASwd,EAAOxd,IAK3Bwd,EAAStoB,EAGLK,EACFsnB,EAAKtnB,EAAIyF,EAAT6hB,IAAkB3nB,GAElB4jB,EAAS,QAAS5jB,IA/BtB8F,EAAK,QAASwiB,IAdOpc,IAmDvB,SAAasc,GACX,GAA0B,oBAAfA,EACT,MAAM,IAAI3wB,UACR,+CAAiD2wB,GAKrD,OADAnV,EAAI/Z,KAAKkvB,GACFJ,IAzDT,OAAOA,ECPcK,GAEfC,EAAY,GAElB,IAEIC,EAFAC,EAAY,GAGZC,GAAe,EA2BnB,OAvBAC,EAAUza,KA6CV,SAAc9Y,EAAKU,GACjB,GAAmB,kBAARV,EAET,OAAyB,IAArBqB,UAAUE,QACZiyB,EAAe,OAAQJ,GACvBC,EAAUrzB,GAAOU,EACV6yB,GAIDE,EAAI5zB,KAAKwzB,EAAWrzB,IAAQqzB,EAAUrzB,IAAS,KAIzD,GAAIA,EAGF,OAFAwzB,EAAe,OAAQJ,GACvBC,EAAYrzB,EACLuzB,EAIT,OAAOF,GAjETE,EAAUG,YAASxjB,EACnBqjB,EAAUI,cAAWzjB,EAGrBqjB,EAAUK,OAiEV,WACE,GAAIR,EACF,OAAOG,EAGT,OAASD,EAAcH,EAAU5xB,QAAQ,CACvC,MAAOsyB,KAAavzB,GAAW6yB,EAAUG,GAEzC,IAAmB,IAAfhzB,EAAQ,GACV,UAGiB,IAAfA,EAAQ,KACVA,EAAQ,QAAK4P,GAIf,MAAM4jB,EAAcD,EAASh0B,KAAK0zB,KAAcjzB,GAErB,oBAAhBwzB,GACTlB,EAAajc,IAAImd,GAOrB,OAHAV,GAAS,EACTE,EAAc3hB,OAAOoiB,kBAEdR,GAzFTA,EAAUJ,UAAYA,EAEtBI,EAAU5c,IA+FV,SAAajW,GAAmB,2BAATJ,EAAS,iCAATA,EAAS,kBAE9B,IAAI0zB,EAIJ,GAFAR,EAAe,MAAOJ,GAER,OAAV1yB,QAA4BwP,IAAVxP,QAEf,GAAqB,oBAAVA,EAChBuzB,EAAUvzB,KAAUJ,OACf,IAAqB,kBAAVI,EAOhB,MAAM,IAAI4B,UAAU,+BAAiC5B,EAAQ,KANzDd,MAAMF,QAAQgB,GAChBwzB,EAAQxzB,GAERyzB,EAAUzzB,GAMVszB,IACFX,EAAUW,SAAW90B,OAAOsQ,OAAO6jB,EAAUW,UAAY,GAAIA,IAG/D,OAAOT,EAMP,SAASa,EAAI1zB,GACX,GAAqB,oBAAVA,EACTuzB,EAAUvzB,OACL,IAAqB,kBAAVA,EAQhB,MAAM,IAAI4B,UAAU,+BAAiC5B,EAAQ,KAP7D,GAAId,MAAMF,QAAQgB,GAAQ,CACxB,MAAO2zB,KAAW/zB,GAAWI,EAC7BuzB,EAAUI,KAAW/zB,QAErB6zB,EAAUzzB,IAWhB,SAASyzB,EAAU1lB,GACjBylB,EAAQzlB,EAAO6lB,SAEX7lB,EAAOulB,WACTA,EAAW90B,OAAOsQ,OAAOwkB,GAAY,GAAIvlB,EAAOulB,WAQpD,SAASE,EAAQI,GACf,IAAI/e,GAAS,EAEb,GAAgB,OAAZ+e,QAAgCpkB,IAAZokB,OAEjB,KAAI10B,MAAMF,QAAQ40B,GAMvB,MAAM,IAAIhyB,UAAU,oCAAsCgyB,EAAU,KALpE,OAAS/e,EAAQ+e,EAAQ/yB,QAAQ,CAE/B6yB,EADcE,EAAQ/e,MAa5B,SAAS0e,EAAUI,EAAQ3zB,GACzB,IAEI6zB,EAFAhf,GAAS,EAIb,OAASA,EAAQ4d,EAAU5xB,QACzB,GAAI4xB,EAAU5d,GAAO,KAAO8e,EAAQ,CAClCE,EAAQpB,EAAU5d,GAClB,MAIAgf,GACEC,EAAWD,EAAM,KAAOC,EAAW9zB,KACrCA,EAAQM,GAAO,EAAMuzB,EAAM,GAAI7zB,IAGjC6zB,EAAM,GAAK7zB,GAGXyyB,EAAUpvB,KAAK,IAAI1C,cAjMzBkyB,EAAUjpB,MAuMV,SAAemqB,GACblB,EAAUK,SACV,MAAMxE,EAAOsF,EAAMD,GACbf,EAASH,EAAUG,OAGzB,GAFAiB,EAAa,QAASjB,GAElBkB,EAAQlB,EAAQ,SAElB,OAAO,IAAIA,EAAOzjB,OAAOmf,GAAOA,GAAM9kB,QAIxC,OAAOopB,EAAOzjB,OAAOmf,GAAOA,IAlN9BmE,EAAUpe,UAsNV,SAAmBnS,EAAMyxB,GACvBlB,EAAUK,SACV,MAAMxE,EAAOsF,EAAMD,GACbd,EAAWJ,EAAUI,SAI3B,GAHAkB,EAAe,YAAalB,GAC5BmB,EAAW9xB,GAEP4xB,EAAQjB,EAAU,WAEpB,OAAO,IAAIA,EAAS3wB,EAAMosB,GAAM2F,UAIlC,OAAOpB,EAAS3wB,EAAMosB,IAjOxBmE,EAAUT,IA0OV,SAAa9vB,EAAMyxB,EAAKpG,GACtByG,EAAW9xB,GACXuwB,EAAUK,SAELvF,GAA2B,oBAARoG,IACtBpG,EAAWoG,EACXA,OAAMvkB,GAGR,IAAKme,EACH,OAAO,IAAIpM,QAAQsH,GAUrB,SAASA,EAASrH,EAASC,GAUzB,SAAS3R,EAAKhN,EAAOwxB,EAAM5F,GACzB4F,EAAOA,GAAQhyB,EACXQ,EACF2e,EAAO3e,GACE0e,EACTA,EAAQ8S,GAGR3G,EAAS,KAAM2G,EAAM5F,GAhBzBwD,EAAaE,IAAI9vB,EAAM0xB,EAAMD,GAAMjkB,GATrC+Y,EAAS,KAAM8E,IAtPjBkF,EAAU0B,QAsRV,SAAiBjyB,EAAMosB,GAErB,IAAI3gB,EAEAymB,EAOJ,OALA3B,EAAUT,IAAI9vB,EAAMosB,EAAM5e,GAE1B2kB,EAAW,UAAW,MAAOD,GAGtBzmB,EAOP,SAAS+B,EAAKhN,EAAOwxB,GACnB7C,EAAK3uB,GACLiL,EAASumB,EACTE,GAAW,IAzSf3B,EAAU6B,QAkTV,SAAiBX,EAAKpG,GAKpB,GAJAkF,EAAUK,SACVe,EAAa,UAAWpB,EAAUG,QAClCmB,EAAe,UAAWtB,EAAUI,WAE/BtF,EACH,OAAO,IAAIpM,QAAQsH,GAUrB,SAASA,EAASrH,EAASC,GACzB,MAAMiN,EAAOsF,EAAMD,GA0BnB,SAASjkB,EAAKhN,EAAO4rB,GACf5rB,IAAU4rB,EACZjN,EAAO3e,GACE0e,EACTA,EAAQkN,GAGRf,EAAS,KAAMe,GA/BnBmE,EAAUT,IAAIS,EAAUjpB,MAAM8kB,GAAOA,GAAM,CAAC5rB,EAAOwxB,EAAM5F,KACvD,IAAI5rB,GAAUwxB,GAAS5F,EAEhB,CAEL,MAAM3gB,EAAS8kB,EAAUpe,UAAU6f,EAAM5F,QAE1Blf,IAAXzB,GAAmC,OAAXA,IAsMZ,kBADI/N,EAnMY+N,IAoMJ7D,EAASlK,GAnMnC0uB,EAAK1uB,MAAQ+N,EAEb2gB,EAAK3gB,OAASA,GAGhB+B,EAAKhN,EAAO4rB,QAbZ5e,EAAKhN,GA0Mf,IAA8B9C,KAtN1B6oB,EAAS,KAAM8E,IA1TjBkF,EAAU8B,YA0WV,SAAqBZ,GAEnB,IAAIS,EAEJ3B,EAAUK,SACVe,EAAa,cAAepB,EAAUG,QACtCmB,EAAe,cAAetB,EAAUI,UAExC,MAAMvE,EAAOsF,EAAMD,GAMnB,OAJAlB,EAAU6B,QAAQhG,EAAM5e,GAExB2kB,EAAW,cAAe,UAAWD,GAE9B9F,EAMP,SAAS5e,EAAKhN,GACZ0xB,GAAW,EACX/C,EAAK3uB,KA7XF+vB,EAIP,SAASA,IACP,MAAM+B,EAAc3C,IACpB,IAAIpd,GAAS,EAEb,OAASA,EAAQ4d,EAAU5xB,QACzB+zB,EAAY3e,OAAOwc,EAAU5d,IAK/B,OAFA+f,EAAYxc,KAAK9X,GAAO,EAAM,GAAIqyB,IAE3BiC,GAzDY3C,GAAOiB,SAExBH,EAAM,GAAGr0B,eAkbf,SAASw1B,EAAQl0B,EAAOH,GACtB,MACmB,oBAAVG,GAGPA,EAAMvB,YAeV,SAAcuB,GAEZ,IAAIV,EAEJ,IAAKA,KAAOU,EACV,GAAI+yB,EAAI5zB,KAAKa,EAAOV,GAClB,OAAO,EAIX,OAAO,EApBJuM,CAAK7L,EAAMvB,YAAcoB,KAAQG,EAAMvB,WA8B5C,SAASw1B,EAAap0B,EAAMG,GAC1B,GAAqB,oBAAVA,EACT,MAAM,IAAI4B,UAAU,WAAa/B,EAAO,sBAW5C,SAASs0B,EAAet0B,EAAMG,GAC5B,GAAqB,oBAAVA,EACT,MAAM,IAAI4B,UAAU,WAAa/B,EAAO,wBAW5C,SAASizB,EAAejzB,EAAM6yB,GAC5B,GAAIA,EACF,MAAM,IAAIzvB,MACR,gBACEpD,EACA,oHAWR,SAASu0B,EAAW9xB,GAGlB,IAAKwxB,EAAWxxB,IAA8B,kBAAdA,EAAK0B,KACnC,MAAM,IAAIpC,UAAU,uBAAyBU,EAAO,KAaxD,SAASmyB,EAAW50B,EAAMg1B,EAAWL,GACnC,IAAKA,EACH,MAAM,IAAIvxB,MACR,IAAMpD,EAAO,0BAA4Bg1B,EAAY,aAS3D,SAASb,EAAMh0B,GACb,OAOF,SAAyBA,GACvB,OAAOkiB,QACLliB,GACmB,kBAAVA,GACP,YAAaA,GACb,aAAcA,GAZX80B,CAAgB90B,GAASA,EAAQ,IAAI4wB,EAAM5wB,GCpjBpD,MAAM+0B,EAAe,GAuCrB,SAASC,EAAIh1B,EAAOi1B,EAAiBC,GACnC,GAqDF,SAAcl1B,GACZ,OAAOkiB,QAAQliB,GAA0B,kBAAVA,GAtD3BsC,CAAKtC,GAAQ,CACf,GAAI,UAAWA,EACb,MAAsB,SAAfA,EAAMgE,MAAoBkxB,EAAmBl1B,EAAMA,MAAX,GAGjD,GAAIi1B,GAAmB,QAASj1B,GAASA,EAAMm1B,IAC7C,OAAOn1B,EAAMm1B,IAGf,GAAI,aAAcn1B,EAChB,OAAOwtB,EAAIxtB,EAAMo1B,SAAUH,EAAiBC,GAIhD,OAAIh2B,MAAMF,QAAQgB,GACTwtB,EAAIxtB,EAAOi1B,EAAiBC,GAG9B,GAeT,SAAS1H,EAAI6E,EAAQ4C,EAAiBC,GAEpC,MAAMnnB,EAAS,GACf,IAAI8G,GAAS,EAEb,OAASA,EAAQwd,EAAOxxB,QACtBkN,EAAO8G,GAASmgB,EAAI3C,EAAOxd,GAAQogB,EAAiBC,GAGtD,OAAOnnB,EAAO2F,KAAK,ICxEd,SAASwV,EAAOmM,EAAMjzB,EAAO8b,EAAQoX,GAC1C,MAAM5yB,EAAM2yB,EAAKx0B,OACjB,IAEIgxB,EAFA0D,EAAa,EAajB,GAPEnzB,EADEA,EAAQ,GACDA,EAAQM,EAAM,EAAIA,EAAMN,EAEzBA,EAAQM,EAAMA,EAAMN,EAE9B8b,EAASA,EAAS,EAAIA,EAAS,EAG3BoX,EAAMz0B,OAAS,IACjBgxB,EAAa3yB,MAAM4T,KAAKwiB,GACxBzD,EAAW3J,QAAQ9lB,EAAO8b,GAE1BmX,EAAKnM,UAAU2I,QAMf,IAHI3T,GAAQmX,EAAKnM,OAAO9mB,EAAO8b,GAGxBqX,EAAaD,EAAMz0B,QACxBgxB,EAAayD,EAAM7xB,MAAM8xB,EAAYA,EAAa,KAClD1D,EAAW3J,QAAQ9lB,EAAO,GAE1BizB,EAAKnM,UAAU2I,GACf0D,GAAc,IACdnzB,GAAS,IAqBR,SAASiB,EAAKgyB,EAAMC,GACzB,OAAID,EAAKx0B,OAAS,GAChBqoB,EAAOmM,EAAMA,EAAKx0B,OAAQ,EAAGy0B,GACtBD,GAEFC,ECtET,MAAM52B,EAAiB,GAAGA,eA+B1B,SAAS82B,EAAgBhI,EAAKiI,GAE5B,IAAIC,EAEJ,IAAKA,KAAQD,EAAW,CACtB,MAEME,GAFQj3B,EAAeS,KAAKquB,EAAKkI,GAAQlI,EAAIkI,QAAQlmB,KAEpCge,EAAIkI,GAAQ,IAE7BE,EAAQH,EAAUC,GAExB,IAAIxjB,EAEJ,GAAI0jB,EACF,IAAK1jB,KAAQ0jB,EAAO,CACbl3B,EAAeS,KAAKw2B,EAAMzjB,KAAOyjB,EAAKzjB,GAAQ,IACnD,MAAMlS,EAAQ41B,EAAM1jB,GACpB2jB,EAEEF,EAAKzjB,GACLhT,MAAMF,QAAQgB,GAASA,EAAQA,EAAQ,CAACA,GAAS,MAe3D,SAAS61B,EAAWC,EAAUT,GAC5B,IAAIxgB,GAAS,EAEb,MAAMkhB,EAAS,GAEf,OAASlhB,EAAQwgB,EAAKx0B,SAEE,UAApBw0B,EAAKxgB,GAAO6e,IAAkBoC,EAAWC,GAAQ1yB,KAAKgyB,EAAKxgB,IAG/DqU,EAAO4M,EAAU,EAAG,EAAGC,GC3ElB,MCaMC,EAAaC,GAAW,YAcxBC,EAAoBD,GAAW,cAuB/BE,EAAaF,GAAW,uBAa9B,SAASG,EAAalkB,GAC3B,OAGW,OAATA,IAAkBA,EAAO,IAAe,MAATA,GAe5B,MAAMmkB,EAAaJ,GAAW,MAoBxBK,EAAgBL,GAAW,cAe3BM,EAAmBN,GAAW,kBAiBpC,SAASO,EAAmBtkB,GACjC,OAAgB,OAATA,GAAiBA,GAAQ,EAY3B,SAASukB,EAA0BvkB,GACxC,OAAgB,OAATA,IAAkBA,EAAO,GAAc,KAATA,GAkBhC,SAASwkB,GAAcxkB,GAC5B,OAAiB,IAAVA,IAAyB,IAAVA,GAAwB,KAATA,EAwBhC,MAAMykB,GAAqBV,GD9LhC,wwCCoNWW,GAAoBX,GAAW,MAQ5C,SAASA,GAAWY,GAClB,OAUA,SAAe3kB,GACb,OAAgB,OAATA,GAAiB2kB,EAAMjjB,KAAKrE,OAAOunB,aAAa5kB,KCzMpD,SAAS6kB,GAAaC,EAASC,EAAIjzB,EAAMkzB,GAC9C,MAAMC,EAAQD,EAAMA,EAAM,EAAIjmB,OAAOoiB,kBACrC,IAAIjiB,EAAO,EACX,OAGA,SAAec,GACb,GAAIwkB,GAAcxkB,GAEhB,OADA8kB,EAAQI,MAAMpzB,GACPqzB,EAAOnlB,GAEhB,OAAO+kB,EAAG/kB,IAIZ,SAASmlB,EAAOnlB,GACd,OAAIwkB,GAAcxkB,IAASd,IAAS+lB,GAClCH,EAAQM,QAAQplB,GACTmlB,IAETL,EAAQO,KAAKvzB,GACNizB,EAAG/kB,KCpDP,MAAMtP,GAAU,CACrB40B,SAOF,SAA2BR,GACzB,MAAMS,EAAeT,EAAQU,QAC3Bj1B,KAAK0W,OAAO0c,WAAW8B,gBASzB,SAAoCzlB,GAClC,GAAa,OAATA,EAEF,YADA8kB,EAAQM,QAAQplB,GAMlB,OAHA8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACNR,GAAaC,EAASS,EAAc,iBAI7C,SAA0BvlB,GAExB,OADA8kB,EAAQI,MAAM,aACPQ,EAAU1lB,MAlBnB,IAAI2lB,EACJ,OAAOJ,EAqBP,SAASG,EAAU1lB,GACjB,MAAMuB,EAAQujB,EAAQI,MAAM,YAAa,CACvC9e,YAAa,OACbuf,SAAAA,IAMF,OAJIA,IACFA,EAAShoB,KAAO4D,GAElBokB,EAAWpkB,EACJ2E,EAAKlG,GAId,SAASkG,EAAKlG,GACZ,OAAa,OAATA,GACF8kB,EAAQO,KAAK,aACbP,EAAQO,KAAK,kBACbP,EAAQM,QAAQplB,IAGdskB,EAAmBtkB,IACrB8kB,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,aACNK,IAITZ,EAAQM,QAAQplB,GACTkG,MCxDJ,MAAMnB,GAAW,CACtBugB,SAYF,SAA4BR,GAC1B,MAAM7qB,EAAO1J,KAEPiP,EAAQ,GACd,IAEIomB,EAEAC,EAEAC,EANAC,EAAY,EAOhB,OAAO71B,EAGP,SAASA,EAAM8P,GAWb,GAAI+lB,EAAYvmB,EAAM7Q,OAAQ,CAC5B,MAAMq3B,EAAOxmB,EAAMumB,GAEnB,OADA9rB,EAAKgsB,eAAiBD,EAAK,GACpBlB,EAAQU,QACbQ,EAAK,GAAGE,aACRC,EACAC,EAHKtB,CAIL9kB,GAIJ,OAAOomB,EAAmBpmB,GAI5B,SAASmmB,EAAiBnmB,GAMxB,GALA+lB,IAKI9rB,EAAKgsB,eAAeI,WAAY,CAClCpsB,EAAKgsB,eAAeI,gBAAa/oB,EAC7BsoB,GACFU,IAKF,MAAMC,EAAmBtsB,EAAKusB,OAAO73B,OACrC,IAEIqtB,EAFAyK,EAAkBF,EAKtB,KAAOE,KACL,GACsC,SAApCxsB,EAAKusB,OAAOC,GAAiB,IACY,cAAzCxsB,EAAKusB,OAAOC,GAAiB,GAAG30B,KAChC,CACAkqB,EAAQ/hB,EAAKusB,OAAOC,GAAiB,GAAGj2B,IACxC,MAGJk2B,EAAeX,GAGf,IAAIpjB,EAAQ4jB,EACZ,KAAO5jB,EAAQ1I,EAAKusB,OAAO73B,QACzBsL,EAAKusB,OAAO7jB,GAAO,GAAGnS,IAAMlE,OAAOsQ,OAAO,GAAIof,GAC9CrZ,IAaF,OATAqU,EACE/c,EAAKusB,OACLC,EAAkB,EAClB,EACAxsB,EAAKusB,OAAOj1B,MAAMg1B,IAIpBtsB,EAAKusB,OAAO73B,OAASgU,EACdyjB,EAAmBpmB,GAE5B,OAAO9P,EAAM8P,GAIf,SAASomB,EAAmBpmB,GAM1B,GAAI+lB,IAAcvmB,EAAM7Q,OAAQ,CAI9B,IAAKi3B,EACH,OAAOe,EAAkB3mB,GAM3B,GAAI4lB,EAAUgB,kBAAoBhB,EAAUgB,iBAAiBC,SAC3D,OAAOC,EAAU9mB,GAQnB/F,EAAK8sB,UAAY/W,QACf4V,EAAUgB,mBAAqBhB,EAAUoB,+BAM7C,OADA/sB,EAAKgsB,eAAiB,GACfnB,EAAQmC,MACbC,GACAC,EACAC,EAHKtC,CAIL9kB,GAIJ,SAASmnB,EAAqBnnB,GAG5B,OAFI4lB,GAAWU,IACfI,EAAeX,GACRY,EAAkB3mB,GAI3B,SAASonB,EAAsBpnB,GAG7B,OAFA/F,EAAKgN,OAAOogB,KAAKptB,EAAKgS,MAAM9b,MAAQ41B,IAAcvmB,EAAM7Q,OACxDm3B,EAAkB7rB,EAAKgS,MAAMqb,OACtBR,EAAU9mB,GAInB,SAAS2mB,EAAkB3mB,GAGzB,OADA/F,EAAKgsB,eAAiB,GACfnB,EAAQU,QACb0B,GACAK,EACAT,EAHKhC,CAIL9kB,GAIJ,SAASunB,EAAkBvnB,GAIzB,OAHA+lB,IACAvmB,EAAMrO,KAAK,CAAC8I,EAAK2sB,iBAAkB3sB,EAAKgsB,iBAEjCU,EAAkB3mB,GAI3B,SAAS8mB,EAAU9mB,GACjB,OAAa,OAATA,GACE4lB,GAAWU,IACfI,EAAe,QACf5B,EAAQM,QAAQplB,KAGlB4lB,EAAYA,GAAa3rB,EAAKgN,OAAOugB,KAAKvtB,EAAKgS,OAC/C6Y,EAAQI,MAAM,YAAa,CACzB9e,YAAa,OACbuf,SAAUE,EACV4B,WAAY7B,IAEP8B,EAAa1nB,IAItB,SAAS0nB,EAAa1nB,GACpB,OAAa,OAATA,GACF2nB,EAAa7C,EAAQO,KAAK,cAAc,GACxCqB,EAAe,QACf5B,EAAQM,QAAQplB,IAGdskB,EAAmBtkB,IACrB8kB,EAAQM,QAAQplB,GAChB2nB,EAAa7C,EAAQO,KAAK,cAE1BU,EAAY,EACZ9rB,EAAK8sB,eAAYzpB,EACVpN,IAET40B,EAAQM,QAAQplB,GACT0nB,GAQT,SAASC,EAAapmB,EAAOqmB,GAC3B,MAAMC,EAAS5tB,EAAK6tB,YAAYvmB,GAyChC,GAxCIqmB,GAAKC,EAAO12B,KAAK,MACrBoQ,EAAMokB,SAAWE,EACbA,IAAYA,EAAWloB,KAAO4D,GAClCskB,EAAatkB,EACbqkB,EAAUmC,WAAWxmB,EAAMrR,OAC3B01B,EAAUta,MAAMuc,GAmCZ5tB,EAAKgN,OAAOogB,KAAK9lB,EAAMrR,MAAMC,MAAO,CACtC,IAAIwS,EAAQijB,EAAUY,OAAO73B,OAC7B,KAAOgU,KACL,GAEEijB,EAAUY,OAAO7jB,GAAO,GAAGzS,MAAMo3B,OAASxB,KAExCF,EAAUY,OAAO7jB,GAAO,GAAGnS,KAE3Bo1B,EAAUY,OAAO7jB,GAAO,GAAGnS,IAAI82B,OAASxB,GAI1C,OAMJ,MAAMS,EAAmBtsB,EAAKusB,OAAO73B,OACrC,IAEIq5B,EAEAhM,EAJAyK,EAAkBF,EAOtB,KAAOE,KACL,GACsC,SAApCxsB,EAAKusB,OAAOC,GAAiB,IACY,cAAzCxsB,EAAKusB,OAAOC,GAAiB,GAAG30B,KAChC,CACA,GAAIk2B,EAAM,CACRhM,EAAQ/hB,EAAKusB,OAAOC,GAAiB,GAAGj2B,IACxC,MAEFw3B,GAAO,EAOX,IAJAtB,EAAeX,GAGfpjB,EAAQ4jB,EACD5jB,EAAQ1I,EAAKusB,OAAO73B,QACzBsL,EAAKusB,OAAO7jB,GAAO,GAAGnS,IAAMlE,OAAOsQ,OAAO,GAAIof,GAC9CrZ,IAIFqU,EACE/c,EAAKusB,OACLC,EAAkB,EAClB,EACAxsB,EAAKusB,OAAOj1B,MAAMg1B,IAIpBtsB,EAAKusB,OAAO73B,OAASgU,GAQzB,SAAS+jB,EAAexnB,GACtB,IAAIyD,EAAQnD,EAAM7Q,OAGlB,KAAOgU,KAAUzD,GAAM,CACrB,MAAMyiB,EAAQniB,EAAMmD,GACpB1I,EAAKgsB,eAAiBtE,EAAM,GAC5BA,EAAM,GAAG0D,KAAKp4B,KAAKgN,EAAM6qB,GAE3BtlB,EAAM7Q,OAASuQ,EAEjB,SAASonB,IACPV,EAAUta,MAAM,CAAC,OACjBua,OAAavoB,EACbsoB,OAAYtoB,EACZrD,EAAKgsB,eAAeI,gBAAa/oB,KAnV/B4pB,GAAqB,CACzB5B,SA0VF,SAA2BR,EAASC,EAAIkD,GAGtC,OAAOpD,GACLC,EACAA,EAAQU,QAAQj1B,KAAK0W,OAAO0c,WAAW5e,SAAUggB,EAAIkD,GACrD,aACA13B,KAAK0W,OAAO0c,WAAWuE,QAAQC,KAAKpJ,SAAS,qBAAkBzhB,EAAY,KCjXxE,MAAM8qB,GAAY,CACvB9C,SAQF,SAA2BR,EAASC,EAAIkD,GACtC,OAgBA,SAAejoB,GACb,OAAOwkB,GAAcxkB,GACjB6kB,GAAaC,EAASuD,EAAO,aAA7BxD,CAA2C7kB,GAC3CqoB,EAAMroB,IAiBZ,SAASqoB,EAAMroB,GACb,OAAgB,OAATA,GAAiBskB,EAAmBtkB,GAAQ+kB,EAAG/kB,GAAQioB,EAAIjoB,KA7CpEsoB,SAAS,GCGJ,SAASC,GAAY/B,GAE1B,MAAMgC,EAAQ,GACd,IAEIxZ,EAEAyZ,EAEAC,EAEAC,EAEAhJ,EAEAiJ,EAEAC,EAdAlmB,GAAS,EAeb,OAASA,EAAQ6jB,EAAO73B,QAAQ,CAC9B,KAAOgU,KAAS6lB,GACd7lB,EAAQ6lB,EAAM7lB,GAMhB,GAJAqM,EAAQwX,EAAO7jB,GAKbA,GACkB,cAAlBqM,EAAM,GAAGld,MACqB,mBAA9B00B,EAAO7jB,EAAQ,GAAG,GAAG7Q,OAErB82B,EAAY5Z,EAAM,GAAGyY,WAAWjB,OAChCkC,EAAa,EAEXA,EAAaE,EAAUj6B,QACW,oBAAlCi6B,EAAUF,GAAY,GAAG52B,OAEzB42B,GAAc,GAGdA,EAAaE,EAAUj6B,QACW,YAAlCi6B,EAAUF,GAAY,GAAG52B,MAEzB,OAAS42B,EAAaE,EAAUj6B,QACQ,YAAlCi6B,EAAUF,GAAY,GAAG52B,MAGS,cAAlC82B,EAAUF,GAAY,GAAG52B,OAC3B82B,EAAUF,GAAY,GAAGI,6BAA8B,EACvDJ,KAOR,GAAiB,UAAb1Z,EAAM,GACJA,EAAM,GAAG5I,cACX9Z,OAAOsQ,OAAO4rB,EAAOO,GAAWvC,EAAQ7jB,IACxCA,EAAQ6lB,EAAM7lB,GACdkmB,GAAO,QAIN,GAAI7Z,EAAM,GAAGga,WAAY,CAG5B,IAFAN,EAAa/lB,EACb8lB,OAAYnrB,EACLorB,MACLC,EAAanC,EAAOkC,GAEK,eAAvBC,EAAW,GAAG72B,MACS,oBAAvB62B,EAAW,GAAG72B,OAEQ,UAAlB62B,EAAW,KACTF,IACFjC,EAAOiC,GAAW,GAAG32B,KAAO,mBAE9B62B,EAAW,GAAG72B,KAAO,aACrB22B,EAAYC,GAMdD,IAEFzZ,EAAM,GAAGxe,IAAMlE,OAAOsQ,OAAO,GAAI4pB,EAAOiC,GAAW,GAAGv4B,OAGtDyvB,EAAa6G,EAAOj1B,MAAMk3B,EAAW9lB,GACrCgd,EAAW3J,QAAQhH,GACnBgI,EAAOwP,EAAQiC,EAAW9lB,EAAQ8lB,EAAY,EAAG9I,KAIvD,OAAQkJ,EAUV,SAASE,GAAWvC,EAAQyC,GAC1B,MAAM1nB,EAAQilB,EAAOyC,GAAY,GAC3B5uB,EAAUmsB,EAAOyC,GAAY,GACnC,IAAIC,EAAgBD,EAAa,EAEjC,MAAME,EAAiB,GACjBC,EACJ7nB,EAAMkmB,YAAcptB,EAAQ4M,OAAO1F,EAAM6E,aAAa7E,EAAMrR,OACxDm5B,EAAcD,EAAU5C,OAExBgC,EAAQ,GAERc,EAAO,GAEb,IAAIzB,EAEAlC,EACAhjB,GAAS,EAET4mB,EAAUhoB,EACVioB,EAAS,EACTt5B,EAAQ,EACZ,MAAMu5B,EAAS,CAACv5B,GAIhB,KAAOq5B,GAAS,CAEd,KAAO/C,IAAS0C,GAAe,KAAOK,IAGtCJ,EAAeh4B,KAAK+3B,GACfK,EAAQ9B,aACXI,EAASxtB,EAAQytB,YAAYyB,GACxBA,EAAQ5rB,MACXkqB,EAAO12B,KAAK,MAEVw0B,GACFyD,EAAUrB,WAAWwB,EAAQr5B,OAE3Bq5B,EAAQT,8BACVM,EAAUM,oCAAqC,GAEjDN,EAAU9d,MAAMuc,GACZ0B,EAAQT,8BACVM,EAAUM,wCAAqCpsB,IAKnDqoB,EAAW4D,EACXA,EAAUA,EAAQ5rB,KAMpB,IADA4rB,EAAUhoB,IACDoB,EAAQ0mB,EAAY16B,QAGC,SAA1B06B,EAAY1mB,GAAO,IACW,UAA9B0mB,EAAY1mB,EAAQ,GAAG,IACvB0mB,EAAY1mB,GAAO,GAAG7Q,OAASu3B,EAAY1mB,EAAQ,GAAG,GAAG7Q,MACzDu3B,EAAY1mB,GAAO,GAAGzS,MAAMC,OAASk5B,EAAY1mB,GAAO,GAAGnS,IAAIL,OAE/DD,EAAQyS,EAAQ,EAChB8mB,EAAOt4B,KAAKjB,GAEZq5B,EAAQ9B,gBAAanqB,EACrBisB,EAAQ5D,cAAWroB,EACnBisB,EAAUA,EAAQ5rB,MAqBtB,IAhBAyrB,EAAU5C,OAAS,GAKf+C,GAEFA,EAAQ9B,gBAAanqB,EACrBisB,EAAQ5D,cAAWroB,GAEnBmsB,EAAO3mB,MAKTH,EAAQ8mB,EAAO96B,OACRgU,KAAS,CACd,MAAMpR,EAAQ83B,EAAY93B,MAAMk4B,EAAO9mB,GAAQ8mB,EAAO9mB,EAAQ,IACxDzS,EAAQi5B,EAAermB,MAC7B0lB,EAAMxS,QAAQ,CAAC9lB,EAAOA,EAAQqB,EAAM5C,OAAS,IAC7CqoB,EAAOwP,EAAQt2B,EAAO,EAAGqB,GAG3B,IADAoR,GAAS,IACAA,EAAQ6lB,EAAM75B,QACrB26B,EAAKE,EAAShB,EAAM7lB,GAAO,IAAM6mB,EAAShB,EAAM7lB,GAAO,GACvD6mB,GAAUhB,EAAM7lB,GAAO,GAAK6lB,EAAM7lB,GAAO,GAAK,EAEhD,OAAO2mB,EC9MF,MAAM54B,GAAU,CACrB40B,SAyBF,SAAyBR,EAASC,GAEhC,IAAIY,EACJ,OAYA,SAAoB3lB,GAKlB,OAJA8kB,EAAQI,MAAM,WACdS,EAAWb,EAAQI,MAAM,eAAgB,CACvC9e,YAAa,YAERujB,EAAY3pB,IAarB,SAAS2pB,EAAY3pB,GACnB,OAAa,OAATA,EACK4pB,EAAW5pB,GAKhBskB,EAAmBtkB,GACd8kB,EAAQmC,MACb4C,GACAC,EACAF,EAHK9E,CAIL9kB,IAIJ8kB,EAAQM,QAAQplB,GACT2pB,GAQT,SAASC,EAAW5pB,GAGlB,OAFA8kB,EAAQO,KAAK,gBACbP,EAAQO,KAAK,WACNN,EAAG/kB,GAQZ,SAAS8pB,EAAgB9pB,GAQvB,OAPA8kB,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,gBACbM,EAAShoB,KAAOmnB,EAAQI,MAAM,eAAgB,CAC5C9e,YAAa,UACbuf,SAAAA,IAEFA,EAAWA,EAAShoB,KACbgsB,IArGTra,QAeF,SAAwBkX,GAEtB,OADA+B,GAAY/B,GACLA,IAbHqD,GAAwB,CAC5BvE,SAwGF,SAA8BR,EAASC,EAAIkD,GACzC,MAAMhuB,EAAO1J,KACb,OAOA,SAAwByP,GAKtB,OAJA8kB,EAAQO,KAAK,gBACbP,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACNR,GAAaC,EAASiF,EAAU,eAQzC,SAASA,EAAS/pB,GAChB,GAAa,OAATA,GAAiBskB,EAAmBtkB,GACtC,OAAOioB,EAAIjoB,GAKb,MAAM6N,EAAO5T,EAAKusB,OAAOvsB,EAAKusB,OAAO73B,OAAS,GAC9C,OACGsL,EAAKgN,OAAO0c,WAAWuE,QAAQC,KAAKpJ,SAAS,iBAC9ClR,GACiB,eAAjBA,EAAK,GAAG/b,MACR+b,EAAK,GAAGmc,eAAenc,EAAK,IAAI,GAAMlf,QAAU,EAEzCo2B,EAAG/kB,GAEL8kB,EAAQiC,UAAU9sB,EAAKgN,OAAO0c,WAAW6D,KAAMS,EAAKlD,EAApDD,CAAwD9kB,KA7IjEsoB,SAAS,GCbJ,MAAMd,GAAO,CAClBlC,SAOF,SAAwBR,GACtB,MAAM7qB,EAAO1J,KACP05B,EAAUnF,EAAQU,QAEtB4C,IAoBF,SAAuBpoB,GACrB,GAAa,OAATA,EAEF,YADA8kB,EAAQM,QAAQplB,GAOlB,OAJA8kB,EAAQI,MAAM,mBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,mBACbprB,EAAK2sB,sBAAmBtpB,EACjB2sB,IA1BPnF,EAAQU,QACNj1B,KAAK0W,OAAO0c,WAAWuG,YACvBC,EACAtF,GACEC,EACAA,EAAQU,QACNj1B,KAAK0W,OAAO0c,WAAW6D,KACvB2C,EACArF,EAAQU,QAAQ90B,GAASy5B,IAE3B,gBAIN,OAAOF,EAgBP,SAASE,EAAenqB,GACtB,GAAa,OAATA,EAQJ,OAJA8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACbprB,EAAK2sB,sBAAmBtpB,EACjB2sB,EAPLnF,EAAQM,QAAQplB,MCjDf,MAAMoqB,GAAW,CACtBC,WAAYC,MAED12B,GAAS22B,GAAkB,UAC3BC,GAAOD,GAAkB,QAMtC,SAASA,GAAkBE,GACzB,MAAO,CACLnF,SAUF,SAAwBR,GACtB,MAAM7qB,EAAO1J,KACPozB,EAAapzB,KAAK0W,OAAO0c,WAAW8G,GACpCD,EAAO1F,EAAQU,QAAQ7B,EAAYzzB,EAAOw6B,GAChD,OAAOx6B,EAGP,SAASA,EAAM8P,GACb,OAAO2qB,EAAQ3qB,GAAQwqB,EAAKxqB,GAAQ0qB,EAAQ1qB,GAI9C,SAAS0qB,EAAQ1qB,GACf,GAAa,OAATA,EAMJ,OAFA8kB,EAAQI,MAAM,QACdJ,EAAQM,QAAQplB,GACTkG,EALL4e,EAAQM,QAAQplB,GASpB,SAASkG,EAAKlG,GACZ,OAAI2qB,EAAQ3qB,IACV8kB,EAAQO,KAAK,QACNmF,EAAKxqB,KAId8kB,EAAQM,QAAQplB,GACTkG,GAOT,SAASykB,EAAQ3qB,GACf,GAAa,OAATA,EACF,OAAO,EAET,MAAMmjB,EAAOQ,EAAW3jB,GACxB,IAAI2C,GAAS,EACb,GAAIwgB,EAGF,OAASxgB,EAAQwgB,EAAKx0B,QAAQ,CAC5B,MAAMq3B,EAAO7C,EAAKxgB,GAClB,IAAKqjB,EAAKL,UAAYK,EAAKL,SAAS14B,KAAKgN,EAAMA,EAAK0rB,UAClD,OAAO,EAIb,OAAO,IA/DT0E,WAAYC,GACA,SAAVG,EAAmBG,QAAyBttB,IAuElD,SAASgtB,GAAeO,GACtB,OAGA,SAAwBrE,EAAQnsB,GAC9B,IAEI6qB,EAFAviB,GAAS,EAMb,OAASA,GAAS6jB,EAAO73B,aACT2O,IAAV4nB,EACEsB,EAAO7jB,IAAoC,SAA1B6jB,EAAO7jB,GAAO,GAAG7Q,OACpCozB,EAAQviB,EACRA,KAEQ6jB,EAAO7jB,IAAoC,SAA1B6jB,EAAO7jB,GAAO,GAAG7Q,OAExC6Q,IAAUuiB,EAAQ,IACpBsB,EAAOtB,GAAO,GAAG10B,IAAMg2B,EAAO7jB,EAAQ,GAAG,GAAGnS,IAC5Cg2B,EAAOxP,OAAOkO,EAAQ,EAAGviB,EAAQuiB,EAAQ,GACzCviB,EAAQuiB,EAAQ,GAElBA,OAAQ5nB,GAGZ,OAAOutB,EAAgBA,EAAcrE,EAAQnsB,GAAWmsB,GAe5D,SAASoE,GAAuBpE,EAAQnsB,GACtC,IAAI4uB,EAAa,EAEjB,OAASA,GAAczC,EAAO73B,QAC5B,IACGs6B,IAAezC,EAAO73B,QACU,eAA/B63B,EAAOyC,GAAY,GAAGn3B,OACW,SAAnC00B,EAAOyC,EAAa,GAAG,GAAGn3B,KAC1B,CACA,MAAMoU,EAAOsgB,EAAOyC,EAAa,GAAG,GAC9B6B,EAASzwB,EAAQytB,YAAY5hB,GACnC,IAII6kB,EAJApoB,EAAQmoB,EAAOn8B,OACfq8B,GAAe,EACf9rB,EAAO,EAGX,KAAOyD,KAAS,CACd,MAAMsoB,EAAQH,EAAOnoB,GACrB,GAAqB,kBAAVsoB,EAAoB,CAE7B,IADAD,EAAcC,EAAMt8B,OACyB,KAAtCs8B,EAAMxuB,WAAWuuB,EAAc,IACpC9rB,IACA8rB,IAEF,GAAIA,EAAa,MACjBA,GAAe,OAGZ,IAAe,IAAXC,EACPF,GAAO,EACP7rB,SACK,IAAe,IAAX+rB,EAEJ,CAELtoB,IACA,OAGJ,GAAIzD,EAAM,CACR,MAAMqC,EAAQ,CACZzP,KACEm3B,IAAezC,EAAO73B,QAAUo8B,GAAQ7rB,EAAO,EAC3C,aACA,oBACNhP,MAAO,CACLC,KAAM+V,EAAK1V,IAAIL,KACfP,OAAQsW,EAAK1V,IAAIZ,OAASsP,EAC1BooB,OAAQphB,EAAK1V,IAAI82B,OAASpoB,EAC1BgsB,OAAQhlB,EAAKhW,MAAMg7B,OAASvoB,EAC5BwoB,aAAcxoB,EACVqoB,EACA9kB,EAAKhW,MAAMi7B,aAAeH,GAEhCx6B,IAAKlE,OAAOsQ,OAAO,GAAIsJ,EAAK1V,MAE9B0V,EAAK1V,IAAMlE,OAAOsQ,OAAO,GAAI2E,EAAMrR,OAC/BgW,EAAKhW,MAAMo3B,SAAWphB,EAAK1V,IAAI82B,OACjCh7B,OAAOsQ,OAAOsJ,EAAM3E,IAEpBilB,EAAOxP,OACLiS,EACA,EACA,CAAC,QAAS1nB,EAAOlH,GACjB,CAAC,OAAQkH,EAAOlH,IAElB4uB,GAAc,GAGlBA,IAGJ,OAAOzC,EC9LF,SAAS6D,GAAW1G,EAAY6C,EAAQnsB,GAE7C,MAAMqlB,EAAS,GACf,IAAI/c,GAAS,EAEb,OAASA,EAAQghB,EAAWh1B,QAAQ,CAClC,MAAM2gB,EAAUqU,EAAWhhB,GAAO0nB,WAE9B/a,IAAYoQ,EAAOX,SAASzP,KAC9BkX,EAASlX,EAAQkX,EAAQnsB,GACzBqlB,EAAOvuB,KAAKme,IAIhB,OAAOkX,ECeF,SAAS4E,GAAgBnkB,EAAQokB,EAAYzqB,GAElD,IAAIob,EAAQ1vB,OAAOsQ,OACjBgE,EACItU,OAAOsQ,OAAO,GAAIgE,GAClB,CACEzQ,KAAM,EACNP,OAAQ,EACR03B,OAAQ,GAEd,CACE4D,OAAQ,EACRC,cAAe,IAInB,MAAMG,EAAc,GAEdC,EAAuB,GAE7B,IAAIT,EAAS,GAETtrB,EAAQ,GAERgsB,GAAW,EAOf,MAAM1G,EAAU,CACdM,QAkJF,SAAiBplB,GACXskB,EAAmBtkB,IACrBgc,EAAM7rB,OACN6rB,EAAMpsB,OAAS,EACfosB,EAAMsL,SAAoB,IAAVtnB,EAAc,EAAI,EAClCyrB,MACmB,IAAVzrB,IACTgc,EAAMpsB,SACNosB,EAAMsL,UAIJtL,EAAMmP,aAAe,EACvBnP,EAAMkP,UAENlP,EAAMmP,eAKFnP,EAAMmP,eAAiBL,EAAO9O,EAAMkP,QAAQv8B,SAC9CqtB,EAAMmP,cAAgB,EACtBnP,EAAMkP,WAKV7wB,EAAQsrB,SAAW3lB,EAGnBwrB,GAAW,GA/KXtG,MAmLF,SAAepzB,EAAM45B,GAGnB,MAAMnqB,EAAQmqB,GAAU,GAKxB,OAJAnqB,EAAMzP,KAAOA,EACbyP,EAAMrR,MAAQ+b,IACd5R,EAAQmsB,OAAOr1B,KAAK,CAAC,QAASoQ,EAAOlH,IACrCmF,EAAMrO,KAAKoQ,GACJA,GA1LP8jB,KA8LF,SAAcvzB,GACZ,MAAMyP,EAAQ/B,EAAMsD,MAGpB,OAFAvB,EAAM/Q,IAAMyb,IACZ5R,EAAQmsB,OAAOr1B,KAAK,CAAC,OAAQoQ,EAAOlH,IAC7BkH,GAjMPikB,QAASmG,GAyMX,SAA+BC,EAAWxM,GACxCyM,EAAUD,EAAWxM,EAAKxe,SAzM1BqmB,MAAO0E,EAAiBG,GACxB/E,UAAW4E,EAAiBG,EAAmB,CAC7C/E,WAAW,KAST1sB,EAAU,CACdsrB,SAAU,KACV3lB,KAAM,KACNimB,eAAgB,GAChBO,OAAQ,GACRvf,OAAAA,EACA6gB,YAAAA,EACAkC,eA6CF,SAAwBzoB,EAAOwqB,GAC7B,OAsYJ,SAAyBjB,EAAQiB,GAC/B,IAAIppB,GAAS,EAEb,MAAM9G,EAAS,GAEf,IAAImwB,EACJ,OAASrpB,EAAQmoB,EAAOn8B,QAAQ,CAC9B,MAAMs8B,EAAQH,EAAOnoB,GAErB,IAAI7U,EACJ,GAAqB,kBAAVm9B,EACTn9B,EAAQm9B,OAER,OAAQA,GACN,KAAM,EACJn9B,EAAQ,KACR,MAEF,KAAM,EACJA,EAAQ,KACR,MAEF,KAAM,EACJA,EAAQ,OACR,MAEF,KAAM,EACJA,EAAQi+B,EAAa,IAAM,KAC3B,MAEF,KAAM,EACJ,IAAKA,GAAcC,EAAO,SAC1Bl+B,EAAQ,IACR,MAEF,QAEEA,EAAQuP,OAAOunB,aAAaqG,GAGlCe,GAAmB,IAAXf,EACRpvB,EAAO1K,KAAKrD,GAEd,OAAO+N,EAAO2F,KAAK,IAjbVyqB,CAAgBnE,EAAYvmB,GAAQwqB,IA7C3C9f,IAAAA,EACA8b,WAkEF,SAAoBj6B,GAClBw9B,EAAYx9B,EAAMqC,MAAQrC,EAAM8B,OAChC67B,KAnEAngB,MAsBF,SAAe/Z,GAKb,GAJAu5B,EAAS35B,EAAK25B,EAAQv5B,GACtB26B,IAGkC,OAA9BpB,EAAOA,EAAOn8B,OAAS,GACzB,MAAO,GAMT,OAJAk9B,EAAUR,EAAY,GAGtBhxB,EAAQmsB,OAAS6D,GAAWkB,EAAsBlxB,EAAQmsB,OAAQnsB,GAC3DA,EAAQmsB,SA1BjB,IAOI2F,EAPAtZ,EAAQwY,EAAW/F,SAASr4B,KAAKoN,EAASyqB,GAW9C,OAHIuG,EAAWhB,YACbkB,EAAqBp6B,KAAKk6B,GAErBhxB,EA4BP,SAASytB,EAAYvmB,GACnB,OA8VJ,SAAqBupB,EAAQvpB,GAC3B,MAAM6qB,EAAa7qB,EAAMrR,MAAMg7B,OACzBmB,EAAmB9qB,EAAMrR,MAAMi7B,aAC/BmB,EAAW/qB,EAAM/Q,IAAI06B,OACrBqB,EAAiBhrB,EAAM/Q,IAAI26B,aAEjC,IAAIqB,EACJ,GAAIJ,IAAeE,EAEjBE,EAAO,CAAC1B,EAAOsB,GAAY76B,MAAM86B,EAAkBE,QAC9C,CAEL,GADAC,EAAO1B,EAAOv5B,MAAM66B,EAAYE,GAC5BD,GAAoB,EAAG,CACzB,MAAMze,EAAO4e,EAAK,GACE,kBAAT5e,EACT4e,EAAK,GAAK5e,EAAKrc,MAAM86B,GAErBG,EAAKC,QAGLF,EAAiB,GAEnBC,EAAKr7B,KAAK25B,EAAOwB,GAAU/6B,MAAM,EAAGg7B,IAGxC,OAAOC,EAvXEE,CAAY5B,EAAQvpB,GAI7B,SAAS0K,IAEP,MAAM,KAAC9b,EAAD,OAAOP,EAAP,OAAe03B,EAAf,OAAuB4D,EAAvB,aAA+BC,GAAgBnP,EACrD,MAAO,CACL7rB,KAAAA,EACAP,OAAAA,EACA03B,OAAAA,EACA4D,OAAAA,EACAC,aAAAA,GAwBJ,SAASe,IAEP,IAAIS,EACJ,KAAO3Q,EAAMkP,OAASJ,EAAOn8B,QAAQ,CACnC,MAAMs8B,EAAQH,EAAO9O,EAAMkP,QAG3B,GAAqB,kBAAVD,EAKT,IAJA0B,EAAa3Q,EAAMkP,OACflP,EAAMmP,aAAe,IACvBnP,EAAMmP,aAAe,GAGrBnP,EAAMkP,SAAWyB,GACjB3Q,EAAMmP,aAAeF,EAAMt8B,QAE3Bi+B,EAAG3B,EAAMxuB,WAAWuf,EAAMmP,oBAG5ByB,EAAG3B,IAWT,SAAS2B,EAAG5sB,GACVwrB,OAAWluB,EACX6uB,EAAensB,EACf6S,EAAQA,EAAM7S,GAuEhB,SAAS8rB,EAAkBe,EAAGzN,GAC5BA,EAAK0N,UASP,SAASnB,EAAiBoB,EAAUrB,GAClC,OAWA,SAAc/H,EAAYqJ,EAAaC,GAErC,IAAIC,EAEAC,EAEAvG,EAEAxH,EACJ,OAAOpyB,MAAMF,QAAQ62B,GACjByJ,EAAuBzJ,GACvB,aAAcA,EAEdyJ,EAAuB,CAACzJ,IAS5B,SAA+BriB,GAC7B,OAAOpR,EAGP,SAASA,EAAM8P,GACb,MAAMqtB,EAAe,OAATrtB,GAAiBsB,EAAItB,GAC3Bsb,EAAe,OAATtb,GAAiBsB,EAAI6mB,KAOjC,OAAOiF,EANM,IAGPpgC,MAAMF,QAAQugC,GAAOA,EAAMA,EAAM,CAACA,GAAO,MACzCrgC,MAAMF,QAAQwuB,GAAOA,EAAMA,EAAM,CAACA,GAAO,IAExC8R,CAA6BptB,IArBpCstB,CAAsB3J,GA+B1B,SAASyJ,EAAuBjK,GAG9B,OAFA+J,EAAmB/J,EACnBgK,EAAiB,EACG,IAAhBhK,EAAKx0B,OACAs+B,EAEFM,EAAgBpK,EAAKgK,IAS9B,SAASI,EAAgB3B,GACvB,OAGA,SAAe5rB,GAKbof,EAwER,WACE,MAAMoO,EAAavhB,IACbwhB,EAAgBpzB,EAAQsrB,SACxB+H,EAAwBrzB,EAAQusB,iBAChC+G,EAAmBtzB,EAAQmsB,OAAO73B,OAClCi/B,EAAa5gC,MAAM4T,KAAKpB,GAC9B,MAAO,CACLstB,QAAAA,EACAlsB,KAAM+sB,GAQR,SAASb,IACP9Q,EAAQwR,EACRnzB,EAAQsrB,SAAW8H,EACnBpzB,EAAQusB,iBAAmB8G,EAC3BrzB,EAAQmsB,OAAO73B,OAASg/B,EACxBnuB,EAAQouB,EACRnC,KA9FWoC,GACPjH,EAAmBgF,EACdA,EAAUtD,UACbjuB,EAAQusB,iBAAmBgF,GAK7B,GACEA,EAAUj+B,MACV0M,EAAQ4M,OAAO0c,WAAWuE,QAAQC,KAAKpJ,SAAS6M,EAAUj+B,MAE1D,OAAOs6B,EAAIjoB,GAEb,OAAO4rB,EAAUtG,SAASr4B,KAIxBy+B,EAASp/B,OAAOsQ,OAAOtQ,OAAOkM,OAAO6B,GAAUqxB,GAAUrxB,EACzDyqB,EACAC,EACAkD,EAPK2D,CAQL5rB,IAKN,SAAS+kB,EAAG/kB,GAGV,OAFAwrB,GAAW,EACXuB,EAASnG,EAAkBxH,GACpB4N,EAIT,SAAS/E,EAAIjoB,GAGX,OAFAwrB,GAAW,EACXpM,EAAK0N,YACCK,EAAiBD,EAAiBv+B,OAC/B4+B,EAAgBL,EAAiBC,IAEnCF,IAUb,SAASpB,EAAUD,EAAWhrB,GACxBgrB,EAAUvB,aAAekB,EAAqBxM,SAAS6M,IACzDL,EAAqBp6B,KAAKy6B,GAExBA,EAAUtc,SACZ0H,EACE3c,EAAQmsB,OACR5lB,EACAvG,EAAQmsB,OAAO73B,OAASiS,EACxBgrB,EAAUtc,QAAQjV,EAAQmsB,OAAOj1B,MAAMqP,GAAOvG,IAG9CuxB,EAAUkC,YACZzzB,EAAQmsB,OAASoF,EAAUkC,UAAUzzB,EAAQmsB,OAAQnsB,IAyCzD,SAASoxB,IACHzP,EAAM7rB,QAAQm7B,GAAetP,EAAMpsB,OAAS,IAC9CosB,EAAMpsB,OAAS07B,EAAYtP,EAAM7rB,MACjC6rB,EAAMsL,QAAUgE,EAAYtP,EAAM7rB,MAAQ,IC/dzC,MAAM49B,GAAgB,CAC3BpgC,KAAM,gBACN23B,SAOF,SAA+BR,EAASC,EAAIkD,GAC1C,IAEI+F,EAFA9uB,EAAO,EAGX,OAYA,SAAec,GAGb,OAFA8kB,EAAQI,MAAM,iBAehB,SAAgBllB,GAEd,OADAguB,EAAShuB,EACF2qB,EAAQ3qB,GAfR6jB,CAAO7jB,IA4BhB,SAAS2qB,EAAQ3qB,GACf,OAAIA,IAASguB,GACXlJ,EAAQI,MAAM,yBACP+I,EAASjuB,IAEdd,GAAQ,IAAe,OAATc,GAAiBskB,EAAmBtkB,KACpD8kB,EAAQO,KAAK,iBACNN,EAAG/kB,IAELioB,EAAIjoB,GAab,SAASiuB,EAASjuB,GAChB,OAAIA,IAASguB,GACXlJ,EAAQM,QAAQplB,GAChBd,IACO+uB,IAETnJ,EAAQO,KAAK,yBACNb,GAAcxkB,GACjB6kB,GAAaC,EAAS6F,EAAS,aAA/B9F,CAA6C7kB,GAC7C2qB,EAAQ3qB,OClFT,MAAMmjB,GAAO,CAClBx1B,KAAM,OACN23B,SA0BF,SAA2BR,EAASC,EAAIkD,GACtC,MAAMhuB,EAAO1J,KACPsd,EAAO5T,EAAKusB,OAAOvsB,EAAKusB,OAAO73B,OAAS,GAC9C,IAAIu/B,EACFrgB,GAAyB,eAAjBA,EAAK,GAAG/b,KACZ+b,EAAK,GAAGmc,eAAenc,EAAK,IAAI,GAAMlf,OACtC,EACFuQ,EAAO,EACX,OAGA,SAAec,GACb,MAAMvE,EACJxB,EAAKgsB,eAAen0B,OACV,KAATkO,GAAwB,KAATA,GAAwB,KAATA,EAC3B,gBACA,eACN,GACW,kBAATvE,GACKxB,EAAKgsB,eAAe+H,QAAUhuB,IAAS/F,EAAKgsB,eAAe+H,OAC5D7J,EAAWnkB,GACf,CAOA,GANK/F,EAAKgsB,eAAen0B,OACvBmI,EAAKgsB,eAAen0B,KAAO2J,EAC3BqpB,EAAQI,MAAMzpB,EAAM,CAClButB,YAAY,KAGH,kBAATvtB,EAEF,OADAqpB,EAAQI,MAAM,kBACE,KAATllB,GAAwB,KAATA,EAClB8kB,EAAQmC,MAAM8G,GAAe9F,EAAKkG,EAAlCrJ,CAA4C9kB,GAC5CmuB,EAASnuB,GAEf,IAAK/F,EAAK8sB,WAAsB,KAAT/mB,EAGrB,OAFA8kB,EAAQI,MAAM,kBACdJ,EAAQI,MAAM,iBACPkJ,EAAOpuB,GAGlB,OAAOioB,EAAIjoB,IAIb,SAASouB,EAAOpuB,GACd,OAAImkB,EAAWnkB,MAAWd,EAAO,IAC/B4lB,EAAQM,QAAQplB,GACTouB,KAGLn0B,EAAK8sB,WAAa7nB,EAAO,KAC1BjF,EAAKgsB,eAAe+H,OACjBhuB,IAAS/F,EAAKgsB,eAAe+H,OACpB,KAAThuB,GAAwB,KAATA,IAEnB8kB,EAAQO,KAAK,iBACN8I,EAASnuB,IAEXioB,EAAIjoB,GAMb,SAASmuB,EAASnuB,GAKhB,OAJA8kB,EAAQI,MAAM,kBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,kBACbprB,EAAKgsB,eAAe+H,OAAS/zB,EAAKgsB,eAAe+H,QAAUhuB,EACpD8kB,EAAQmC,MACbmB,GAEAnuB,EAAK8sB,UAAYkB,EAAMoG,EACvBvJ,EAAQU,QACN8I,GACAC,EACAC,IAMN,SAASH,EAAQruB,GAGf,OAFA/F,EAAKgsB,eAAewI,kBAAmB,EACvCP,IACOK,EAAYvuB,GAIrB,SAASwuB,EAAYxuB,GACnB,OAAIwkB,GAAcxkB,IAChB8kB,EAAQI,MAAM,4BACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,4BACNkJ,GAEFtG,EAAIjoB,GAIb,SAASuuB,EAAYvuB,GAInB,OAHA/F,EAAKgsB,eAAe/mB,KAClBgvB,EACAj0B,EAAK+vB,eAAelF,EAAQO,KAAK,mBAAmB,GAAM12B,OACrDo2B,EAAG/kB,KAjIZkmB,aAAc,CACZZ,SAwIJ,SAAkCR,EAASC,EAAIkD,GAC7C,MAAMhuB,EAAO1J,KAEb,OADA0J,EAAKgsB,eAAeI,gBAAa/oB,EAC1BwnB,EAAQmC,MAAMmB,GAAWiG,EAASK,GAGzC,SAASL,EAAQruB,GAOf,OANA/F,EAAKgsB,eAAe0I,kBAClB10B,EAAKgsB,eAAe0I,mBACpB10B,EAAKgsB,eAAewI,iBAIf5J,GACLC,EACAC,EACA,iBACA9qB,EAAKgsB,eAAe/mB,KAAO,EAJtB2lB,CAKL7kB,GAIJ,SAAS0uB,EAAS1uB,GAChB,OAAI/F,EAAKgsB,eAAe0I,oBAAsBnK,GAAcxkB,IAC1D/F,EAAKgsB,eAAe0I,uBAAoBrxB,EACxCrD,EAAKgsB,eAAewI,sBAAmBnxB,EAChCsxB,EAAiB5uB,KAE1B/F,EAAKgsB,eAAe0I,uBAAoBrxB,EACxCrD,EAAKgsB,eAAewI,sBAAmBnxB,EAChCwnB,EAAQU,QAAQqJ,GAAiB9J,EAAI6J,EAArC9J,CAAuD9kB,IAIhE,SAAS4uB,EAAiB5uB,GAOxB,OALA/F,EAAKgsB,eAAeI,YAAa,EAEjCpsB,EAAK8sB,eAAYzpB,EAGVunB,GACLC,EACAA,EAAQU,QAAQrC,GAAM4B,EAAIkD,GAC1B,aACAhuB,EAAKgN,OAAO0c,WAAWuE,QAAQC,KAAKpJ,SAAS,qBACzCzhB,EACA,EANCunB,CAOL7kB,MAtLJqlB,KAsNF,SAAyBP,GACvBA,EAAQO,KAAK90B,KAAK01B,eAAen0B,QAnN7Bw8B,GAAoC,CACxChJ,SAyNF,SAA0CR,EAASC,EAAIkD,GACrD,MAAMhuB,EAAO1J,KAIb,OAAOs0B,GACLC,GASF,SAAqB9kB,GACnB,MAAM6N,EAAO5T,EAAKusB,OAAOvsB,EAAKusB,OAAO73B,OAAS,GAC9C,OAAQ61B,GAAcxkB,IACpB6N,GACiB,6BAAjBA,EAAK,GAAG/b,KACNizB,EAAG/kB,GACHioB,EAAIjoB,KAbR,2BACA/F,EAAKgN,OAAO0c,WAAWuE,QAAQC,KAAKpJ,SAAS,qBACzCzhB,EACA,IAnONgrB,SAAS,GAILuG,GAAkB,CACtBvJ,SAmLF,SAAwBR,EAASC,EAAIkD,GACnC,MAAMhuB,EAAO1J,KACb,OAAOs0B,GACLC,GAOF,SAAqB9kB,GACnB,MAAM6N,EAAO5T,EAAKusB,OAAOvsB,EAAKusB,OAAO73B,OAAS,GAC9C,OAAOkf,GACY,mBAAjBA,EAAK,GAAG/b,MACR+b,EAAK,GAAGmc,eAAenc,EAAK,IAAI,GAAMlf,SAAWsL,EAAKgsB,eAAe/mB,KACnE6lB,EAAG/kB,GACHioB,EAAIjoB,KAXR,iBACA/F,EAAKgsB,eAAe/mB,KAAO,IAxL7BopB,SAAS,GCvBJ,MAAMwG,GAAa,CACxBnhC,KAAM,aACN23B,SAWF,SAAiCR,EAASC,EAAIkD,GAC5C,MAAMhuB,EAAO1J,KACb,OAYA,SAAeyP,GACb,GAAa,KAATA,EAAa,CACf,MAAM6S,EAAQ5Y,EAAKgsB,eAWnB,OAVKpT,EAAM/B,OACTgU,EAAQI,MAAM,aAAc,CAC1B8D,YAAY,IAEdnW,EAAM/B,MAAO,GAEfgU,EAAQI,MAAM,oBACdJ,EAAQI,MAAM,oBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,oBACNgD,EAET,OAAOJ,EAAIjoB,IAab,SAASqoB,EAAMroB,GACb,OAAIwkB,GAAcxkB,IAChB8kB,EAAQI,MAAM,8BACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,8BACbP,EAAQO,KAAK,oBACNN,IAETD,EAAQO,KAAK,oBACNN,EAAG/kB,MA7DZkmB,aAAc,CACZZ,SA4EJ,SAAwCR,EAASC,EAAIkD,GACnD,MAAMhuB,EAAO1J,KACb,OAeA,SAAmByP,GACjB,GAAIwkB,GAAcxkB,GAGhB,OAAO6kB,GACLC,EACAiK,EACA,aACA90B,EAAKgN,OAAO0c,WAAWuE,QAAQC,KAAKpJ,SAAS,qBACzCzhB,EACA,EANCunB,CAOL7kB,GAEJ,OAAO+uB,EAAW/uB,IAgBpB,SAAS+uB,EAAW/uB,GAClB,OAAO8kB,EAAQU,QAAQsJ,GAAY/J,EAAIkD,EAAhCnD,CAAqC9kB,MAzH9CqlB,KA8HF,SAAcP,GACZA,EAAQO,KAAK,gBChGR,SAAS2J,GACdlK,EACAC,EACAkD,EACAn2B,EACAm9B,EACAC,EACAC,EACAC,EACApK,GAEA,MAAMC,EAAQD,GAAOjmB,OAAOoiB,kBAC5B,IAAIkO,EAAU,EACd,OAcA,SAAervB,GACb,GAAa,KAATA,EAMF,OALA8kB,EAAQI,MAAMpzB,GACdgzB,EAAQI,MAAM+J,GACdnK,EAAQI,MAAMgK,GACdpK,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK6J,GACNI,EAIT,GAAa,OAATtvB,GAA0B,KAATA,GAAwB,KAATA,GAAekkB,EAAalkB,GAC9D,OAAOioB,EAAIjoB,GAQb,OANA8kB,EAAQI,MAAMpzB,GACdgzB,EAAQI,MAAMiK,GACdrK,EAAQI,MAAMkK,GACdtK,EAAQI,MAAM,cAAe,CAC3B9e,YAAa,WAERmpB,EAAIvvB,IAab,SAASsvB,EAAetvB,GACtB,OAAa,KAATA,GACF8kB,EAAQI,MAAMgK,GACdpK,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK6J,GACbpK,EAAQO,KAAK4J,GACbnK,EAAQO,KAAKvzB,GACNizB,IAETD,EAAQI,MAAMkK,GACdtK,EAAQI,MAAM,cAAe,CAC3B9e,YAAa,WAERopB,EAASxvB,IAalB,SAASwvB,EAASxvB,GAChB,OAAa,KAATA,GACF8kB,EAAQO,KAAK,eACbP,EAAQO,KAAK+J,GACNE,EAAetvB,IAEX,OAATA,GAA0B,KAATA,GAAeskB,EAAmBtkB,GAC9CioB,EAAIjoB,IAEb8kB,EAAQM,QAAQplB,GACA,KAATA,EAAcyvB,EAAiBD,GAaxC,SAASC,EAAezvB,GACtB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC8kB,EAAQM,QAAQplB,GACTwvB,GAEFA,EAASxvB,GAalB,SAASuvB,EAAIvvB,GACX,OACGqvB,GACS,OAATrvB,GAA0B,KAATA,IAAeukB,EAA0BvkB,GAQzDqvB,EAAUpK,GAAkB,KAATjlB,GACrB8kB,EAAQM,QAAQplB,GAChBqvB,IACOE,GAEI,KAATvvB,GACF8kB,EAAQM,QAAQplB,GAChBqvB,IACOE,GAMI,OAATvvB,GAA0B,KAATA,GAAwB,KAATA,GAAekkB,EAAalkB,GACvDioB,EAAIjoB,IAEb8kB,EAAQM,QAAQplB,GACA,KAATA,EAAc0vB,EAAYH,IAxB/BzK,EAAQO,KAAK,eACbP,EAAQO,KAAK+J,GACbtK,EAAQO,KAAK8J,GACbrK,EAAQO,KAAKvzB,GACNizB,EAAG/kB,IAiCd,SAAS0vB,EAAU1vB,GACjB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC8kB,EAAQM,QAAQplB,GACTuvB,GAEFA,EAAIvvB,ICvLR,SAAS2vB,GAAa7K,EAASC,EAAIkD,EAAKn2B,EAAM89B,EAAYR,GAC/D,MAAMn1B,EAAO1J,KACb,IAEIy3B,EAFA9oB,EAAO,EAGX,OAYA,SAAec,GAMb,OALA8kB,EAAQI,MAAMpzB,GACdgzB,EAAQI,MAAM0K,GACd9K,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAKuK,GACb9K,EAAQI,MAAMkK,GACPzE,GAaT,SAASA,EAAQ3qB,GACf,OACEd,EAAO,KACE,OAATc,GACS,KAATA,GACU,KAATA,IAAgBgoB,GAMP,KAAThoB,IACEd,GACD,2BAA4BjF,EAAKgN,OAAO0c,WAEnCsE,EAAIjoB,GAEA,KAATA,GACF8kB,EAAQO,KAAK+J,GACbtK,EAAQI,MAAM0K,GACd9K,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAKuK,GACb9K,EAAQO,KAAKvzB,GACNizB,GAILT,EAAmBtkB,IACrB8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACNsF,IAET7F,EAAQI,MAAM,cAAe,CAC3B9e,YAAa,WAERypB,EAAY7vB,IAarB,SAAS6vB,EAAY7vB,GACnB,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAskB,EAAmBtkB,IACnBd,IAAS,KAET4lB,EAAQO,KAAK,eACNsF,EAAQ3qB,KAEjB8kB,EAAQM,QAAQplB,GACXgoB,IAAMA,GAAQxD,GAAcxkB,IACjB,KAATA,EAAc8vB,EAAcD,GAarC,SAASC,EAAY9vB,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChC8kB,EAAQM,QAAQplB,GAChBd,IACO2wB,GAEFA,EAAY7vB,ICpHhB,SAAS+vB,GAAajL,EAASC,EAAIkD,EAAKn2B,EAAM89B,EAAYR,GAE/D,IAAIpB,EACJ,OAYA,SAAehuB,GACb,GAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EAMhC,OALA8kB,EAAQI,MAAMpzB,GACdgzB,EAAQI,MAAM0K,GACd9K,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAKuK,GACb5B,EAAkB,KAAThuB,EAAc,GAAKA,EACrBgwB,EAET,OAAO/H,EAAIjoB,IAeb,SAASgwB,EAAMhwB,GACb,OAAIA,IAASguB,GACXlJ,EAAQI,MAAM0K,GACd9K,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAKuK,GACb9K,EAAQO,KAAKvzB,GACNizB,IAETD,EAAQI,MAAMkK,GACPzE,EAAQ3qB,IAajB,SAAS2qB,EAAQ3qB,GACf,OAAIA,IAASguB,GACXlJ,EAAQO,KAAK+J,GACNY,EAAMhC,IAEF,OAAThuB,EACKioB,EAAIjoB,GAITskB,EAAmBtkB,IAErB8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACNR,GAAaC,EAAS6F,EAAS,gBAExC7F,EAAQI,MAAM,cAAe,CAC3B9e,YAAa,WAERgoB,EAAOpuB,IAQhB,SAASouB,EAAOpuB,GACd,OAAIA,IAASguB,GAAmB,OAAThuB,GAAiBskB,EAAmBtkB,IACzD8kB,EAAQO,KAAK,eACNsF,EAAQ3qB,KAEjB8kB,EAAQM,QAAQplB,GACA,KAATA,EAAciwB,EAAS7B,GAahC,SAAS6B,EAAOjwB,GACd,OAAIA,IAASguB,GAAmB,KAAThuB,GACrB8kB,EAAQM,QAAQplB,GACTouB,GAEFA,EAAOpuB,IChIX,SAASkwB,GAAkBpL,EAASC,GAEzC,IAAIiD,EACJ,OAGA,SAAS93B,EAAM8P,GACb,GAAIskB,EAAmBtkB,GAKrB,OAJA8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACb2C,GAAO,EACA93B,EAET,GAAIs0B,GAAcxkB,GAChB,OAAO6kB,GACLC,EACA50B,EACA83B,EAAO,aAAe,aAHjBnD,CAIL7kB,GAEJ,OAAO+kB,EAAG/kB,IC3BP,SAASmwB,GAAoBriC,GAClC,OACEA,EAEG0B,QAAQ,cAAe,KAEvBA,QAAQ,SAAU,IAOlBkJ,cACA4C,cCdA,MAAM80B,GAAa,CACxBziC,KAAM,aACN23B,SAaF,SAA4BR,EAASC,EAAIkD,GACvC,MAAMhuB,EAAO1J,KAEb,IAAI8/B,EACJ,OAYA,SAAerwB,GAKb,OADA8kB,EAAQI,MAAM,cAchB,SAAgBllB,GAGd,OAAO2vB,GAAa1iC,KAClBgN,EACA6qB,EACAwL,EAEArI,EACA,kBACA,wBACA,wBARK0H,CASL3vB,GAzBK6jB,CAAO7jB,IAsChB,SAASswB,EAAWtwB,GAIlB,OAHAqwB,EAAaF,GACXl2B,EAAK+vB,eAAe/vB,EAAKusB,OAAOvsB,EAAKusB,OAAO73B,OAAS,GAAG,IAAI4C,MAAM,GAAI,IAE3D,KAATyO,GACF8kB,EAAQI,MAAM,oBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,oBACNkL,GAEFtI,EAAIjoB,GAab,SAASuwB,EAAYvwB,GAEnB,OAAOukB,EAA0BvkB,GAC7BkwB,GAAkBpL,EAAS0L,EAA3BN,CAA8ClwB,GAC9CwwB,EAAkBxwB,GAaxB,SAASwwB,EAAkBxwB,GACzB,OAAOgvB,GACLlK,EACA2L,EAEAxI,EACA,wBACA,+BACA,qCACA,2BACA,8BATK+G,CAULhvB,GAaJ,SAASywB,EAAiBzwB,GACxB,OAAO8kB,EAAQU,QAAQkL,GAAarI,EAAOA,EAApCvD,CAA2C9kB,GAepD,SAASqoB,EAAMroB,GACb,OAAOwkB,GAAcxkB,GACjB6kB,GAAaC,EAAS6L,EAAiB,aAAvC9L,CAAqD7kB,GACrD2wB,EAAgB3wB,GAetB,SAAS2wB,EAAgB3wB,GACvB,OAAa,OAATA,GAAiBskB,EAAmBtkB,IACtC8kB,EAAQO,KAAK,cAKbprB,EAAKgN,OAAO2pB,QAAQz/B,KAAKk/B,GAKlBtL,EAAG/kB,IAELioB,EAAIjoB,MApLT0wB,GAAc,CAClBpL,SA2LF,SAA6BR,EAASC,EAAIkD,GACxC,OAcA,SAAqBjoB,GACnB,OAAOukB,EAA0BvkB,GAC7BkwB,GAAkBpL,EAAS+L,EAA3BX,CAAyClwB,GACzCioB,EAAIjoB,IAcV,SAAS6wB,EAAa7wB,GACpB,OAAO+vB,GACLjL,EACAgM,EACA7I,EACA,kBACA,wBACA,wBANK8H,CAOL/vB,GAaJ,SAAS8wB,EAAW9wB,GAClB,OAAOwkB,GAAcxkB,GACjB6kB,GAAaC,EAASiM,EAA8B,aAApDlM,CAAkE7kB,GAClE+wB,EAA6B/wB,GAanC,SAAS+wB,EAA6B/wB,GACpC,OAAgB,OAATA,GAAiBskB,EAAmBtkB,GAAQ+kB,EAAG/kB,GAAQioB,EAAIjoB,KAhQpEsoB,SAAS,GCjBJ,MAAM0I,GAAe,CAC1BrjC,KAAM,eACN23B,SAaF,SAA8BR,EAASC,EAAIkD,GACzC,MAAMhuB,EAAO1J,KACb,OAgBA,SAAeyP,GAMb,OAHA8kB,EAAQI,MAAM,gBAGPL,GAAaC,EAASmM,EAAa,aAAc,EAAjDpM,CAAwD7kB,IAajE,SAASixB,EAAYjxB,GACnB,MAAM6N,EAAO5T,EAAKusB,OAAOvsB,EAAKusB,OAAO73B,OAAS,GAC9C,OAAOkf,GACY,eAAjBA,EAAK,GAAG/b,MACR+b,EAAK,GAAGmc,eAAenc,EAAK,IAAI,GAAMlf,QAAU,EAC9Cg8B,EAAQ3qB,GACRioB,EAAIjoB,GAaV,SAAS2qB,EAAQ3qB,GACf,OAAa,OAATA,EACKqoB,EAAMroB,GAEXskB,EAAmBtkB,GACd8kB,EAAQU,QAAQ0L,GAAcvG,EAAStC,EAAvCvD,CAA8C9kB,IAEvD8kB,EAAQI,MAAM,iBACPkJ,EAAOpuB,IAahB,SAASouB,EAAOpuB,GACd,OAAa,OAATA,GAAiBskB,EAAmBtkB,IACtC8kB,EAAQO,KAAK,iBACNsF,EAAQ3qB,KAEjB8kB,EAAQM,QAAQplB,GACTouB,GAIT,SAAS/F,EAAMroB,GAKb,OAJA8kB,EAAQO,KAAK,gBAINN,EAAG/kB,MArGRkxB,GAAe,CACnB5L,SA4GF,SAA8BR,EAASC,EAAIkD,GACzC,MAAMhuB,EAAO1J,KACb,OAAO2gC,EAaP,SAASA,EAAalxB,GAGpB,OAAI/F,EAAKgN,OAAOogB,KAAKptB,EAAKgS,MAAM9b,MACvB83B,EAAIjoB,GAETskB,EAAmBtkB,IACrB8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACN6L,GASFrM,GAAaC,EAASmM,EAAa,aAAc,EAAjDpM,CAAwD7kB,GAajE,SAASixB,EAAYjxB,GACnB,MAAM6N,EAAO5T,EAAKusB,OAAOvsB,EAAKusB,OAAO73B,OAAS,GAC9C,OAAOkf,GACY,eAAjBA,EAAK,GAAG/b,MACR+b,EAAK,GAAGmc,eAAenc,EAAK,IAAI,GAAMlf,QAAU,EAC9Co2B,EAAG/kB,GACHskB,EAAmBtkB,GACnBkxB,EAAalxB,GACbioB,EAAIjoB,KAlKVsoB,SAAS,GCDJ,MAAM6I,GAAa,CACxBxjC,KAAM,aACN23B,SA2DF,SAA4BR,EAASC,EAAIkD,GACvC,IAAI/oB,EAAO,EACX,OAYA,SAAec,GAGb,OADA8kB,EAAQI,MAAM,cAchB,SAAgBllB,GAEd,OADA8kB,EAAQI,MAAM,sBACPkM,EAAapxB,GAfb6jB,CAAO7jB,IA4BhB,SAASoxB,EAAapxB,GACpB,OAAa,KAATA,GAAed,IAAS,GAC1B4lB,EAAQM,QAAQplB,GACToxB,GAII,OAATpxB,GAAiBukB,EAA0BvkB,IAC7C8kB,EAAQO,KAAK,sBACNsF,EAAQ3qB,IAEVioB,EAAIjoB,GAab,SAAS2qB,EAAQ3qB,GACf,OAAa,KAATA,GACF8kB,EAAQI,MAAM,sBACPmM,EAAgBrxB,IAEZ,OAATA,GAAiBskB,EAAmBtkB,IACtC8kB,EAAQO,KAAK,cAINN,EAAG/kB,IAERwkB,GAAcxkB,GACT6kB,GAAaC,EAAS6F,EAAS,aAA/B9F,CAA6C7kB,IAKtD8kB,EAAQI,MAAM,kBACPhf,EAAKlG,IAed,SAASqxB,EAAgBrxB,GACvB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACTqxB,IAETvM,EAAQO,KAAK,sBACNsF,EAAQ3qB,IAajB,SAASkG,EAAKlG,GACZ,OAAa,OAATA,GAA0B,KAATA,GAAeukB,EAA0BvkB,IAC5D8kB,EAAQO,KAAK,kBACNsF,EAAQ3qB,KAEjB8kB,EAAQM,QAAQplB,GACTkG,KA1LToJ,QAIF,SAA2BkX,EAAQnsB,GACjC,IAGI3J,EAEA85B,EALAZ,EAAapD,EAAO73B,OAAS,EAC7B42B,EAAe,EAOkB,eAAjCiB,EAAOjB,GAAc,GAAGzzB,OAC1ByzB,GAAgB,GAKhBqE,EAAa,EAAIrE,GACc,eAA/BiB,EAAOoD,GAAY,GAAG93B,OAEtB83B,GAAc,GAGiB,uBAA/BpD,EAAOoD,GAAY,GAAG93B,OACrByzB,IAAiBqE,EAAa,GAC5BA,EAAa,EAAIrE,GACmB,eAAnCiB,EAAOoD,EAAa,GAAG,GAAG93B,QAE9B83B,GAAcrE,EAAe,IAAMqE,EAAa,EAAI,GAElDA,EAAarE,IACf70B,EAAU,CACRoB,KAAM,iBACN5B,MAAOs2B,EAAOjB,GAAc,GAAGr1B,MAC/BM,IAAKg2B,EAAOoD,GAAY,GAAGp5B,KAE7Bg6B,EAAO,CACL14B,KAAM,YACN5B,MAAOs2B,EAAOjB,GAAc,GAAGr1B,MAC/BM,IAAKg2B,EAAOoD,GAAY,GAAGp5B,IAC3B4V,YAAa,QAEf4Q,EAAOwP,EAAQjB,EAAcqE,EAAarE,EAAe,EAAG,CAC1D,CAAC,QAAS70B,EAAS2J,GACnB,CAAC,QAASmwB,EAAMnwB,GAChB,CAAC,OAAQmwB,EAAMnwB,GACf,CAAC,OAAQ3J,EAAS2J,MAGtB,OAAOmsB,IC3DF,MAAM8K,GAAkB,CAC7B3jC,KAAM,kBACN23B,SAkEF,SAAiCR,EAASC,EAAIkD,GAC5C,MAAMhuB,EAAO1J,KAEb,IAAIy9B,EACJ,OAaA,SAAehuB,GACb,IAEIuxB,EAFA5uB,EAAQ1I,EAAKusB,OAAO73B,OAIxB,KAAOgU,KAGL,GACiC,eAA/B1I,EAAKusB,OAAO7jB,GAAO,GAAG7Q,MACS,eAA/BmI,EAAKusB,OAAO7jB,GAAO,GAAG7Q,MACS,YAA/BmI,EAAKusB,OAAO7jB,GAAO,GAAG7Q,KACtB,CACAy/B,EAA2C,cAA/Bt3B,EAAKusB,OAAO7jB,GAAO,GAAG7Q,KAClC,MAMJ,IAAKmI,EAAKgN,OAAOogB,KAAKptB,EAAKgS,MAAM9b,QAAU8J,EAAK8sB,WAAawK,GAG3D,OAFAzM,EAAQI,MAAM,qBACd8I,EAAShuB,EAiBb,SAAgBA,GAEd,OADA8kB,EAAQI,MAAM,6BACPkJ,EAAOpuB,GAlBL6jB,CAAO7jB,GAEhB,OAAOioB,EAAIjoB,IA8Bb,SAASouB,EAAOpuB,GACd,OAAIA,IAASguB,GACXlJ,EAAQM,QAAQplB,GACTouB,IAETtJ,EAAQO,KAAK,6BACNb,GAAcxkB,GACjB6kB,GAAaC,EAASuD,EAAO,aAA7BxD,CAA2C7kB,GAC3CqoB,EAAMroB,IAcZ,SAASqoB,EAAMroB,GACb,OAAa,OAATA,GAAiBskB,EAAmBtkB,IACtC8kB,EAAQO,KAAK,qBACNN,EAAG/kB,IAELioB,EAAIjoB,KApKb8tB,UAIF,SAAkCtH,EAAQnsB,GAExC,IAEI3J,EAEA85B,EAEA4F,EANAztB,EAAQ6jB,EAAO73B,OAUnB,KAAOgU,KACL,GAAyB,UAArB6jB,EAAO7jB,GAAO,GAAgB,CAChC,GAA8B,YAA1B6jB,EAAO7jB,GAAO,GAAG7Q,KAAoB,CACvCpB,EAAUiS,EACV,MAE4B,cAA1B6jB,EAAO7jB,GAAO,GAAG7Q,OACnB04B,EAAO7nB,OAKqB,YAA1B6jB,EAAO7jB,GAAO,GAAG7Q,MAEnB00B,EAAOxP,OAAOrU,EAAO,GAElBytB,GAAwC,eAA1B5J,EAAO7jB,GAAO,GAAG7Q,OAClCs+B,EAAaztB,GAInB,MAAM6uB,EAAU,CACd1/B,KAAM,gBACN5B,MAAO5D,OAAOsQ,OAAO,GAAI4pB,EAAOgE,GAAM,GAAGt6B,OACzCM,IAAKlE,OAAOsQ,OAAO,GAAI4pB,EAAOA,EAAO73B,OAAS,GAAG,GAAG6B,MAItDg2B,EAAOgE,GAAM,GAAG14B,KAAO,oBAInBs+B,GACF5J,EAAOxP,OAAOwT,EAAM,EAAG,CAAC,QAASgH,EAASn3B,IAC1CmsB,EAAOxP,OAAOoZ,EAAa,EAAG,EAAG,CAAC,OAAQ5J,EAAO91B,GAAS,GAAI2J,IAC9DmsB,EAAO91B,GAAS,GAAGF,IAAMlE,OAAOsQ,OAAO,GAAI4pB,EAAO4J,GAAY,GAAG5/B,MAEjEg2B,EAAO91B,GAAS,GAAK8gC,EAKvB,OADAhL,EAAOr1B,KAAK,CAAC,OAAQqgC,EAASn3B,IACvBmsB,IC1DF,MAAMiL,GAAiB,CAC5B,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,SACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,MAeWC,GAAe,CAAC,MAAO,SAAU,QAAS,YCxE1CC,GAAW,CACtBhkC,KAAM,WACN23B,SAsCF,SAA0BR,EAASC,EAAIkD,GACrC,MAAMhuB,EAAO1J,KAEb,IAAIy9B,EAEA4D,EAEA51B,EAEA2G,EAEAkvB,EACJ,OAYA,SAAe7xB,GAEb,OAaF,SAAgBA,GAId,OAHA8kB,EAAQI,MAAM,YACdJ,EAAQI,MAAM,gBACdJ,EAAQM,QAAQplB,GACT8Q,EAjBA+S,CAAO7jB,IAkChB,SAAS8Q,EAAK9Q,GACZ,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACT8xB,GAEI,KAAT9xB,GACF8kB,EAAQM,QAAQplB,GAChB4xB,GAAa,EACNG,GAEI,KAAT/xB,GACF8kB,EAAQM,QAAQplB,GAChBguB,EAAS,EAMF/zB,EAAK8sB,UAAYhC,EAAKiN,GAI3BlO,EAAW9jB,IACb8kB,EAAQM,QAAQplB,GAEhBhE,EAASqB,OAAOunB,aAAa5kB,GACtBiyB,GAEFhK,EAAIjoB,GAiBb,SAAS8xB,EAAgB9xB,GACvB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GAChBguB,EAAS,EACFkE,GAEI,KAATlyB,GACF8kB,EAAQM,QAAQplB,GAChBguB,EAAS,EACTrrB,EAAQ,EACDwvB,GAILrO,EAAW9jB,IACb8kB,EAAQM,QAAQplB,GAChBguB,EAAS,EAGF/zB,EAAK8sB,UAAYhC,EAAKiN,GAExB/J,EAAIjoB,GAab,SAASkyB,EAAkBlyB,GACzB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GAGT/F,EAAK8sB,UAAYhC,EAAKiN,GAExB/J,EAAIjoB,GAab,SAASmyB,EAAgBnyB,GACvB,MAAMlS,EAAQ,SACd,OAAIkS,IAASlS,EAAM2O,WAAWkG,MAC5BmiB,EAAQM,QAAQplB,GACZ2C,IAAU7U,EAAMa,OAGXsL,EAAK8sB,UAAYhC,EAAKmB,EAExBiM,GAEFlK,EAAIjoB,GAab,SAAS+xB,EAAc/xB,GACrB,OAAI8jB,EAAW9jB,IACb8kB,EAAQM,QAAQplB,GAEhBhE,EAASqB,OAAOunB,aAAa5kB,GACtBiyB,GAEFhK,EAAIjoB,GAeb,SAASiyB,EAAQjyB,GACf,GACW,OAATA,GACS,KAATA,GACS,KAATA,GACAukB,EAA0BvkB,GAC1B,CACA,MAAMoyB,EAAiB,KAATpyB,EACRrS,EAAOqO,EAAOtD,cACpB,OAAK05B,GAAUR,IAAcF,GAAa3S,SAASpxB,GAM/C8jC,GAAe1S,SAAS/iB,EAAOtD,gBACjCs1B,EAAS,EACLoE,GACFtN,EAAQM,QAAQplB,GACTqyB,GAKFp4B,EAAK8sB,UAAYhC,EAAG/kB,GAAQkmB,EAAalmB,KAElDguB,EAAS,EAEF/zB,EAAK8sB,YAAc9sB,EAAKgN,OAAOogB,KAAKptB,EAAKgS,MAAM9b,MAClD83B,EAAIjoB,GACJ4xB,EACAU,EAAwBtyB,GACxBuyB,EAA4BvyB,KAtB9BguB,EAAS,EAGF/zB,EAAK8sB,UAAYhC,EAAG/kB,GAAQkmB,EAAalmB,IAuBpD,OAAa,KAATA,GAAegkB,EAAkBhkB,IACnC8kB,EAAQM,QAAQplB,GAChBhE,GAAUqB,OAAOunB,aAAa5kB,GACvBiyB,GAEFhK,EAAIjoB,GAab,SAASqyB,EAAiBryB,GACxB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GAGT/F,EAAK8sB,UAAYhC,EAAKmB,GAExB+B,EAAIjoB,GAab,SAASsyB,EAAwBtyB,GAC/B,OAAIwkB,GAAcxkB,IAChB8kB,EAAQM,QAAQplB,GACTsyB,GAEFE,EAAYxyB,GA0BrB,SAASuyB,EAA4BvyB,GACnC,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACTwyB,GAII,KAATxyB,GAAwB,KAATA,GAAe8jB,EAAW9jB,IAC3C8kB,EAAQM,QAAQplB,GACTyyB,GAELjO,GAAcxkB,IAChB8kB,EAAQM,QAAQplB,GACTuyB,GAEFC,EAAYxyB,GAiBrB,SAASyyB,EAAsBzyB,GAE7B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAgkB,EAAkBhkB,IAElB8kB,EAAQM,QAAQplB,GACTyyB,GAEFC,EAA2B1yB,GAgBpC,SAAS0yB,EAA2B1yB,GAClC,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACT2yB,GAELnO,GAAcxkB,IAChB8kB,EAAQM,QAAQplB,GACT0yB,GAEFH,EAA4BvyB,GAgBrC,SAAS2yB,EAA6B3yB,GACpC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOioB,EAAIjoB,GAEA,KAATA,GAAwB,KAATA,GACjB8kB,EAAQM,QAAQplB,GAChB6xB,EAAU7xB,EACH4yB,GAELpO,GAAcxkB,IAChB8kB,EAAQM,QAAQplB,GACT2yB,GAEFE,EAA+B7yB,GAexC,SAAS4yB,EAA6B5yB,GACpC,OAAIA,IAAS6xB,GACX/M,EAAQM,QAAQplB,GAChB6xB,EAAU,KACHiB,GAEI,OAAT9yB,GAAiBskB,EAAmBtkB,GAC/BioB,EAAIjoB,IAEb8kB,EAAQM,QAAQplB,GACT4yB,GAaT,SAASC,EAA+B7yB,GACtC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAukB,EAA0BvkB,GAEnB0yB,EAA2B1yB,IAEpC8kB,EAAQM,QAAQplB,GACT6yB,GAcT,SAASC,EAAkC9yB,GACzC,OAAa,KAATA,GAAwB,KAATA,GAAewkB,GAAcxkB,GACvCuyB,EAA4BvyB,GAE9BioB,EAAIjoB,GAab,SAASwyB,EAAYxyB,GACnB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACT+yB,GAEF9K,EAAIjoB,GAab,SAAS+yB,EAAc/yB,GACrB,OAAa,OAATA,GAAiBskB,EAAmBtkB,GAG/BkmB,EAAalmB,GAElBwkB,GAAcxkB,IAChB8kB,EAAQM,QAAQplB,GACT+yB,GAEF9K,EAAIjoB,GAab,SAASkmB,EAAalmB,GACpB,OAAa,KAATA,GAA0B,IAAXguB,GACjBlJ,EAAQM,QAAQplB,GACTgzB,GAEI,KAAThzB,GAA0B,IAAXguB,GACjBlJ,EAAQM,QAAQplB,GACTizB,GAEI,KAATjzB,GAA0B,IAAXguB,GACjBlJ,EAAQM,QAAQplB,GACTkzB,GAEI,KAATlzB,GAA0B,IAAXguB,GACjBlJ,EAAQM,QAAQplB,GACTgyB,GAEI,KAAThyB,GAA0B,IAAXguB,GACjBlJ,EAAQM,QAAQplB,GACTmzB,IAEL7O,EAAmBtkB,IAAqB,IAAXguB,GAA2B,IAAXA,EAQpC,OAAThuB,GAAiBskB,EAAmBtkB,IACtC8kB,EAAQO,KAAK,gBACN+N,EAAkBpzB,KAE3B8kB,EAAQM,QAAQplB,GACTkmB,IAZLpB,EAAQO,KAAK,gBACNP,EAAQmC,MACboM,GACAC,EACAF,EAHKtO,CAIL9kB,IAqBN,SAASozB,EAAkBpzB,GACzB,OAAO8kB,EAAQmC,MACbsM,GACAC,EACAF,EAHKxO,CAIL9kB,GAcJ,SAASwzB,EAAyBxzB,GAIhC,OAHA8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACNoO,EAcT,SAASA,EAAmBzzB,GAC1B,OAAa,OAATA,GAAiBskB,EAAmBtkB,GAC/BozB,EAAkBpzB,IAE3B8kB,EAAQI,MAAM,gBACPgB,EAAalmB,IAatB,SAASgzB,EAA0BhzB,GACjC,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACTgyB,GAEF9L,EAAalmB,GAatB,SAASizB,EAAuBjzB,GAC9B,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GAChBhE,EAAS,GACF03B,GAEFxN,EAAalmB,GAatB,SAAS0zB,EAAsB1zB,GAC7B,GAAa,KAATA,EAAa,CACf,MAAMrS,EAAOqO,EAAOtD,cACpB,OAAIg5B,GAAa3S,SAASpxB,IACxBm3B,EAAQM,QAAQplB,GACTkzB,GAEFhN,EAAalmB,GAEtB,OAAI8jB,EAAW9jB,IAAShE,EAAOrN,OAAS,GACtCm2B,EAAQM,QAAQplB,GAEhBhE,GAAUqB,OAAOunB,aAAa5kB,GACvB0zB,GAEFxN,EAAalmB,GAatB,SAASmzB,EAAwBnzB,GAC/B,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACTgyB,GAEF9L,EAAalmB,GAqBtB,SAASgyB,EAA8BhyB,GACrC,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACTkzB,GAII,KAATlzB,GAA0B,IAAXguB,GACjBlJ,EAAQM,QAAQplB,GACTgyB,GAEF9L,EAAalmB,GAatB,SAASkzB,EAAkBlzB,GACzB,OAAa,OAATA,GAAiBskB,EAAmBtkB,IACtC8kB,EAAQO,KAAK,gBACNiO,EAAkBtzB,KAE3B8kB,EAAQM,QAAQplB,GACTkzB,GAaT,SAASI,EAAkBtzB,GAMzB,OALA8kB,EAAQO,KAAK,YAKNN,EAAG/kB,KAnzBZ8tB,UAeF,SAA2BtH,GACzB,IAAI7jB,EAAQ6jB,EAAO73B,OACnB,KAAOgU,MACoB,UAArB6jB,EAAO7jB,GAAO,IAA4C,aAA1B6jB,EAAO7jB,GAAO,GAAG7Q,QAInD6Q,EAAQ,GAAmC,eAA9B6jB,EAAO7jB,EAAQ,GAAG,GAAG7Q,OAEpC00B,EAAO7jB,GAAO,GAAGzS,MAAQs2B,EAAO7jB,EAAQ,GAAG,GAAGzS,MAE9Cs2B,EAAO7jB,EAAQ,GAAG,GAAGzS,MAAQs2B,EAAO7jB,EAAQ,GAAG,GAAGzS,MAElDs2B,EAAOxP,OAAOrU,EAAQ,EAAG,IAE3B,OAAO6jB,GA7BPK,UAAU,GAINwM,GAAkB,CACtB/N,SAk2BF,SAAiCR,EAASC,EAAIkD,GAC5C,OAaA,SAAejoB,GAIb,OAHA8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACNP,EAAQU,QAAQ4C,GAAWrD,EAAIkD,KAn3BxCK,SAAS,GAELiL,GAA2B,CAC/BjO,SAizBF,SAA0CR,EAASC,EAAIkD,GACrD,MAAMhuB,EAAO1J,KACb,OAaA,SAAeyP,GACb,GAAIskB,EAAmBtkB,GAIrB,OAHA8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACNgD,EAET,OAAOJ,EAAIjoB,IAcb,SAASqoB,EAAMroB,GACb,OAAO/F,EAAKgN,OAAOogB,KAAKptB,EAAKgS,MAAM9b,MAAQ83B,EAAIjoB,GAAQ+kB,EAAG/kB,KAr1B5DsoB,SAAS,GCvBX,MAAMqL,GAAsB,CAC1BrO,SAwbF,SAAqCR,EAASC,EAAIkD,GAChD,MAAMhuB,EAAO1J,KACb,OAOA,SAAeyP,GACb,GAAa,OAATA,EACF,OAAOioB,EAAIjoB,GAKb,OAHA8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACNK,GAQT,SAASA,EAAU1lB,GACjB,OAAO/F,EAAKgN,OAAOogB,KAAKptB,EAAKgS,MAAM9b,MAAQ83B,EAAIjoB,GAAQ+kB,EAAG/kB,KAhd5DsoB,SAAS,GAIEsL,GAAa,CACxBjmC,KAAM,aACN23B,SAQF,SAA4BR,EAASC,EAAIkD,GACvC,MAAMhuB,EAAO1J,KAEPsjC,EAAa,CACjBvO,SA+SF,SAA4BR,EAASC,EAAIkD,GACvC,IAAI/oB,EAAO,EACX,OAAO40B,EAOP,SAASA,EAAY9zB,GAInB,OAHA8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACNn1B,EAeT,SAASA,EAAM8P,GAKb,OADA8kB,EAAQI,MAAM,mBACPV,GAAcxkB,GACjB6kB,GACEC,EACAiP,EACA,aACA95B,EAAKgN,OAAO0c,WAAWuE,QAAQC,KAAKpJ,SAAS,qBACzCzhB,EACA,EANNunB,CAOE7kB,GACF+zB,EAAoB/zB,GAe1B,SAAS+zB,EAAoB/zB,GAC3B,OAAIA,IAASguB,GACXlJ,EAAQI,MAAM,2BACP8O,EAAch0B,IAEhBioB,EAAIjoB,GAeb,SAASg0B,EAAch0B,GACrB,OAAIA,IAASguB,GACX9uB,IACA4lB,EAAQM,QAAQplB,GACTg0B,GAEL90B,GAAQ+0B,GACVnP,EAAQO,KAAK,2BACNb,GAAcxkB,GACjB6kB,GAAaC,EAASoP,EAAoB,aAA1CrP,CAAwD7kB,GACxDk0B,EAAmBl0B,IAElBioB,EAAIjoB,GAeb,SAASk0B,EAAmBl0B,GAC1B,OAAa,OAATA,GAAiBskB,EAAmBtkB,IACtC8kB,EAAQO,KAAK,mBACNN,EAAG/kB,IAELioB,EAAIjoB,KA3ZbsoB,SAAS,GAEX,IAGI0F,EAHAmG,EAAgB,EAChBF,EAAW,EAGf,OAcA,SAAej0B,GAEb,OAeF,SAA4BA,GAC1B,MAAM6N,EAAO5T,EAAKusB,OAAOvsB,EAAKusB,OAAO73B,OAAS,GAS9C,OARAwlC,EACEtmB,GAAyB,eAAjBA,EAAK,GAAG/b,KACZ+b,EAAK,GAAGmc,eAAenc,EAAK,IAAI,GAAMlf,OACtC,EACNq/B,EAAShuB,EACT8kB,EAAQI,MAAM,cACdJ,EAAQI,MAAM,mBACdJ,EAAQI,MAAM,2BACPkM,EAAapxB,GAzBbo0B,CAAmBp0B,IAwC5B,SAASoxB,EAAapxB,GACpB,OAAIA,IAASguB,GACXiG,IACAnP,EAAQM,QAAQplB,GACToxB,GAEL6C,EAAW,EACNhM,EAAIjoB,IAEb8kB,EAAQO,KAAK,2BACNb,GAAcxkB,GACjB6kB,GAAaC,EAASuP,EAAY,aAAlCxP,CAAgD7kB,GAChDq0B,EAAWr0B,IAejB,SAASq0B,EAAWr0B,GAClB,OAAa,OAATA,GAAiBskB,EAAmBtkB,IACtC8kB,EAAQO,KAAK,mBACNprB,EAAK8sB,UACRhC,EAAG/kB,GACH8kB,EAAQmC,MAAM0M,GAAqBW,EAAgBjM,EAAnDvD,CAA0D9kB,KAEhE8kB,EAAQI,MAAM,uBACdJ,EAAQI,MAAM,cAAe,CAC3B9e,YAAa,WAERgZ,EAAKpf,IAed,SAASof,EAAKpf,GACZ,OAAa,OAATA,GAAiBskB,EAAmBtkB,IACtC8kB,EAAQO,KAAK,eACbP,EAAQO,KAAK,uBACNgP,EAAWr0B,IAEhBwkB,GAAcxkB,IAChB8kB,EAAQO,KAAK,eACbP,EAAQO,KAAK,uBACNR,GAAaC,EAASyP,EAAY,aAAlC1P,CAAgD7kB,IAE5C,KAATA,GAAeA,IAASguB,EACnB/F,EAAIjoB,IAEb8kB,EAAQM,QAAQplB,GACTof,GAeT,SAASmV,EAAWv0B,GAClB,OAAa,OAATA,GAAiBskB,EAAmBtkB,GAC/Bq0B,EAAWr0B,IAEpB8kB,EAAQI,MAAM,uBACdJ,EAAQI,MAAM,cAAe,CAC3B9e,YAAa,WAERouB,EAAKx0B,IAed,SAASw0B,EAAKx0B,GACZ,OAAa,OAATA,GAAiBskB,EAAmBtkB,IACtC8kB,EAAQO,KAAK,eACbP,EAAQO,KAAK,uBACNgP,EAAWr0B,IAEP,KAATA,GAAeA,IAASguB,EACnB/F,EAAIjoB,IAEb8kB,EAAQM,QAAQplB,GACTw0B,GAgBT,SAASF,EAAet0B,GACtB,OAAO8kB,EAAQU,QAAQqO,EAAYxL,EAAOoM,EAAnC3P,CAAkD9kB,GAe3D,SAASy0B,EAAcz0B,GAIrB,OAHA8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACNE,EAeT,SAASA,EAAavlB,GACpB,OAAOm0B,EAAgB,GAAK3P,GAAcxkB,GACtC6kB,GACEC,EACA4P,EACA,aACAP,EAAgB,EAJlBtP,CAKE7kB,GACF00B,EAAmB10B,GAezB,SAAS00B,EAAmB10B,GAC1B,OAAa,OAATA,GAAiBskB,EAAmBtkB,GAC/B8kB,EAAQmC,MAAM0M,GAAqBW,EAAgBjM,EAAnDvD,CAA0D9kB,IAEnE8kB,EAAQI,MAAM,iBACPyP,EAAa30B,IAetB,SAAS20B,EAAa30B,GACpB,OAAa,OAATA,GAAiBskB,EAAmBtkB,IACtC8kB,EAAQO,KAAK,iBACNqP,EAAmB10B,KAE5B8kB,EAAQM,QAAQplB,GACT20B,GAeT,SAAStM,EAAMroB,GAEb,OADA8kB,EAAQO,KAAK,cACNN,EAAG/kB,KAnTZ6mB,UAAU,GChBZ,MAAM7yB,GAAU+Q,SAAS2H,cAAc,KAMhC,SAASkoB,GAA8B9mC,GAC5C,MAAM+mC,EAAqB,IAAM/mC,EAAQ,IACzCkG,GAAQ8gC,UAAYD,EACpB,MAAM7qB,EAAOhW,GAAQ+gC,YAUrB,OAAyC,KAArC/qB,EAAKvN,WAAWuN,EAAKrb,OAAS,IAAiC,SAAVb,KAQlDkc,IAAS6qB,GAA6B7qB,GChBxC,MAAM6qB,GAAqB,CAChClnC,KAAM,qBACN23B,SAOF,SAAoCR,EAASC,EAAIkD,GAC/C,MAAMhuB,EAAO1J,KACb,IAEIy0B,EAEAtjB,EAJAxC,EAAO,EAKX,OAgBA,SAAec,GAKb,OAJA8kB,EAAQI,MAAM,sBACdJ,EAAQI,MAAM,4BACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,4BACNvU,GAkBT,SAASA,EAAK9Q,GACZ,OAAa,KAATA,GACF8kB,EAAQI,MAAM,mCACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,mCACN2P,IAETlQ,EAAQI,MAAM,2BACdF,EAAM,GACNtjB,EAAOsiB,EACAl2B,EAAMkS,IAef,SAASg1B,EAAQh1B,GACf,OAAa,KAATA,GAAwB,MAATA,GACjB8kB,EAAQI,MAAM,uCACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,uCACbP,EAAQI,MAAM,2BACdF,EAAM,EACNtjB,EAAO0iB,EACAt2B,IAETg3B,EAAQI,MAAM,2BACdF,EAAM,EACNtjB,EAAOyiB,EACAr2B,EAAMkS,IAoBf,SAASlS,EAAMkS,GACb,GAAa,KAATA,GAAed,EAAM,CACvB,MAAMqC,EAAQujB,EAAQO,KAAK,2BAC3B,OACE3jB,IAASsiB,GACR4Q,GAA8B36B,EAAK+vB,eAAezoB,KAOrDujB,EAAQI,MAAM,4BACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,4BACbP,EAAQO,KAAK,sBACNN,GATEkD,EAAIjoB,GAWf,OAAI0B,EAAK1B,IAASd,IAAS8lB,GACzBF,EAAQM,QAAQplB,GACTlS,GAEFm6B,EAAIjoB,MC7IR,MAAMi1B,GAAkB,CAC7BtnC,KAAM,kBACN23B,SAOF,SAAiCR,EAASC,EAAIkD,GAC5C,OAYA,SAAejoB,GAKb,OAJA8kB,EAAQI,MAAM,mBACdJ,EAAQI,MAAM,gBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,gBACN+I,GAaT,SAASA,EAAOpuB,GAEd,OAAIqkB,EAAiBrkB,IACnB8kB,EAAQI,MAAM,wBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,wBACbP,EAAQO,KAAK,mBACNN,GAEFkD,EAAIjoB,MChDR,MAAMk1B,GAAa,CACxBvnC,KAAM,aACN23B,SAOF,SAA4BR,EAASC,GACnC,OAGA,SAAe/kB,GAIb,OAHA8kB,EAAQI,MAAM,cACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,cACNR,GAAaC,EAASC,EAAI,iBCR9B,MAAMoQ,GAAW,CACtBxnC,KAAM,WACN23B,SA8IF,SAA0BR,EAASC,EAAIkD,GACrC,MAAMhuB,EAAO1J,KACb,IAEI6kC,EAEAxE,EAJAjuB,EAAQ1I,EAAKusB,OAAO73B,OAOxB,KAAOgU,KACL,IACkC,eAA/B1I,EAAKusB,OAAO7jB,GAAO,GAAG7Q,MACU,cAA/BmI,EAAKusB,OAAO7jB,GAAO,GAAG7Q,QACvBmI,EAAKusB,OAAO7jB,GAAO,GAAG0yB,UACvB,CACAD,EAAan7B,EAAKusB,OAAO7jB,GAAO,GAChC,MAGJ,OAiBA,SAAe3C,GAEb,IAAKo1B,EACH,OAAOnN,EAAIjoB,GAYb,GAAIo1B,EAAWE,UACb,OAAOC,EAAYv1B,GAerB,OAbA4wB,EAAU32B,EAAKgN,OAAO2pB,QAAQ7R,SAC5BoR,GACEl2B,EAAK+vB,eAAe,CAClB95B,MAAOklC,EAAW5kC,IAClBA,IAAKyJ,EAAKgS,UAIhB6Y,EAAQI,MAAM,YACdJ,EAAQI,MAAM,eACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,eACbP,EAAQO,KAAK,YACNgD,GAmBT,SAASA,EAAMroB,GAKb,OAAa,KAATA,EACK8kB,EAAQU,QACbgQ,GACAC,EACA7E,EAAU6E,EAAaF,EAHlBzQ,CAIL9kB,GAIS,KAATA,EACK8kB,EAAQU,QACbkQ,GACAD,EACA7E,EAAU+E,EAAmBJ,EAHxBzQ,CAIL9kB,GAIG4wB,EAAU6E,EAAWz1B,GAAQu1B,EAAYv1B,GAiBlD,SAAS21B,EAAiB31B,GACxB,OAAO8kB,EAAQU,QACboQ,GACAH,EACAF,EAHKzQ,CAIL9kB,GAmBJ,SAASy1B,EAAWz1B,GAElB,OAAO+kB,EAAG/kB,GAmBZ,SAASu1B,EAAYv1B,GAEnB,OADAo1B,EAAWC,WAAY,EAChBpN,EAAIjoB,KA1Tb8tB,UAqCF,SAA2BtH,EAAQnsB,GACjC,IAGIkH,EAEAuP,EAEA+kB,EAEAC,EATAnzB,EAAQ6jB,EAAO73B,OACf24B,EAAS,EAWb,KAAO3kB,KAEL,GADApB,EAAQilB,EAAO7jB,GAAO,GAClBmO,EAAM,CAER,GACiB,SAAfvP,EAAMzP,MACU,cAAfyP,EAAMzP,MAAwByP,EAAM+zB,UAErC,MAKuB,UAArB9O,EAAO7jB,GAAO,IAAiC,cAAfpB,EAAMzP,OACxCyP,EAAM+zB,WAAY,QAEf,GAAIO,GACT,GACuB,UAArBrP,EAAO7jB,GAAO,KACE,eAAfpB,EAAMzP,MAAwC,cAAfyP,EAAMzP,QACrCyP,EAAM8zB,YAEPvkB,EAAOnO,EACY,cAAfpB,EAAMzP,MAAsB,CAC9Bw1B,EAAS,EACT,WAGoB,aAAf/lB,EAAMzP,OACf+jC,EAAQlzB,GAGZ,MAAMozB,EAAQ,CACZjkC,KAA+B,cAAzB00B,EAAO1V,GAAM,GAAGhf,KAAuB,OAAS,QACtD5B,MAAO5D,OAAOsQ,OAAO,GAAI4pB,EAAO1V,GAAM,GAAG5gB,OACzCM,IAAKlE,OAAOsQ,OAAO,GAAI4pB,EAAOA,EAAO73B,OAAS,GAAG,GAAG6B,MAEhDwlC,EAAQ,CACZlkC,KAAM,QACN5B,MAAO5D,OAAOsQ,OAAO,GAAI4pB,EAAO1V,GAAM,GAAG5gB,OACzCM,IAAKlE,OAAOsQ,OAAO,GAAI4pB,EAAOqP,GAAO,GAAGrlC,MAEpCg6B,EAAO,CACX14B,KAAM,YACN5B,MAAO5D,OAAOsQ,OAAO,GAAI4pB,EAAO1V,EAAOwW,EAAS,GAAG,GAAG92B,KACtDA,IAAKlE,OAAOsQ,OAAO,GAAI4pB,EAAOqP,EAAQ,GAAG,GAAG3lC,QAuC9C,OArCA4lC,EAAQ,CACN,CAAC,QAASC,EAAO17B,GACjB,CAAC,QAAS27B,EAAO37B,IAInBy7B,EAAQ3kC,EAAK2kC,EAAOtP,EAAOj1B,MAAMuf,EAAO,EAAGA,EAAOwW,EAAS,IAG3DwO,EAAQ3kC,EAAK2kC,EAAO,CAAC,CAAC,QAAStL,EAAMnwB,KAKrCy7B,EAAQ3kC,EACN2kC,EACAzL,GACEhwB,EAAQ4M,OAAO0c,WAAWsS,WAAW9N,KACrC3B,EAAOj1B,MAAMuf,EAAOwW,EAAS,EAAGuO,EAAQ,GACxCx7B,IAKJy7B,EAAQ3kC,EAAK2kC,EAAO,CAClB,CAAC,OAAQtL,EAAMnwB,GACfmsB,EAAOqP,EAAQ,GACfrP,EAAOqP,EAAQ,GACf,CAAC,OAAQG,EAAO37B,KAIlBy7B,EAAQ3kC,EAAK2kC,EAAOtP,EAAOj1B,MAAMskC,EAAQ,IAGzCC,EAAQ3kC,EAAK2kC,EAAO,CAAC,CAAC,OAAQC,EAAO17B,KACrC2c,EAAOwP,EAAQ1V,EAAM0V,EAAO73B,OAAQmnC,GAC7BtP,GArIP6D,WAiBF,SAA4B7D,GAC1B,IAAI7jB,GAAS,EACb,OAASA,EAAQ6jB,EAAO73B,QAAQ,CAC9B,MAAM4S,EAAQilB,EAAO7jB,GAAO,GAEX,eAAfpB,EAAMzP,MACS,cAAfyP,EAAMzP,MACS,aAAfyP,EAAMzP,OAGN00B,EAAOxP,OAAOrU,EAAQ,EAAkB,eAAfpB,EAAMzP,KAAwB,EAAI,GAC3DyP,EAAMzP,KAAO,OACb6Q,KAGJ,OAAO6jB,IA5BHgP,GAAoB,CACxBlQ,SA4TF,SAA0BR,EAASC,EAAIkD,GACrC,OAYA,SAAuBjoB,GAKrB,OAJA8kB,EAAQI,MAAM,YACdJ,EAAQI,MAAM,kBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,kBACN6Q,GAaT,SAASA,EAAel2B,GACtB,OAAOukB,EAA0BvkB,GAC7BkwB,GAAkBpL,EAASqR,EAA3BjG,CAAyClwB,GACzCm2B,EAAan2B,GAanB,SAASm2B,EAAan2B,GACpB,OAAa,KAATA,EACKo2B,EAAYp2B,GAEdgvB,GACLlK,EACAuR,EACAC,EACA,sBACA,6BACA,mCACA,yBACA,4BACA,GATKtH,CAULhvB,GAaJ,SAASq2B,EAAyBr2B,GAChC,OAAOukB,EAA0BvkB,GAC7BkwB,GAAkBpL,EAASyR,EAA3BrG,CAA4ClwB,GAC5Co2B,EAAYp2B,GAalB,SAASs2B,EAA2Bt2B,GAClC,OAAOioB,EAAIjoB,GAab,SAASu2B,EAAgBv2B,GACvB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzB+vB,GACLjL,EACA0R,EACAvO,EACA,gBACA,sBACA,sBANK8H,CAOL/vB,GAEGo2B,EAAYp2B,GAarB,SAASw2B,EAAmBx2B,GAC1B,OAAOukB,EAA0BvkB,GAC7BkwB,GAAkBpL,EAASsR,EAA3BlG,CAAwClwB,GACxCo2B,EAAYp2B,GAalB,SAASo2B,EAAYp2B,GACnB,OAAa,KAATA,GACF8kB,EAAQI,MAAM,kBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,kBACbP,EAAQO,KAAK,YACNN,GAEFkD,EAAIjoB,MAjdT01B,GAAyB,CAC7BpQ,SAwdF,SAA+BR,EAASC,EAAIkD,GAC1C,MAAMhuB,EAAO1J,KACb,OAYA,SAAuByP,GACrB,OAAO2vB,GAAa1iC,KAClBgN,EACA6qB,EACA2R,EACAC,EACA,YACA,kBACA,kBAPK/G,CAQL3vB,IAaJ,SAASy2B,EAAmBz2B,GAC1B,OAAO/F,EAAKgN,OAAO2pB,QAAQ7R,SACzBoR,GACEl2B,EAAK+vB,eAAe/vB,EAAKusB,OAAOvsB,EAAKusB,OAAO73B,OAAS,GAAG,IAAI4C,MAAM,GAAI,KAGtEwzB,EAAG/kB,GACHioB,EAAIjoB,GAaV,SAAS02B,EAAqB12B,GAC5B,OAAOioB,EAAIjoB,MA9gBT41B,GAA8B,CAClCtQ,SAqhBF,SAAoCR,EAASC,EAAIkD,GAC/C,OAcA,SAAiCjoB,GAO/B,OAJA8kB,EAAQI,MAAM,aACdJ,EAAQI,MAAM,mBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,mBACNsR,GAeT,SAASA,EAAuB32B,GAC9B,OAAa,KAATA,GACF8kB,EAAQI,MAAM,mBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,mBACbP,EAAQO,KAAK,aACNN,GAEFkD,EAAIjoB,MC5lBR,MAAM42B,GAAkB,CAC7BjpC,KAAM,kBACN23B,SAQF,SAAiCR,EAASC,EAAIkD,GAC5C,MAAMhuB,EAAO1J,KACb,OAYA,SAAeyP,GAKb,OAJA8kB,EAAQI,MAAM,cACdJ,EAAQI,MAAM,oBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,oBACNvU,GAaT,SAASA,EAAK9Q,GACZ,OAAa,KAATA,GACF8kB,EAAQI,MAAM,eACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,eACbP,EAAQO,KAAK,cACNgD,GAEFJ,EAAIjoB,GA8Bb,SAASqoB,EAAMroB,GAMb,OAAgB,KAATA,GAAe,2BAA4B/F,EAAKgN,OAAO0c,WAC1DsE,EAAIjoB,GACJ+kB,EAAG/kB,KArFTqqB,WAAY8K,GAAS9K,YCUhB,SAASwM,GAAkB72B,GAChC,OACW,OAATA,GACAukB,EAA0BvkB,IAC1B0kB,GAAkB1kB,GAEX,EAELykB,GAAmBzkB,GACd,OADT,ECfK,MAAM82B,GAAY,CACvBnpC,KAAM,YACN23B,SA4KF,SAA2BR,EAASC,GAClC,MAAMgS,EAAmBxmC,KAAK0W,OAAO0c,WAAWoT,iBAAiB5O,KAC3DxC,EAAWp1B,KAAKo1B,SAChB9B,EAASgT,GAAkBlR,GAGjC,IAAIqI,EACJ,OAYA,SAAehuB,GAGb,OAFAguB,EAAShuB,EACT8kB,EAAQI,MAAM,qBACPkJ,EAAOpuB,IAahB,SAASouB,EAAOpuB,GACd,GAAIA,IAASguB,EAEX,OADAlJ,EAAQM,QAAQplB,GACTouB,EAET,MAAM7sB,EAAQujB,EAAQO,KAAK,qBAGrBgD,EAAQwO,GAAkB72B,GAI1B8Q,GACHuX,GAAoB,IAAVA,GAAexE,GAAWkT,EAAiBhY,SAAS/e,GAC3D61B,GACHhS,GAAsB,IAAXA,GAAgBwE,GAAU0O,EAAiBhY,SAAS4G,GAGlE,OAFApkB,EAAMy1B,MAAQhnB,QAAmB,KAAXge,EAAgBld,EAAOA,IAAS+S,IAAWgS,IACjEt0B,EAAM01B,OAASjnB,QAAmB,KAAXge,EAAgB6H,EAAQA,IAAUxN,IAAUvX,IAC5DiU,EAAG/kB,KAhOZqqB,WAQF,SAA6B7D,EAAQnsB,GACnC,IAEIyW,EAEAilB,EAEAvL,EAEA0M,EAEAC,EAEApzB,EAEAqzB,EAEA9P,EAhBA3kB,GAAS,EAsBb,OAASA,EAAQ6jB,EAAO73B,QAEtB,GACuB,UAArB63B,EAAO7jB,GAAO,IACY,sBAA1B6jB,EAAO7jB,GAAO,GAAG7Q,MACjB00B,EAAO7jB,GAAO,GAAGs0B,OAKjB,IAHAnmB,EAAOnO,EAGAmO,KAEL,GACsB,SAApB0V,EAAO1V,GAAM,IACY,sBAAzB0V,EAAO1V,GAAM,GAAGhf,MAChB00B,EAAO1V,GAAM,GAAGkmB,OAEhB38B,EAAQ2vB,eAAexD,EAAO1V,GAAM,IAAIrU,WAAW,KACjDpC,EAAQ2vB,eAAexD,EAAO7jB,GAAO,IAAIlG,WAAW,GACtD,CAKA,IACG+pB,EAAO1V,GAAM,GAAGmmB,QAAUzQ,EAAO7jB,GAAO,GAAGq0B,SAC3CxQ,EAAO7jB,GAAO,GAAGnS,IAAI82B,OAASd,EAAO7jB,GAAO,GAAGzS,MAAMo3B,QAAU,MAE7Dd,EAAO1V,GAAM,GAAGtgB,IAAI82B,OACnBd,EAAO1V,GAAM,GAAG5gB,MAAMo3B,OACtBd,EAAO7jB,GAAO,GAAGnS,IAAI82B,OACrBd,EAAO7jB,GAAO,GAAGzS,MAAMo3B,QACzB,GAGF,SAIFvjB,EACEyiB,EAAO1V,GAAM,GAAGtgB,IAAI82B,OAASd,EAAO1V,GAAM,GAAG5gB,MAAMo3B,OAAS,GAC5Dd,EAAO7jB,GAAO,GAAGnS,IAAI82B,OAASd,EAAO7jB,GAAO,GAAGzS,MAAMo3B,OAAS,EAC1D,EACA,EACN,MAAMp3B,EAAQ5D,OAAOsQ,OAAO,GAAI4pB,EAAO1V,GAAM,GAAGtgB,KAC1CA,EAAMlE,OAAOsQ,OAAO,GAAI4pB,EAAO7jB,GAAO,GAAGzS,OAC/CmnC,GAAUnnC,GAAQ6T,GAClBszB,GAAU7mC,EAAKuT,GACfmzB,EAAkB,CAChBplC,KAAMiS,EAAM,EAAI,iBAAmB,mBACnC7T,MAAAA,EACAM,IAAKlE,OAAOsQ,OAAO,GAAI4pB,EAAO1V,GAAM,GAAGtgB,MAEzC2mC,EAAkB,CAChBrlC,KAAMiS,EAAM,EAAI,iBAAmB,mBACnC7T,MAAO5D,OAAOsQ,OAAO,GAAI4pB,EAAO7jB,GAAO,GAAGzS,OAC1CM,IAAAA,GAEFg6B,EAAO,CACL14B,KAAMiS,EAAM,EAAI,aAAe,eAC/B7T,MAAO5D,OAAOsQ,OAAO,GAAI4pB,EAAO1V,GAAM,GAAGtgB,KACzCA,IAAKlE,OAAOsQ,OAAO,GAAI4pB,EAAO7jB,GAAO,GAAGzS,QAE1C6lC,EAAQ,CACNjkC,KAAMiS,EAAM,EAAI,SAAW,WAC3B7T,MAAO5D,OAAOsQ,OAAO,GAAIs6B,EAAgBhnC,OACzCM,IAAKlE,OAAOsQ,OAAO,GAAIu6B,EAAgB3mC,MAEzCg2B,EAAO1V,GAAM,GAAGtgB,IAAMlE,OAAOsQ,OAAO,GAAIs6B,EAAgBhnC,OACxDs2B,EAAO7jB,GAAO,GAAGzS,MAAQ5D,OAAOsQ,OAAO,GAAIu6B,EAAgB3mC,KAC3D4mC,EAAa,GAGT5Q,EAAO1V,GAAM,GAAGtgB,IAAI82B,OAASd,EAAO1V,GAAM,GAAG5gB,MAAMo3B,SACrD8P,EAAajmC,EAAKimC,EAAY,CAC5B,CAAC,QAAS5Q,EAAO1V,GAAM,GAAIzW,GAC3B,CAAC,OAAQmsB,EAAO1V,GAAM,GAAIzW,MAK9B+8B,EAAajmC,EAAKimC,EAAY,CAC5B,CAAC,QAASrB,EAAO17B,GACjB,CAAC,QAAS68B,EAAiB78B,GAC3B,CAAC,OAAQ68B,EAAiB78B,GAC1B,CAAC,QAASmwB,EAAMnwB,KAMlB+8B,EAAajmC,EACXimC,EACA/M,GACEhwB,EAAQ4M,OAAO0c,WAAWsS,WAAW9N,KACrC3B,EAAOj1B,MAAMuf,EAAO,EAAGnO,GACvBtI,IAKJ+8B,EAAajmC,EAAKimC,EAAY,CAC5B,CAAC,OAAQ5M,EAAMnwB,GACf,CAAC,QAAS88B,EAAiB98B,GAC3B,CAAC,OAAQ88B,EAAiB98B,GAC1B,CAAC,OAAQ07B,EAAO17B,KAIdmsB,EAAO7jB,GAAO,GAAGnS,IAAI82B,OAASd,EAAO7jB,GAAO,GAAGzS,MAAMo3B,QACvDA,EAAS,EACT8P,EAAajmC,EAAKimC,EAAY,CAC5B,CAAC,QAAS5Q,EAAO7jB,GAAO,GAAItI,GAC5B,CAAC,OAAQmsB,EAAO7jB,GAAO,GAAItI,MAG7BitB,EAAS,EAEXtQ,EAAOwP,EAAQ1V,EAAO,EAAGnO,EAAQmO,EAAO,EAAGsmB,GAC3Cz0B,EAAQmO,EAAOsmB,EAAWzoC,OAAS24B,EAAS,EAC5C,MAOR3kB,GAAS,EACT,OAASA,EAAQ6jB,EAAO73B,QACQ,sBAA1B63B,EAAO7jB,GAAO,GAAG7Q,OACnB00B,EAAO7jB,GAAO,GAAG7Q,KAAO,QAG5B,OAAO00B,IA0ET,SAAS6Q,GAAUrb,EAAOsL,GACxBtL,EAAMpsB,QAAU03B,EAChBtL,EAAMsL,QAAUA,EAChBtL,EAAMmP,cAAgB7D,ECtPjB,MAAMgQ,GAAW,CACtB3pC,KAAM,WACN23B,SAOF,SAA0BR,EAASC,EAAIkD,GACrC,IAAI/oB,EAAO,EACX,OAcA,SAAec,GAMb,OALA8kB,EAAQI,MAAM,YACdJ,EAAQI,MAAM,kBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,kBACbP,EAAQI,MAAM,oBACPpU,GAeT,SAASA,EAAK9Q,GACZ,OAAI8jB,EAAW9jB,IACb8kB,EAAQM,QAAQplB,GACTu3B,GAEFC,EAAWx3B,GAepB,SAASu3B,EAAmBv3B,GAE1B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAegkB,EAAkBhkB,IAEjEd,EAAO,EACAu4B,EAAyBz3B,IAE3Bw3B,EAAWx3B,GAepB,SAASy3B,EAAyBz3B,GAChC,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GAChBd,EAAO,EACAw4B,IAKG,KAAT13B,GAAwB,KAATA,GAAwB,KAATA,GAAegkB,EAAkBhkB,KAChEd,IAAS,IAET4lB,EAAQM,QAAQplB,GACTy3B,IAETv4B,EAAO,EACAs4B,EAAWx3B,IAapB,SAAS03B,EAAU13B,GACjB,OAAa,KAATA,GACF8kB,EAAQO,KAAK,oBACbP,EAAQI,MAAM,kBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,kBACbP,EAAQO,KAAK,YACNN,GAII,OAAT/kB,GAA0B,KAATA,GAAwB,KAATA,GAAekkB,EAAalkB,GACvDioB,EAAIjoB,IAEb8kB,EAAQM,QAAQplB,GACT03B,GAaT,SAASF,EAAWx3B,GAClB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACT23B,GAEL1T,EAAWjkB,IACb8kB,EAAQM,QAAQplB,GACTw3B,GAEFvP,EAAIjoB,GAab,SAAS23B,EAAiB33B,GACxB,OAAOgkB,EAAkBhkB,GAAQ43B,EAAW53B,GAAQioB,EAAIjoB,GAa1D,SAAS43B,EAAW53B,GAClB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GAChBd,EAAO,EACAy4B,GAEI,KAAT33B,GAEF8kB,EAAQO,KAAK,oBAAoBvzB,KAAO,gBACxCgzB,EAAQI,MAAM,kBACdJ,EAAQM,QAAQplB,GAChB8kB,EAAQO,KAAK,kBACbP,EAAQO,KAAK,YACNN,GAEF8S,EAAW73B,GAepB,SAAS63B,EAAW73B,GAElB,IAAc,KAATA,GAAegkB,EAAkBhkB,KAAUd,IAAS,GAAI,CAC3D,MAAMvB,EAAgB,KAATqC,EAAc63B,EAAaD,EAExC,OADA9S,EAAQM,QAAQplB,GACTrC,EAET,OAAOsqB,EAAIjoB,MCvNR,MAAM83B,GAAW,CACtBnqC,KAAM,WACN23B,SAOF,SAA0BR,EAASC,EAAIkD,GACrC,MAAMhuB,EAAO1J,KAEb,IAAIy9B,EAEArrB,EAEAqqB,EACJ,OAYA,SAAehtB,GAIb,OAHA8kB,EAAQI,MAAM,YACdJ,EAAQI,MAAM,gBACdJ,EAAQM,QAAQplB,GACT8Q,GAiBT,SAASA,EAAK9Q,GACZ,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACT8xB,GAEI,KAAT9xB,GACF8kB,EAAQM,QAAQplB,GACT+xB,GAEI,KAAT/xB,GACF8kB,EAAQM,QAAQplB,GACT+3B,GAILjU,EAAW9jB,IACb8kB,EAAQM,QAAQplB,GACTg4B,GAEF/P,EAAIjoB,GAiBb,SAAS8xB,EAAgB9xB,GACvB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACTkyB,GAEI,KAATlyB,GACF8kB,EAAQM,QAAQplB,GAChB2C,EAAQ,EACDwvB,GAELrO,EAAW9jB,IACb8kB,EAAQM,QAAQplB,GACTjO,GAEFk2B,EAAIjoB,GAab,SAASkyB,EAAkBlyB,GACzB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACTi4B,GAEFhQ,EAAIjoB,GAab,SAASrO,EAAQqO,GACf,OAAa,OAATA,EACKioB,EAAIjoB,GAEA,KAATA,GACF8kB,EAAQM,QAAQplB,GACTk4B,GAEL5T,EAAmBtkB,IACrBgtB,EAAcr7B,EACPwmC,EAAiBn4B,KAE1B8kB,EAAQM,QAAQplB,GACTrO,GAaT,SAASumC,EAAal4B,GACpB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACTi4B,GAEFtmC,EAAQqO,GAajB,SAASi4B,EAAWj4B,GAClB,OAAgB,KAATA,EACHxP,EAAIwP,GACK,KAATA,EACAk4B,EAAal4B,GACbrO,EAAQqO,GAad,SAASmyB,EAAgBnyB,GACvB,MAAMlS,EAAQ,SACd,OAAIkS,IAASlS,EAAM2O,WAAWkG,MAC5BmiB,EAAQM,QAAQplB,GACT2C,IAAU7U,EAAMa,OAASypC,EAAQjG,GAEnClK,EAAIjoB,GAab,SAASo4B,EAAMp4B,GACb,OAAa,OAATA,EACKioB,EAAIjoB,GAEA,KAATA,GACF8kB,EAAQM,QAAQplB,GACTq4B,GAEL/T,EAAmBtkB,IACrBgtB,EAAcoL,EACPD,EAAiBn4B,KAE1B8kB,EAAQM,QAAQplB,GACTo4B,GAaT,SAASC,EAAWr4B,GAClB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACTs4B,GAEFF,EAAMp4B,GAaf,SAASs4B,EAASt4B,GAChB,OAAa,KAATA,EACKxP,EAAIwP,GAEA,KAATA,GACF8kB,EAAQM,QAAQplB,GACTs4B,GAEFF,EAAMp4B,GAaf,SAASjO,EAAYiO,GACnB,OAAa,OAATA,GAA0B,KAATA,EACZxP,EAAIwP,GAETskB,EAAmBtkB,IACrBgtB,EAAcj7B,EACPomC,EAAiBn4B,KAE1B8kB,EAAQM,QAAQplB,GACTjO,GAaT,SAASgmC,EAAY/3B,GACnB,OAAa,OAATA,EACKioB,EAAIjoB,GAEA,KAATA,GACF8kB,EAAQM,QAAQplB,GACTu4B,GAELjU,EAAmBtkB,IACrBgtB,EAAc+K,EACPI,EAAiBn4B,KAE1B8kB,EAAQM,QAAQplB,GACT+3B,GAaT,SAASQ,EAAiBv4B,GACxB,OAAgB,KAATA,EAAcxP,EAAIwP,GAAQ+3B,EAAY/3B,GAa/C,SAAS+xB,EAAc/xB,GAErB,OAAI8jB,EAAW9jB,IACb8kB,EAAQM,QAAQplB,GACTw4B,GAEFvQ,EAAIjoB,GAab,SAASw4B,EAASx4B,GAEhB,OAAa,KAATA,GAAegkB,EAAkBhkB,IACnC8kB,EAAQM,QAAQplB,GACTw4B,GAEFC,EAAgBz4B,GAazB,SAASy4B,EAAgBz4B,GACvB,OAAIskB,EAAmBtkB,IACrBgtB,EAAcyL,EACPN,EAAiBn4B,IAEtBwkB,GAAcxkB,IAChB8kB,EAAQM,QAAQplB,GACTy4B,GAEFjoC,EAAIwP,GAab,SAASg4B,EAAQh4B,GAEf,OAAa,KAATA,GAAegkB,EAAkBhkB,IACnC8kB,EAAQM,QAAQplB,GACTg4B,GAEI,KAATh4B,GAAwB,KAATA,GAAeukB,EAA0BvkB,GACnD04B,EAAe14B,GAEjBioB,EAAIjoB,GAab,SAAS04B,EAAe14B,GACtB,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACTxP,GAII,KAATwP,GAAwB,KAATA,GAAe8jB,EAAW9jB,IAC3C8kB,EAAQM,QAAQplB,GACT24B,GAELrU,EAAmBtkB,IACrBgtB,EAAc0L,EACPP,EAAiBn4B,IAEtBwkB,GAAcxkB,IAChB8kB,EAAQM,QAAQplB,GACT04B,GAEFloC,EAAIwP,GAab,SAAS24B,EAAqB34B,GAE5B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAgkB,EAAkBhkB,IAElB8kB,EAAQM,QAAQplB,GACT24B,GAEFC,EAA0B54B,GAcnC,SAAS44B,EAA0B54B,GACjC,OAAa,KAATA,GACF8kB,EAAQM,QAAQplB,GACT64B,GAELvU,EAAmBtkB,IACrBgtB,EAAc4L,EACPT,EAAiBn4B,IAEtBwkB,GAAcxkB,IAChB8kB,EAAQM,QAAQplB,GACT44B,GAEFF,EAAe14B,GAcxB,SAAS64B,EAA4B74B,GACnC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOioB,EAAIjoB,GAEA,KAATA,GAAwB,KAATA,GACjB8kB,EAAQM,QAAQplB,GAChBguB,EAAShuB,EACF84B,GAELxU,EAAmBtkB,IACrBgtB,EAAc6L,EACPV,EAAiBn4B,IAEtBwkB,GAAcxkB,IAChB8kB,EAAQM,QAAQplB,GACT64B,IAET/T,EAAQM,QAAQplB,GACT+4B,GAaT,SAASD,EAA4B94B,GACnC,OAAIA,IAASguB,GACXlJ,EAAQM,QAAQplB,GAChBguB,OAAS1wB,EACF07B,GAEI,OAATh5B,EACKioB,EAAIjoB,GAETskB,EAAmBtkB,IACrBgtB,EAAc8L,EACPX,EAAiBn4B,KAE1B8kB,EAAQM,QAAQplB,GACT84B,GAaT,SAASC,EAA8B/4B,GACrC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOioB,EAAIjoB,GAEA,KAATA,GAAwB,KAATA,GAAeukB,EAA0BvkB,GACnD04B,EAAe14B,IAExB8kB,EAAQM,QAAQplB,GACT+4B,GAcT,SAASC,E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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/unified/node_modules/is-buffer/index.js","../node_modules/vfile/node_modules/is-buffer/index.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/platform/common/utils.js","../node_modules/axios/lib/platform/index.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/lib/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    let {responseType, withXSRFToken} = config;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    let contentType;\n\n    if (utils.isFormData(requestData)) {\n      if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else if ((contentType = requestHeaders.getContentType()) !== false) {\n        // fix semicolon duplication issue for ReactNative FormData implementation\n        const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n        requestHeaders.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if(platform.hasStandardBrowserEnv) {\n      withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config));\n\n      if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(fullPath))) {\n        // Add xsrf header\n        const xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n        if (xsrfValue) {\n          requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n        }\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.6.8\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n\n        if (!err.stack) {\n          err.stack = stack;\n          // match without the 2 top stack lines\n        } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n          err.stack += '\\n' + stack\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {void}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\n\n/**\n * Regular expression that matches a unicode punctuation character.\n */\nexport const unicodePunctuationRegex =\n  /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {void}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {void}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | void}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n\n    // @ts-expect-error `Buffer` does allow an encoding.\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCharCode(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n  if (\n    // C0 except for HT, LF, FF, CR, space.\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) ||\n    // Control character (DEL) of C0, and C1 controls.\n    (code > 126 && code < 160) ||\n    // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) ||\n    // Noncharacters.\n    (code > 64975 && code < 65008) /* eslint-disable no-bitwise */ ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 /* eslint-enable no-bitwise */ ||\n    // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options?] | void[], string, Root>}\n */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","u","b","Symbol","for","d","e","f","g","h","k","l","n","p","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","StyleToObject","iterator","output","hasIterator","len","isBuffer","bind","fn","thisArg","apply","getPrototypeOf","kindOf","cache","create","thing","toLowerCase","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","toStringTag","isDate","isFile","isBlob","isFileList","isURLSearchParams","forEach","allOwnKeys","keys","getOwnPropertyNames","findKey","_key","_global","globalThis","self","window","global","isContextDefined","context","isTypedArray","TypedArray","Uint8Array","isHTMLForm","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","toUpperCase","isAsyncFn","isFormData","kind","FormData","append","isArrayBufferView","result","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","stripBOM","charCodeAt","inherits","superConstructor","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","String","undefined","lastIndex","indexOf","toArray","forEachEntry","next","done","pair","matchAll","regExp","matches","hasOwnProp","freezeMethods","set","toObjectSet","arrayOrString","delimiter","define","split","toCamelCase","p1","p2","noop","toFiniteNumber","defaultValue","Number","isFinite","generateString","size","alphabet","Math","random","isSpecCompliantForm","toJSONObject","stack","visit","reducedValue","isThenable","then","catch","AxiosError","message","code","config","request","response","captureStackTrace","utils","toJSON","description","fileName","lineNumber","columnNumber","status","from","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","concat","map","token","join","predicates","test","formData","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","JSON","stringify","some","isFlatArray","el","index","exposedHelpers","build","pop","encode","charMap","encodeURIComponent","AxiosURLSearchParams","params","_pairs","toFormData","encoder","_encode","buildURL","url","serializeFn","serialize","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","clear","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","document","hasStandardBrowserEnv","product","navigator","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","platform","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","transitionalDefaults","adapter","transformRequest","data","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","substring","parseHeaders","get","tokens","tokensRE","parseTokens","has","matcher","delete","deleted","deleteHeader","normalize","format","normalized","w","char","formatHeader","targets","asStrings","first","computed","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","buildAccessors","accessor","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","write","expires","domain","secure","cookie","Date","toGMTString","read","RegExp","decodeURIComponent","remove","now","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","requestURL","samplesCount","min","bytes","timestamps","firstSampleTS","head","tail","chunkLength","startedAt","bytesCount","passed","round","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","knownAdapters","http","xhr","XMLHttpRequest","Promise","resolve","reject","requestData","requestHeaders","onCanceled","withXSRFToken","cancelToken","unsubscribe","signal","removeEventListener","Boolean","auth","username","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","floor","settle","responseText","statusText","open","paramsSerializer","onreadystatechange","readyState","responseURL","setTimeout","onabort","onerror","ontimeout","timeoutErrorMessage","isURLSameOrigin","xsrfValue","cookies","setRequestHeader","withCredentials","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","subscribe","aborted","parseProtocol","send","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","state","s","throwIfCancellationRequested","throwIfRequested","dispatchRequest","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","console","warn","assertOptions","schema","allowUnknown","Axios","instanceConfig","interceptors","InterceptorManager","configOrUrl","_request","dummy","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","stringifyPosition","point","VFileMessage","place","origin","parts","super","fatal","ruleId","file","actual","expected","note","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","normalizeString","proc","cwd","isUrl","fileUrlOrPath","urlToPath","URL","third","getPathFromURLPosix","order","VFile","bufferLike","messages","history","stored","includes","assertNonEmpty","assertPart","stem","encoding","info","fail","part","bail","wrap","middleware","called","parameters","fnExpectsCallback","exception","unified","base","transformers","pipeline","run","values","middlewareIndex","middelware","trough","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","add","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","tree","runSync","complete","assertDone","process","processSync","destination","asyncName","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","children","list","items","chunkStart","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","max","limit","enter","prefix","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","previous","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","seen","nok","disable","null","blankLine","after","partial","subtokenize","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","shift","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","begin","escape","factoryWhitespace","normalizeIdentifier","definition","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","defined","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","media","group","label","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","resolveText","extensions","combineExtensions","defaultConstructs","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","hex","fromMarkdown","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","title","depth","referenceType","ancestor","decodeString","fragment","ordered","checked","compiler","postprocess","atCarriageReturn","endPosition","ceil","preprocess","combined","remarkParse","normalizeUri","skip","convert","castFactory","typeFactory","tests","checks","anyFactory","propsFactory","visitParents","reverse","is","step","factory","parents","subresult","grandparents","toResult","parent","pointStart","pointEnd","clean","footnoteReference","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","properties","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","sup","applyData","revert","subtype","suffix","contents","listItemLoose","trimLines","last","trimLine","codePointAt","blockquote","break","className","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","results","loose","listLoose","disabled","child","root","table","rows","firstRow","tableContent","body","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","definitions","augment","hName","hProperties","hChildren","ctx","generated","to","defaultUnknownHandler","nodes","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","Info","attribute","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","writingSuggestions","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","valid","dash","cap","kebab","camelcase","hastToReact","uriTransformer","uri","colon","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","transformLinkUri","parentSchema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes"],"sourceRoot":""}